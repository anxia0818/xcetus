import{a8 as wo,C as So,V as qo,a9 as fo}from"./entry.1ec416a4.js";import{c as y,a as bo}from"./sha256.1607142f.js";import{I as ko,e as F,C as to,J as W,f as _o,s as g,u as Po,b as mo,a as io,T as uo,j as yo,p as lo}from"./pool.a1ab2514.js";import{C as Bo,V as X}from"./index.e1dae52f.js";import{D as t}from"./decimal.0e8aa3f1.js";function so(n){const l={launchpad:y[n||"Sui"].launchpad,ido:y[n||"Sui"].ido,xcetus:y[n||"Sui"].xcetus,xcetus_dividends:y[n||"Sui"].xcetus_dividends,cetus_faucet:y[n||"Sui"].cetus_faucet,xtoken:y[n||"Sui"].xtoken,xtoken_dividends:y[n||"Sui"].xtoken_dividends,token_faucet:y[n||"Sui"].token_faucet,booster:y[n||"Sui"].booster,maker_bonus:y[n||"Sui"].maker_bonus,liquidity_stratefy:y[n||"Sui"].liquidity_stratefy,vaults:y[n||"Sui"].vaults},_={fullRpcUrl:localStorage.getItem(`${n}-currentRpclocal2`)||y[n||"Sui"].fullRpcUrl,simulationAccount:y[n||"Sui"].simulationAccount,cetus_config:y[n||"Sui"].cetus_config,clmm_pool:y[n||"Sui"].clmm_pool,integrate:y[n||"Sui"].integrate,deepbook:y[n||"Sui"].deepbook,deepbook_endpoint_v2:y[n||"Sui"].deepbook_endpoint_v2,aggregatorUrl:y[n||"Sui"].aggregatorUrl},u=new ko(_),e=wo(new Bo(l,u)),p=bo(),D=So(()=>p);qo(()=>{D.value.address&&(u.senderAddress=D.value.address)});const Y=async()=>{console.log(e,"sdk###");const o=await e.Vaults.getVaultList();return o&&o.data||[]},v=async o=>await e.Vaults.getVault(o),i=async o=>{if(console.log(o,"###coinType"),u.senderAddress){const a=await e.ClmmSDK.fullClient.getBalance({owner:u.senderAddress,coinType:o});return a&&a.totalBalance}else return 0},c=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:Y,getLpBalance:i,getVault:async o=>{const a=await e.Vaults.getVault(o);return console.log(a,"vault##292"),a},deposit:async o=>{const{lowerTick:a,upperTick:f,slippage:A,rewarder_coin_types:x,isOnlyA:k,isOnlyB:T,currentTickIndex:w}=o;console.log(o,"params###");let m=o.fix_amount_a,d,h,s;if(k||T){const q=await e.Vaults.calculateDepositSwapAmount({lowerTick:a,upperTick:f,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool});console.log(q,"swapResut##211"),q?(d=new F(q.swapOutAmount),h=new F(q.afterSqrtPrice),s={swap_amount:q.swapInAmount,a2b:m},m=!m):(h=new F(o.curSqrtPrice),d=new F(o.coinAmount))}else h=o.curSqrtPrice,d=new F(o.coinAmount);let S,P,O;console.log(a,w,f,"####138"),w>=a&&w<=f?(S=to.estLiquidityAndcoinAmountFromOneAmounts(a,f,d,m,!0,A,h),P=m?d.toString():S.tokenMaxA.toString(),O=m?S.tokenMaxB.toString():d.toString()):w<a?(P=d.toNumber(),O=0):w>f&&(P=0,O=d.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:P,amount_b:O,fix_amount_a:m,slippage:A,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:s},"params171");const E=await e.Vaults.deposit({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:P,amount_b:O,fix_amount_a:m,slippage:A,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:s});return c(E)},remove:async o=>{const{lowerTick:a,upperTick:f,coinTypeA:A,coinTypeB:x,receiveAmount:k,clmm_pool:T,lowerSqrtPrice:w,upperSqrtPrice:m,fix_amount_a:d,curSqrtPrice:h,slippage:s,rewarder_coin_types:S,id:P,liquidity:O,swapParams:E,isOnlyA:q,isOnlyB:I,sliderVal:U,positionInfo:G}=o;console.log(U,"sliderVal##");const L=await v(P),Z=await u.Pool.getPool(L.pool_id);let C,b,Q,R,V,K,B;if(console.log(k,"##receiveAmount"),q||I){if(C=await e.Vaults.calculateRemoveSwapAmount({lowerTick:a,upperTick:f,curSqrtPrice:Z.current_sqrt_price,fix_amount_a:d,receive_amount:k,coinTypeA:A,coinTypeB:x,clmm_pool:T}),console.log(C,"swapResut###"),C){const H=X.get_share_liquidity_by_amount(L,G.balance);b=to.getCoinAmountFromLiquidity(new F(U==100?H:C.liquidity),new F(Z.current_sqrt_price),w,m,!1),Q=X.get_protocol_fee_amount(L,b.coinA.toString()),R=X.get_protocol_fee_amount(L,b.coinB.toString()),V=U==100?G.balance:X.get_lp_amount_by_liquidity(L,C.liquidity),K=W(b.coinA.toString()).mul(W(1-o.slippage)),B=W(b.coinB.toString()).mul(W(1-o.slippage)),console.log(K.toString(),"##minAmountA"),console.log(B.toString(),"##minAmountA")}}else{const H=X.get_share_liquidity_by_amount(L,U==100?G.balance:V);b=to.getCoinAmountFromLiquidity(new F(H),h,w,m,!1),Q=X.get_protocol_fee_amount(L,b.coinA.toString()),R=X.get_protocol_fee_amount(L,b.coinB.toString()),V=o.lpTokenAmount,K=W(b.coinA.toString()).mul(W(1-o.slippage)),B=W(b.coinB.toString()).mul(W(1-o.slippage)),console.log(Q,R,"##protocol_fee_amount_b")}console.log(V,"lpTokenAmount remove");const J={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:V,min_amount_a:_o(K,0)||"",min_amount_b:_o(B,0)||"",rewarder_coin_types:[]};console.log(J,"##removeParams"),(q||I)&&(J.swapParams={a2b:!d,swap_amount:C==null?void 0:C.swapInAmount});const $=await e.Vaults.remove(J);return c($)},getAutoPool:v,calculateDepositSwapAmount:async o=>{const{lowerTick:a,upperTick:f,curSqrtPrice:A,fix_amount_a:x,input_amount:k,coinTypeA:T,coinTypeB:w,clmm_pool:m,slippage:d,decimals:h}=o;console.log(o,"params###");const s=await e.Vaults.calculateDepositSwapAmount({lowerTick:a,upperTick:f,curSqrtPrice:A,fix_amount_a:x,input_amount:k,coinTypeA:T,coinTypeB:w,clmm_pool:m});if(console.log(s,"##swapResut"),s){const S=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:g(S.sub(S.mul(d)).toNumber(),h)}}return s},calculateRemoveSwapAmount:async o=>{const{lowerTick:a,upperTick:f,curSqrtPrice:A,fix_amount_a:x,receiveAmount:k,coinTypeA:T,coinTypeB:w,clmm_pool:m,slippage:d,decimals:h}=o;console.log(o,"params###");const s=await e.Vaults.calculateRemoveSwapAmount({lowerTick:a,upperTick:f,curSqrtPrice:A,fix_amount_a:x,receive_amount:k,coinTypeA:T,coinTypeB:w,clmm_pool:m});if(console.log(s,"###swapResut calculateRemoveSwapAmount"),s){const S=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:g(S.sub(S.mul(d)).toNumber(),h)}}return s}}}const Lo=fo("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING",slippage:localStorage.getItem("cetus-auto-slippage")||"0.1"}),getters:{getPoolStore(){return Po()}},actions:{async getAutoPoolList(){const l=await so("Sui").getAutoPools();console.log(l,"list###");const _=this.getPoolStore,u=l.map(e=>({..._.poolConfigObj[e.pool_id],id:e.id,lp_token_type:e.lp_token_type,autoPoolPositionInfo:e.positins[0],is_pause:e.is_pause,total_supply:e.total_supply,liquidity:e.liquidity,protocol_fee_rate:e.protocol_fee_rate,max_liquidity_quota:e.max_liquidity_quota}));this.autoPoolList=u,this.autoPoolObj=Object.fromEntries(u.map((e,p)=>[e.address,e])),this.getMyAutoPoolPosition(),console.log(u,"##autoPoolList")},async getMyAutoPoolPosition(){var p,D,Y;const n=so("Sui"),l=this.autoPoolList,_=mo("Sui"),u=[],{RATES:e}=this.getPoolStore;for(let v=0;v<l.length;v++){const i=l[v];console.log(i,"poolINfo###");const c=await _.getPool(i.address),r=await n.getLpBalance(l[v].lp_token_type);console.log(r,"balance##");const j=(await _.getTokenListByCoinType([l[v].lp_token_type]))[0];console.log(j,"lpInfo##");const z=((p=e[i.coinA.address])==null?void 0:p.price)||"",M=((D=e[i.coinB.address])==null?void 0:D.price)||"",N=i.autoPoolPositionInfo.tick_lower_index,o=i.autoPoolPositionInfo.tick_upper_index,a={tick_lower_index:N,tick_upper_index:o,current_sqrt_price:c==null?void 0:c.current_sqrt_price,liquidity:Number(r)>0?X.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},r):0},f=await _.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:c==null?void 0:c.current_sqrt_price},position:a,roundUp:!1});console.log(f,"##amountInfo");const A=f.coinaAmount,x=f.coinbAmount,k=A,T=x,w=i.coinA.decimals,m=i.coinB.decimals,d=_.TickMath.tickIndexToPrice(Number(N),w,m).toString(),h=_.TickMath.tickIndexToPrice(Number(o),w,m).toString(),s=new t(z).mul(new t(A)).toNumber(),S=new t(M).mul(new t(x)).toNumber(),P=s>0&&s<.01?"<$0.01":`$${io(g(s,2))}`,O=S>0&&S<.01?"<$0.01":`$${io(g(S,2))}`,E=uo.sqrtPriceX64ToPrice(c.current_sqrt_price,w,m),q=await _.getCoinAmountFromLiquidity({pool:{...i,tick_lower_index:N,tick_upper_index:o,current_sqrt_price:c==null?void 0:c.current_sqrt_price},position:{...a,liquidity:i.liquidity},roundUp:!1}),I=new t(q.coinaAmount).toNumber(),U=new t(q.coinbAmount).toNumber();console.log(I,U,E.toString(),"###116");const G=g(new t(I).mul(new t(z)).toNumber(),2),L=g(new t(U).mul(new t(M)).toNumber(),2);console.log(c,"newPool##"),console.log(I,U,"###131");const{ratioA:Z,ratioB:C}=to.calculateDepositRatioFixTokenA(N,o,new F.BN(c==null?void 0:c.current_sqrt_price));console.log(Z.toString(),C.toString(),"###139");const b=Number(g(Z.toString(),2))*100,Q=100-b;console.log(I,U,b,Q,"###147");let R=0;Number(r)>0&&(R=new t(r).div(Math.pow(10,j.decimals)));const V=z&&M?g(new t(s).add(new t(S)).toString(),2):"--",K=i.total_supply;let B=0;R>0&&K>0&&(B=new t(R).mul(Math.pow(10,j.decimals)).div(new t(K)).mul(100).toNumber()),console.log(B,"##myShare");const J=new t(1).div(Math.pow(10,i.decimals)).toNumber();let $=0;if(B>1)$=g(B,2);else if(B>0&&B<J)$=`<${J}`;else if(B==0)$=0;else{const po=yo(B),Ao=po==-1?2:po+2;$=g(B,Ao)}console.log(r,R.toString(),"###balance");const H={tick_lower_index:N,tick_upper_index:o,current_sqrt_price:c==null?void 0:c.current_sqrt_price,liquidity:i.max_liquidity_quota},oo=await _.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:c==null?void 0:c.current_sqrt_price},position:H,roundUp:!1}),eo=new t(z).mul(new t(oo.coinaAmount)),no=new t(M).mul(new t(oo.coinbAmount)),co=new t(z).mul(new t(q.coinaAmount)),go=new t(M).mul(new t(q.coinbAmount)),ro=eo.add(no).toNumber(),ao=co.add(go).toNumber();this.positionInfoObj[i.id]={tick_lower_index:N,tick_upper_index:o,current_sqrt_price:c.current_sqrt_price,myLiquidity:lo(r,j.decimals),amountA:k,amountB:T,...i,lpInfo:j,myAmountAUSD:P,myAmountBUSD:O,myLiquidityUSD:V,myShare:$,minPrice:d,maxPrice:h,poolCoinARatio:b,poolCoinBRatio:Q,poolCoinANum:I,poolCoinBNum:U,poolCoinAUSD:G,poolCoinBUSD:L,quoteUSD:ro,poolUSD:ao,balance:r},u.push({tick_lower_index:N,tick_upper_index:o,current_sqrt_price:(Y=i==null?void 0:i.object)==null?void 0:Y.current_sqrt_price,myLiquidity:lo(r,j.decimals),amountA:k,amountB:T,...i,lpInfo:j,myAmountAUSD:P,myAmountBUSD:O,myLiquidityUSD:V,myShare:$,minPrice:d,maxPrice:h,poolCoinARatio:b,poolCoinBRatio:Q,poolCoinANum:I,poolCoinBNum:U,poolCoinAUSD:G,poolCoinBUSD:L,quoteUSD:ro,poolUSD:ao,balance:r})}this.positionInfoList=u,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(n){var oo,eo;const l=so("Sui"),_=mo("Sui"),u=await l.getAutoPool(n),e=await _.getPool(u.pool_id);console.log("newPoolInfo:",u),console.log("newPool:",e),console.log("this.positionInfoObj[id]:",this.positionInfoObj[n]);const p={...this.positionInfoObj[n],autoPoolPositionInfo:u.positins[0]},D=await l.getLpBalance(p.lp_token_type),Y=(await _.getTokenListByCoinType([p.lp_token_type]))[0];console.log(D,"###balance updatePositionItem");const v=p.autoPoolPositionInfo.tick_lower_index,i=p.autoPoolPositionInfo.tick_upper_index,c={tick_lower_index:v,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,liquidity:X.get_share_liquidity_by_amount({liquidity:u==null?void 0:u.liquidity,total_supply:u==null?void 0:u.total_supply},D)},r=_.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.current_sqrt_price,...p},position:c,roundUp:!1});console.log(r,"amountInfo###"),r.coinaAmount,r.coinbAmount;const j=r.coinaAmount,z=r.coinbAmount,{RATES:M}=this.getPoolStore,N=u.total_supply,o=uo.sqrtPriceX64ToPrice(e.current_sqrt_price,p.coinA.decimals,p.coinB.decimals),a=2,f=2,A=((oo=M[p.coinA.address])==null?void 0:oo.price)||0,x=((eo=M[p.coinB.address])==null?void 0:eo.price)||0,k=new t(A).mul(new t(r==null?void 0:r.coinaAmount)).toNumber(),T=new t(x).mul(new t(r==null?void 0:r.coinbAmount)).toNumber(),w=k>0&&k<.01?"<$0.01":`$${io(g(k,2))}`,m=T>0&&T<.01?"<$0.01":`$${io(g(T,2))}`;let d=new t(0);Number(D)>0&&(d=new t(D).div(Math.pow(10,Y.decimals)));const h=A&&x?g(new t(k).add(new t(T)).toString(),2):"--",s=new t(d).mul(Math.pow(10,p.lpInfo.decimals)).div(new t(N)).mul(100).toNumber();console.log(s,"##myShare");const S=new t(1).div(Math.pow(10,p.decimals)).toNumber();let P=0;if(s>1)P=g(s,2);else if(s>0&&s<S)P=`<${S}`;else if(s==0)P=0;else{const no=yo(s),co=no==-1?2:no+2;P=g(s,co)}const O=uo.sqrtPriceX64ToPrice(e.current_sqrt_price,a,f),E=await _.getCoinAmountFromLiquidity({pool:{...p,tick_lower_index:v,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:{...c,liquidity:u.liquidity},roundUp:!1}),q=new t(E.coinaAmount).toNumber(),I=new t(E.coinbAmount).toNumber();console.log(q,I,O.toString(),"###116");const U=g(new t(q).mul(new t(A)).toNumber(),2),G=g(new t(I).mul(new t(x)).toNumber(),2);console.log(e,"newPool##"),console.log(q,I,"###poolCoinBNum");const{ratioA:L,ratioB:Z}=to.calculateDepositRatioFixTokenA(v,i,new F.BN(e==null?void 0:e.current_sqrt_price));console.log(L.toString(),Z.toString(),"###139");const C=Number(g(L.toString(),2))*100,b=100-C,Q={tick_lower_index:v,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price,liquidity:p.max_liquidity_quota},R=await _.getCoinAmountFromLiquidity({pool:{...p,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:Q,roundUp:!1}),V=new t(A).mul(new t(R.coinaAmount)),K=new t(x).mul(new t(R.coinbAmount)),B=new t(A).mul(new t(E.coinaAmount)),J=new t(x).mul(new t(E.coinbAmount)),$=V.add(K).toNumber(),H=B.add(J).toNumber();this.positionInfoObj[n]={...p,tick_lower_index:v,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,myLiquidity:lo(D,Y.decimals),amountA:j,amountB:z,myShare:P,myAmountAUSD:w,myAmountBUSD:m,myLiquidityUSD:h,poolCoinARatio:C,poolCoinBRatio:b,poolCoinANum:q,poolCoinBNum:I,poolCoinAUSD:U,poolCoinBUSD:G,quoteUSD:$,poolUSD:H,balance:D,price:o},console.log(this.positionInfoObj[n],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:n}=await fetch(`${y.Sui.api}/v2/sui/auto_pools`).then(l=>l.json());n&&n.pools&&n.pools.length>0&&(this.apyObj=Object.fromEntries(n.pools.map((l,_)=>[l.object_id,{...l,apr:l.apr.replace("%","")>0&&l.apr.replace("%","")<.01?"<0.01%":g(l.apr.replace("%",""),2)+"%",resultApr:l.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(n){const l=so("Sui"),{status:_}=await l.getVault(n);this.currentAutoPoolStatus=_,this.updatePositionItem(n),console.log(_,"status##")},setSlippage(n){console.log(n,"slippage##"),this.slippage=n,localStorage.setItem("cetus-auto-slippage",n)}}});export{so as a,Lo as u};
