import{a6 as To,l as xo,R as Bo,a7 as ho}from"./entry.4678403e.js";import{c as m,a as vo}from"./sha256.29cedb80.js";import{N as Lo,I as Co,O as Po,b as F,P as Z,T as wo,C as go,V as J,q as bo,s as O,u as Do,e as qo,a as yo,f as fo,p as ao}from"./pool.db125822.js";import{D as t}from"./decimal.0bdeb344.js";function Ao(e){const _={launchpad:m[e||"Sui"].launchpad,ido:m[e||"Sui"].ido,xcetus:m[e||"Sui"].xcetus,xcetus_dividends:m[e||"Sui"].xcetus_dividends,cetus_faucet:m[e||"Sui"].cetus_faucet,xtoken:m[e||"Sui"].xtoken,xtoken_dividends:m[e||"Sui"].xtoken_dividends,token_faucet:m[e||"Sui"].token_faucet,booster:m[e||"Sui"].booster,maker_bonus:m[e||"Sui"].maker_bonus,liquidity_stratefy:m[e||"Sui"].liquidity_stratefy,vaults:m[e||"Sui"].vaults,haedal:m[e||"Sui"].haedal,frams:m[e||"Sui"].frams},g={fullRpcUrl:localStorage.getItem(`${e}-currentRpclocal2`)||m[e||"Sui"].fullRpcUrl,simulationAccount:m[e||"Sui"].simulationAccount,cetus_config:m[e||"Sui"].cetus_config,clmm_pool:m[e||"Sui"].clmm_pool,integrate:m[e||"Sui"].integrate,deepbook:m[e||"Sui"].deepbook,deepbook_endpoint_v2:m[e||"Sui"].deepbook_endpoint_v2,aggregatorUrl:m[e||"Sui"].aggregatorUrl},d=new Lo(g),n=To(new Co(_,d)),c=vo(),U=xo(()=>c);Bo(()=>{U.value.address&&(d.senderAddress=U.value.address)});const R=async()=>{console.log(n,"sdk###");const o=await n.Vaults.getVaultList();return o&&o.data||[]},l=async o=>{const u=await n.Vaults.getVault(o);return console.log(u,"vault##"),{...u,quota_based_type:Po(u.quota_based_type).full_address}},h=async o=>{if(console.log(o,"###coinType"),d.senderAddress){const u=await n.ClmmSDK.fullClient.getBalance({owner:d.senderAddress,coinType:o});return u&&u.totalBalance}else return 0},i=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:R,getLpBalance:h,getVault:async o=>{const u=await n.Vaults.getVault(o);return console.log(u,"vault##292"),u},deposit:async o=>{const{lowerTick:u,upperTick:y,slippage:w,rewarder_coin_types:v,isOnlyA:P,isOnlyB:B,currentTickIndex:S,decimal_b:j,request_id:k,use_Haedal_stake:I,shouldRequestStake:D,farming_pool:V}=o;console.log(o,"params###");let r=o.fix_amount_a,s,a,E,b=S;if(P||B){let A;try{A=await n.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:y,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,use_route:!0,priceSplitPoint:w,request_id:k,use_Haedal_stake:I,shouldRequestStake:D},!0)}catch{A=await n.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:y,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,use_route:!1,priceSplitPoint:w,request_id:k,use_Haedal_stake:I,shouldRequestStake:D},!0)}console.log(A,"swapResut##211"),A?(a=new F(A.afterSqrtPrice),s=A.fixAmountA===r?new F(Z(o.coinAmount).sub(A.swapInAmount).toString()):new F(A.swapOutAmount),E={swap_amount:A.swapInAmount,a2b:r,input_amount:o.coinAmount,route_obj:A.routeObj,use_Haedal_stake:A.use_Haedal_stake},r=A.fixAmountA,b=wo.sqrtPriceX64ToTickIndex(new F(A.afterSqrtPrice))):(a=new F(o.curSqrtPrice),s=new F(o.coinAmount))}else a=o.curSqrtPrice,s=new F(o.coinAmount);let p,q,L;console.log(u,S,y,"####138"),b>=u&&b<=y?(p=go.estLiquidityAndcoinAmountFromOneAmounts(u,y,s,r,!0,w,a),q=r?s.toString():p.tokenMaxA.toString(),L=r?p.tokenMaxB.toString():s.toString()):b<u?(q=s.toNumber(),L=0):b>y&&(q=0,L=s.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:q,amount_b:L,fix_amount_a:r,slippage:w,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:E},"params171");const H=await n.Vaults.deposit({lowerTick:u,upperTick:y,vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:q,amount_b:L,fix_amount_a:r,slippage:w,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,swapParams:E,farming_pool:V});return i(H)},remove:async o=>{const{lowerTick:u,upperTick:y,coinTypeA:w,coinTypeB:v,receiveAmount:P,clmm_pool:B,lowerSqrtPrice:S,upperSqrtPrice:j,fix_amount_a:k,curSqrtPrice:I,slippage:D,rewarder_coin_types:V,id:r,liquidity:s,swapParams:a,isOnlyA:E,isOnlyB:b,sliderVal:p,positionInfo:q,maxLiquidity:L,request_id:H,farming_pool:A}=o;console.log(p,"sliderVal##");const $=await l(r),oo=await d.Pool.getPool($.pool_id);let N,T,z,to,Y,G,C;const Q=J.get_share_liquidity_by_amount($,p==100?q.balance:o.lpTokenAmount);if(console.log(P,"##receiveAmount"),E||b){try{N=await n.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:y,curSqrtPrice:oo.current_sqrt_price,fix_amount_a:k,receive_amount:P,coinTypeA:w,coinTypeB:v,clmm_pool:B,use_route:!0,priceSplitPoint:D,removeLiquidity:p==100?Q:"",maxLiquidity:L,request_id:H})}catch(eo){console.log(eo,"e251"),N=await n.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:y,curSqrtPrice:oo.current_sqrt_price,fix_amount_a:k,receive_amount:P,coinTypeA:w,coinTypeB:v,clmm_pool:B,use_route:!1,priceSplitPoint:D,removeLiquidity:p==100?Q:"",maxLiquidity:L,request_id:H})}if(console.log(N,"swapResut###"),N){const eo=J.get_share_liquidity_by_amount($,q.balance);T=go.getCoinAmountFromLiquidity(new F(p==100?eo:N.liquidity),new F(oo.current_sqrt_price),S,j,!1),z=J.get_protocol_fee_amount($,T.coinA.toString()),to=J.get_protocol_fee_amount($,T.coinB.toString()),Y=p==100?q.balance:J.get_lp_amount_by_liquidity($,N.liquidity),G=Z(T.coinA.toString()).mul(Z(1-o.slippage)),C=Z(T.coinB.toString()).mul(Z(1-o.slippage)),console.log(G.toString(),"##minAmountA"),console.log(C.toString(),"##minAmountA")}}else console.log(Q,"#removeLiquidity"),T=go.getCoinAmountFromLiquidity(new F(Q),I,S,j,!1),T=go.getCoinAmountFromLiquidity(new F(Q),I,S,j,!1),console.log(T,"#coinAmountscoinAmounts"),Y=o.lpTokenAmount,G=Z(T.coinA.toString()).mul(Z(1-o.slippage)),C=Z(T.coinB.toString()).mul(Z(1-o.slippage)),console.log(z,to,"##protocol_fee_amount_b"),console.log(G.toString(),"##minAmountA"),console.log(C.toString(),"##minAmountA"),console.log(o,"params###246");console.log(Y,"lpTokenAmount remove");const M={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:Y,min_amount_a:bo(G,0)||"",min_amount_b:bo(C,0)||"",rewarder_coin_types:[],slippage:o.slippage,farming_pool:A};console.log(M,"##removeParams"),(E||b)&&(M.swapParams={a2b:!k,swap_amount:N==null?void 0:N.swapInAmount,route_obj:N.routeObj});const W=await n.Vaults.remove(M);return i(W)},getAutoPool:l,calculateDepositSwapAmount:async o=>{const{lowerTick:u,upperTick:y,curSqrtPrice:w,fix_amount_a:v,input_amount:P,coinTypeA:B,coinTypeB:S,clmm_pool:j,slippage:k,decimals:I,request_id:D,use_Haedal_stake:V,shouldRequestStake:r}=o;console.log(o,"params###");let s;try{s=await n.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:y,curSqrtPrice:w,fix_amount_a:v,input_amount:P,coinTypeA:B,coinTypeB:S,clmm_pool:j,use_route:!0,priceSplitPoint:k,request_id:D,use_Haedal_stake:V,shouldRequestStake:r},!0)}catch(a){if(console.log(a,"calculateDepositSwapAmount error"),String(a)=="Error: route unavailable"&&(console.log(a,"e432"),s=await n.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:y,curSqrtPrice:w,fix_amount_a:v,input_amount:P,coinTypeA:B,coinTypeB:S,clmm_pool:j,use_route:!1,priceSplitPoint:k,request_id:D,use_Haedal_stake:V,shouldRequestStake:r},!0)),String(a)=="Error: HaedalStakeSuiAmountError")return"HaedalStakeSuiAmountError"}if(console.log(s,"##swapResut"),s){const a=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:O(a.sub(a.mul(k)).toNumber(),I)}}return s},calculateRemoveSwapAmount:async o=>{const{lowerTick:u,upperTick:y,curSqrtPrice:w,fix_amount_a:v,receiveAmount:P,coinTypeA:B,coinTypeB:S,clmm_pool:j,slippage:k,decimals:I,liquidity:D,maxLiquidity:V,request_id:r}=o;console.log(o,"params###");let s;try{s=await n.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:y,curSqrtPrice:w,fix_amount_a:v,receive_amount:P,coinTypeA:B,coinTypeB:S,clmm_pool:j,use_route:!0,priceSplitPoint:k,removeLiquidity:D,maxLiquidity:V,request_id:r})}catch(a){String(a)=="Error: route unavailable"&&(console.log(a,"e432"),s=await n.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:y,curSqrtPrice:w,fix_amount_a:v,receive_amount:P,coinTypeA:B,coinTypeB:S,clmm_pool:j,use_route:!1,priceSplitPoint:k,removeLiquidity:D,maxLiquidity:V,request_id:r}))}if(console.log(s,"###swapResut calculateRemoveSwapAmount"),s){const a=new t(s.swapOutAmount);return console.log(a.toNumber(),"swapOutAmount.toNumber()"),{...s,swapOutAmountLimit:O(a.sub(a.mul(k)).toNumber(),I)}}return s}}}const Ro=ho("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING",slippage:localStorage.getItem("cetus-auto-slippage")||"0.1",autoPoolLoading:!1}),getters:{getPoolStore(){return Do()}},actions:{async getAutoPoolList(){const _=await Ao("Sui").getAutoPools();console.log(_,"list###");const g=this.getPoolStore,d=m.Sui.vaultFilter,{data:n}=await fetch(`${m.Sui.api}/v2/sui/auto_pools`).then(l=>l.json());console.log(n,"data##37");const c=(n==null?void 0:n.pools)||[],U=_.filter(l=>c.some(h=>h.object_id===l.id));console.log(U,"##openPoolList");const R=(d?U:_).map(l=>{const h=g.poolConfigObj[l.pool_id];return console.log("autoPoolList map",l),{...h,id:l.id,lp_token_type:l.lp_token_type,autoPoolPositionInfo:l.position,is_pause:l.is_pause,total_supply:l.total_supply,liquidity:l.liquidity,protocol_fee_rate:l.protocol_fee_rate,max_quota:l.max_quota,quota_based_type:Po(l.quota_based_type).full_address,supportHaedalStake:l.supportHaedalStake}});this.autoPoolList=R,this.autoPoolObj=Object.fromEntries(R.map((l,h)=>[l.address,l])),this.getMyAutoPoolPosition(),console.log(R,"##autoPoolList")},async getMyAutoPoolPosition(){var c,U,R,l;const e=Ao("Sui"),_=this.autoPoolList,g=qo("Sui"),d=[],{RATES:n}=this.getPoolStore;for(let h=0;h<_.length;h++){const i=_[h];console.log(i,"poolINfo###");const x=await g.getPool(i.address),f=await e.getLpBalance(_[h].lp_token_type);console.log(f,"balance##");const X=(await g.getTokenListByCoinType([_[h].lp_token_type]))[0];console.log(X,"lpInfo##");const io=((c=n[i.coinA.address])==null?void 0:c.price)||"",K=((U=n[i.coinB.address])==null?void 0:U.price)||"",o=i.autoPoolPositionInfo.tick_lower_index,u=i.autoPoolPositionInfo.tick_upper_index,y=Number(f)>0?J.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},f):0,w={tick_lower_index:o,tick_upper_index:u,current_sqrt_price:x==null?void 0:x.current_sqrt_price,liquidity:y};console.log(i,"poolInfo##94");const v=await g.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:x==null?void 0:x.current_sqrt_price},position:w,roundUp:!1});console.log(v,"##amountInfo");const P=v.coinaAmount,B=v.coinbAmount,S=P,j=B,k=i.coinA.decimals,I=i.coinB.decimals,D=g.TickMath.tickIndexToPrice(Number(o),k,I).toString(),V=g.TickMath.tickIndexToPrice(Number(u),k,I).toString(),r=new t(io).mul(new t(P)).toNumber(),s=new t(K).mul(new t(B)).toNumber(),a=r>0&&r<.01?"<$0.01":`$${yo(O(r,2))}`,E=s>0&&s<.01?"<$0.01":`$${yo(O(s,2))}`,b=wo.sqrtPriceX64ToPrice(x.current_sqrt_price,k,I),p=await g.getCoinAmountFromLiquidity({pool:{...i,tick_lower_index:o,tick_upper_index:u,current_sqrt_price:x==null?void 0:x.current_sqrt_price},position:{...w,liquidity:i.liquidity},roundUp:!1}),q=new t(p.coinaAmount).toNumber(),L=new t(p.coinbAmount).toNumber();console.log(q,L,b.toString(),"###116");const H=O(new t(q).mul(new t(io)).toNumber(),2),A=O(new t(L).mul(new t(K)).toNumber(),2);console.log(x,"newPool##"),console.log(q,L,io,K,Number(H)+Number(A),"###poolCoinBNum");const{ratioA:$,ratioB:oo}=J.calculateDepositRatio(o,u,new F.BN(x==null?void 0:x.current_sqrt_price));console.log($,oo.toString(),"###139");const N=$.mul(100).toNumber().toFixed(0),T=100-Number(N);console.log(q,L,N,T,"###147");let z=0;Number(f)>0&&(z=new t(f).div(Math.pow(10,X.decimals)));const to=new t(r).add(new t(s)).toNumber(),Y=io&&K?to>0&&to<.01?"<0.01":O(new t(r).add(new t(s)).toString(),2):"--",G=i.total_supply;let C=0;z>0&&G>0&&(C=new t(z).mul(Math.pow(10,X.decimals)).div(new t(G)).mul(100).toNumber()),console.log(C,"##myShare");const Q=new t(1).div(Math.pow(10,i.decimals)).toNumber();let M=0;if(C>1)M=O(C,2);else if(C>0&&C<Q)M=`<${Q}`;else if(C==0)M=0;else{const ro=fo(C),_o=ro==-1?2:ro+2;M=O(C,_o)}console.log(f,z.toString(),"###balance");const W=(await g.getTokenListByCoinType([i.quota_based_type]))[0],eo=ao(i.max_quota,W.decimals);console.log(i.quota_based_type,W,eo,"##quoteCoinInfo");const so=W.address==i.coin_b_address,co=so?new t(p.coinaAmount).mul(i.price).add(p.coinbAmount):new t(p.coinaAmount).mul(1/i.price).add(p.coinbAmount),po=((R=n[W.address])==null?void 0:R.price)||"",no=co.mul(new t(po)).toNumber();console.log(so,no,"#isQuotaCoin");const uo=eo,mo=so?new t(p.coinaAmount).mul(i.price).add(p.coinbAmount):new t(p.coinaAmount).mul(1/i.price).add(p.coinbAmount),lo=new t(uo).sub(mo).mul(K).toNumber();console.log(lo,"remainingTokenUSD##"),console.log(co.toNumber(),"#poolTokenNum"),this.positionInfoObj[i.id]={tick_lower_index:o,tick_upper_index:u,current_sqrt_price:x.current_sqrt_price,myLiquidity:ao(f,X.decimals),amountA:S,amountB:j,...i,lpInfo:X,myAmountAUSD:a,myAmountBUSD:E,myLiquidityUSD:Y,myShare:M,minPrice:D,maxPrice:V,poolCoinARatio:N,poolCoinBRatio:T,poolCoinANum:q,poolCoinBNum:L,poolCoinAUSD:H,poolCoinBUSD:A,quoteUSD:uo,poolUSD:no,balance:f,quoteCoinInfo:W,remainingTokenUSD:lo,currentDeposit:no,positionLiquidity:y},d.push({tick_lower_index:o,tick_upper_index:u,current_sqrt_price:(l=i==null?void 0:i.object)==null?void 0:l.current_sqrt_price,myLiquidity:ao(f,X.decimals),amountA:S,amountB:j,...i,lpInfo:X,myAmountAUSD:a,myAmountBUSD:E,myLiquidityUSD:Y,myShare:M,minPrice:D,maxPrice:V,poolCoinARatio:N,poolCoinBRatio:T,poolCoinANum:q,poolCoinBNum:L,poolCoinAUSD:H,poolCoinBUSD:A,quoteUSD:uo,poolUSD:no,balance:f})}this.positionInfoList=d,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(e){var co,po,no,uo,mo,lo,ro,_o;const _=Ao("Sui"),g=qo("Sui"),d=await _.getAutoPool(e),n=await g.getPool(d.pool_id);console.log("newPoolInfo:",d),console.log("newPool:",n),console.log("this.positionInfoObj[id]:",this.positionInfoObj[e]);const c={...this.positionInfoObj[e],autoPoolPositionInfo:d.position,...n},U=await _.getLpBalance(c.lp_token_type);console.log(U,"updatePositionItem lp balance");const R=(await g.getTokenListByCoinType([c.lp_token_type]))[0];console.log(U,"###balance updatePositionItem");const l=c.autoPoolPositionInfo.tick_lower_index,h=c.autoPoolPositionInfo.tick_upper_index;let i;d.total_supply==0?i=0:i=J.get_share_liquidity_by_amount(d,String(U)),console.log(i,"##liquidity");const x={tick_lower_index:l,tick_upper_index:h,current_sqrt_price:n.current_sqrt_price,liquidity:i},f=g.getCoinAmountFromLiquidity({pool:{current_sqrt_price:n.current_sqrt_price,...c},position:x,roundUp:!1}),X=f.coinaAmount,io=f.coinbAmount,{RATES:K}=this.getPoolStore,o=d.total_supply,u=wo.sqrtPriceX64ToPrice(n.current_sqrt_price,(co=c==null?void 0:c.coinA)==null?void 0:co.decimals,(po=c==null?void 0:c.coinB)==null?void 0:po.decimals),y=2,w=2,v=((uo=K[(no=c==null?void 0:c.coinA)==null?void 0:no.address])==null?void 0:uo.price)||0,P=((lo=K[(mo=c==null?void 0:c.coinB)==null?void 0:mo.address])==null?void 0:lo.price)||0,B=new t(v).mul(new t(f==null?void 0:f.coinaAmount)).toNumber(),S=new t(P).mul(new t(f==null?void 0:f.coinbAmount)).toNumber(),j=B>0&&B<.01?"<$0.01":`$${yo(O(B,2))}`,k=S>0&&S<.01?"<$0.01":`$${yo(O(S,2))}`;let I=new t(0);Number(U)>0&&(I=new t(U).div(Math.pow(10,R==null?void 0:R.decimals)));const D=new t(B).add(new t(S)).toNumber(),V=v&&P?D>0&&D<.01?"<0.01":O(new t(B).add(new t(S)).toString(),2):"--",r=new t(I).mul(Math.pow(10,(ro=c.lpInfo)==null?void 0:ro.decimals)).div(new t(o)).mul(100).toNumber();console.log(r,"##myShare");const s=new t(1).div(Math.pow(10,c.decimals)).toNumber();let a=0;if(r>1)a=O(r,2);else if(r>0&&r<s)a=`<${s}`;else if(r==0)a=0;else{const So=fo(r),ko=So==-1?2:So+2;a=O(r,ko)}const E=wo.sqrtPriceX64ToPrice(n.current_sqrt_price,y,w),b=await g.getCoinAmountFromLiquidity({pool:{...c,tick_lower_index:l,tick_upper_index:h,current_sqrt_price:n==null?void 0:n.current_sqrt_price},position:{...x,liquidity:d.liquidity},roundUp:!1}),p=new t(b.coinaAmount).toNumber(),q=new t(b.coinbAmount).toNumber();console.log(p,q,E.toString(),"###116");const L=O(new t(p).mul(new t(v)).toNumber(),2),H=O(new t(q).mul(new t(P)).toNumber(),2);console.log(n,"newPool##"),console.log(p,q,v,P,Number(L)+Number(H),"###poolCoinBNum");const{ratioA:A,ratioB:$}=J.calculateDepositRatio(l,h,new F.BN(n==null?void 0:n.current_sqrt_price));console.log(A,$.toString(),"###139");const oo=A.mul(100).toNumber().toFixed(0),N=100-Number(oo),T=(await g.getTokenListByCoinType([d.quota_based_type]))[0],z=ao(d.max_quota,T.decimals);console.log(d.quota_based_type,T,z,"##quoteCoinInfo");const to=T.address==c.coin_b_address,Y=to?new t(b.coinaAmount).mul(c.price).add(b.coinbAmount):new t(b.coinaAmount).mul(1/c.price).add(b.coinbAmount),G=((_o=K[T.address])==null?void 0:_o.price)||"",C=Y.mul(new t(G)).toNumber(),Q=z,M=to?new t(b.coinaAmount).mul(c.price).add(b.coinbAmount):new t(b.coinaAmount).mul(1/c.price).add(b.coinbAmount),W=new t(Q).sub(M).mul(P).toNumber();console.log(W,"remainingTokenUSD##");const eo=g.TickMath.tickIndexToPrice(Number(l),y,w).toString(),so=g.TickMath.tickIndexToPrice(Number(h),y,w).toString();this.positionInfoObj[e]={...c,tick_lower_index:l,tick_upper_index:h,current_sqrt_price:n.current_sqrt_price,myLiquidity:ao(U,R==null?void 0:R.decimals),amountA:X,amountB:io,myShare:a,myAmountAUSD:j,myAmountBUSD:k,myLiquidityUSD:V,poolCoinARatio:oo,poolCoinBRatio:N,poolCoinANum:p,poolCoinBNum:q,poolCoinAUSD:L,poolCoinBUSD:H,quoteUSD:Q,balance:U,price:u,quoteCoinInfo:T,remainingTokenUSD:W,currentDeposit:C,poolUSD:C,positionLiquidity:i,liquidity:d==null?void 0:d.liquidity,minPrice:eo,maxPrice:so},this.autoPoolLoading=!1,console.log(this.positionInfoObj[e],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:e}=await fetch(`${m.Sui.api}/v2/sui/auto_pools`).then(_=>_.json());e&&e.pools&&e.pools.length>0&&(this.apyObj=Object.fromEntries(e.pools.map((_,g)=>[_.object_id,{..._,apr:_.apr.replace("%","")>0&&_.apr.replace("%","")<.01?"<0.01%":O(_.apr.replace("%",""),2)+"%",resultApr:_.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(e){const _=Ao("Sui");this.autoPoolLoading=!0;const{status:g}=await _.getVault(e);this.currentAutoPoolStatus=g,this.updatePositionItem(e),console.log(g,"status##")},setSlippage(e){console.log(e,"slippage##"),this.slippage=e,localStorage.setItem("cetus-auto-slippage",e)}}});export{Ao as a,Ro as u};
