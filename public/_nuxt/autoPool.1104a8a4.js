import{a6 as wo,l as Ao,T as go,a7 as So}from"./entry.1a803405.js";import{c as A,a as qo}from"./sha256.c64013d9.js";import{I as fo,e as G,C as so,J,f as ao,s as x,u as bo,b as po,a as eo,T as co,j as _o,p as uo}from"./pool.40a1ab97.js";import{C as ko,V as E}from"./index.ffd047f3.js";import{D as t}from"./decimal.0e8aa3f1.js";function no(n){const l={launchpad:A[n||"Sui"].launchpad,ido:A[n||"Sui"].ido,xcetus:A[n||"Sui"].xcetus,xcetus_dividends:A[n||"Sui"].xcetus_dividends,cetus_faucet:A[n||"Sui"].cetus_faucet,xtoken:A[n||"Sui"].xtoken,xtoken_dividends:A[n||"Sui"].xtoken_dividends,token_faucet:A[n||"Sui"].token_faucet,booster:A[n||"Sui"].booster,maker_bonus:A[n||"Sui"].maker_bonus,liquidity_stratefy:A[n||"Sui"].liquidity_stratefy,vaults:A[n||"Sui"].vaults},m={fullRpcUrl:localStorage.getItem(`${n}-currentRpclocal2`)||A[n||"Sui"].fullRpcUrl,simulationAccount:A[n||"Sui"].simulationAccount,cetus_config:A[n||"Sui"].cetus_config,clmm_pool:A[n||"Sui"].clmm_pool,integrate:A[n||"Sui"].integrate,deepbook:A[n||"Sui"].deepbook,deepbook_endpoint_v2:A[n||"Sui"].deepbook_endpoint_v2,aggregatorUrl:A[n||"Sui"].aggregatorUrl},c=new fo(m),e=wo(new ko(l,c)),_=qo(),j=Ao(()=>_);go(()=>{j.value.address&&(c.senderAddress=j.value.address)});const W=async()=>{console.log(e,"sdk###");const o=await e.Vaults.getVaultList();return o&&o.data||[]},C=async o=>await e.Vaults.getVault(o),i=async o=>{if(console.log(o,"###coinType"),c.senderAddress){const a=await e.ClmmSDK.fullClient.getBalance({owner:c.senderAddress,coinType:o});return a&&a.totalBalance}else return 0},u=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:W,getLpBalance:i,getVault:async o=>{const a=await e.Vaults.getVault(o);return console.log(a,"vault##292"),a},deposit:async o=>{const{lowerTick:a,upperTick:P,slippage:S,rewarder_coin_types:h,isOnlyA:T,isOnlyB:I,currentTickIndex:q}=o;console.log(o,"params###");let d=o.fix_amount_a,y,L,s;if(T||I){const g=await e.Vaults.calculateDepositSwapAmount({lowerTick:a,upperTick:P,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool});console.log(g,"swapResut##211"),g?(y=new G(g.swapOutAmount),L=new G(g.afterSqrtPrice),s={swap_amount:g.swapInAmount,a2b:d},d=!d):(L=new G(o.curSqrtPrice),y=new G(o.coinAmount))}else L=o.curSqrtPrice,y=new G(o.coinAmount);let f,v,U;console.log(a,q,P,"####138"),q>=a&&q<=P?(f=so.estLiquidityAndcoinAmountFromOneAmounts(a,P,y,d,!0,S,L),v=d?y.toString():f.tokenMaxA.toString(),U=d?f.tokenMaxB.toString():y.toString()):q<a?(v=y.toNumber(),U=0):q>P&&(v=0,U=y.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:v,amount_b:U,fix_amount_a:d,slippage:S,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:s},"params171");const N=await e.Vaults.deposit({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:v,amount_b:U,fix_amount_a:d,slippage:S,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:s});return u(N)},remove:async o=>{const{lowerTick:a,upperTick:P,coinTypeA:S,coinTypeB:h,receiveAmount:T,clmm_pool:I,lowerSqrtPrice:q,upperSqrtPrice:d,fix_amount_a:y,curSqrtPrice:L,slippage:s,rewarder_coin_types:f,id:v,liquidity:U,swapParams:N,isOnlyA:g,isOnlyB:O,sliderVal:b,positionInfo:p}=o;console.log(b,"sliderVal##");const w=await C(v),Y=await c.Pool.getPool(w.pool_id);let D,k,K,X,B,M,R;if(console.log(T,"##receiveAmount"),g||O){if(D=await e.Vaults.calculateRemoveSwapAmount({lowerTick:a,upperTick:P,curSqrtPrice:Y.current_sqrt_price,fix_amount_a:y,receive_amount:T,coinTypeA:S,coinTypeB:h,clmm_pool:I}),console.log(D,"swapResut###"),D){const z=E.get_share_liquidity_by_amount(w,p.balance);k=so.getCoinAmountFromLiquidity(new G(b==100?z:D.liquidity),new G(Y.current_sqrt_price),q,d,!1),K=E.get_protocol_fee_amount(w,k.coinA.toString()),X=E.get_protocol_fee_amount(w,k.coinB.toString()),B=b==100?p.balance:E.get_lp_amount_by_liquidity(w,D.liquidity),M=J(k.coinA.toString()).mul(J(1-o.slippage)),R=J(k.coinB.toString()).mul(J(1-o.slippage)),console.log(M.toString(),"##minAmountA"),console.log(R.toString(),"##minAmountA")}}else{const z=E.get_share_liquidity_by_amount(w,b==100?p.balance:B);k=so.getCoinAmountFromLiquidity(new G(z),L,q,d,!1),K=E.get_protocol_fee_amount(w,k.coinA.toString()),X=E.get_protocol_fee_amount(w,k.coinB.toString()),B=o.lpTokenAmount,M=J(k.coinA.toString()).mul(J(1-o.slippage)),R=J(k.coinB.toString()).mul(J(1-o.slippage)),console.log(K,X,"##protocol_fee_amount_b")}console.log(B,"lpTokenAmount remove");const Z={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:B,min_amount_a:ao(M,0)||"",min_amount_b:ao(R,0)||"",rewarder_coin_types:[]};console.log(Z,"##removeParams"),(g||O)&&(Z.swapParams={a2b:!y,swap_amount:D==null?void 0:D.swapInAmount});const H=await e.Vaults.remove(Z);return u(H)},getAutoPool:C,calculateDepositSwapAmount:async o=>{const{lowerTick:a,upperTick:P,curSqrtPrice:S,fix_amount_a:h,input_amount:T,coinTypeA:I,coinTypeB:q,clmm_pool:d,slippage:y,decimals:L}=o;console.log(o,"params###");const s=await e.Vaults.calculateDepositSwapAmount({lowerTick:a,upperTick:P,curSqrtPrice:S,fix_amount_a:h,input_amount:T,coinTypeA:I,coinTypeB:q,clmm_pool:d});console.log(s,"##swapResut");const f=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:x(f.sub(f.mul(y)).toNumber(),L)}},calculateRemoveSwapAmount:async o=>{const{lowerTick:a,upperTick:P,curSqrtPrice:S,fix_amount_a:h,receiveAmount:T,coinTypeA:I,coinTypeB:q,clmm_pool:d,slippage:y,decimals:L}=o;console.log(o,"params###");const s=await e.Vaults.calculateRemoveSwapAmount({lowerTick:a,upperTick:P,curSqrtPrice:S,fix_amount_a:h,receive_amount:T,coinTypeA:I,coinTypeB:q,clmm_pool:d});console.log(s,"###swapResut calculateRemoveSwapAmount");const f=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:x(f.sub(f.mul(y)).toNumber(),L)}}}}const ho=So("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING"}),getters:{getPoolStore(){return bo()}},actions:{async getAutoPoolList(){const l=await no("Sui").getAutoPools();console.log(l,"list###");const m=this.getPoolStore,c=l.map(e=>({...m.poolConfigObj[e.pool_id],id:e.id,lp_token_type:e.lp_token_type,autoPoolPositionInfo:e.positins[0],is_pause:e.is_pause,total_supply:e.total_supply,liquidity:e.liquidity,protocol_fee_rate:e.protocol_fee_rate,max_liquidity_quota:e.max_liquidity_quota}));this.autoPoolList=c,this.autoPoolObj=Object.fromEntries(c.map((e,_)=>[e.address,e])),this.getMyAutoPoolPosition(),console.log(c,"##autoPoolList")},async getMyAutoPoolPosition(){var _,j,W;const n=no("Sui"),l=this.autoPoolList,m=po("Sui"),c=[],{RATES:e}=this.getPoolStore;for(let C=0;C<l.length;C++){const i=l[C];console.log(i,"poolINfo###");const u=await m.getPool(i.address),r=await n.getLpBalance(l[C].lp_token_type);console.log(r,"balance##");const V=(await m.getTokenListByCoinType([l[C].lp_token_type]))[0];console.log(V,"lpInfo##");const Q=((_=e[i.coinA.address])==null?void 0:_.price)||"",F=((j=e[i.coinB.address])==null?void 0:j.price)||"",$=i.autoPoolPositionInfo.tick_lower_index,o=i.autoPoolPositionInfo.tick_upper_index,a={tick_lower_index:$,tick_upper_index:o,current_sqrt_price:u==null?void 0:u.current_sqrt_price,liquidity:Number(r)>0?E.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},r):0},P=await m.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:u==null?void 0:u.current_sqrt_price},position:a,roundUp:!1});console.log(P,"##amountInfo");const S=P.coinaAmount,h=P.coinbAmount,T=S,I=h,q=i.coinA.decimals,d=i.coinB.decimals,y=m.TickMath.tickIndexToPrice(Number($),q,d).toString(),L=m.TickMath.tickIndexToPrice(Number(o),q,d).toString(),s=new t(Q).mul(new t(S)).toNumber(),f=new t(F).mul(new t(h)).toNumber(),v=s>0&&s<.01?"<$0.01":`$${eo(x(s,2))}`,U=f>0&&f<.01?"<$0.01":`$${eo(x(f,2))}`,N=co.sqrtPriceX64ToPrice(u.current_sqrt_price,q,d);let g,O;const b=await m.getCoinAmountFromLiquidity({pool:{...i,tick_lower_index:$,tick_upper_index:o,current_sqrt_price:u==null?void 0:u.current_sqrt_price},position:{...a,liquidity:i.liquidity},roundUp:!1}),p=new t(b.coinaAmount).toNumber(),w=new t(b.coinbAmount).toNumber();console.log(p,w,N.toString(),"###116");const Y=x(new t(p).mul(new t(Q)).toNumber(),2),D=x(new t(w).mul(new t(F)).toNumber(),2);if(console.log(u,"newPool##"),console.log(p,w,"###131"),p>0&&w>0){const to=new t(p).mul(N).add(new t(w));g=new t(p).mul(N).div(to).mul(100).toNumber().toFixed(2),O=new t(w).div(to).mul(100).toNumber().toFixed(2)}else p>0?(g=100,O=0):w>0?(g=0,O=100):(g=50,O=50);console.log(p,w,g,O,"###147");let k=0;Number(r)>0&&(k=new t(r).div(Math.pow(10,V.decimals)));const K=Q&&F?x(new t(s).add(new t(f)).toString(),2):"--",X=i.total_supply;let B=0;k>0&&X>0&&(B=new t(k).mul(Math.pow(10,V.decimals)).div(new t(X)).mul(100).toNumber()),console.log(B,"##myShare");const M=new t(1).div(Math.pow(10,i.decimals)).toNumber();let R=0;if(B>1)R=x(B,2);else if(B>0&&B<M)R=`<${M}`;else if(B==0)R=0;else{const to=_o(B),yo=to==-1?2:to+2;R=x(B,yo)}console.log(r,k.toString(),"###balance");const Z={tick_lower_index:$,tick_upper_index:o,current_sqrt_price:u==null?void 0:u.current_sqrt_price,liquidity:i.max_liquidity_quota},H=await m.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:u==null?void 0:u.current_sqrt_price},position:Z,roundUp:!1}),z=new t(Q).mul(new t(H.coinaAmount)),oo=new t(F).mul(new t(H.coinbAmount)),io=new t(Q).mul(new t(b.coinaAmount)),mo=new t(F).mul(new t(b.coinbAmount)),lo=z.add(oo).toNumber(),ro=io.add(mo).toNumber();this.positionInfoObj[i.id]={tick_lower_index:$,tick_upper_index:o,current_sqrt_price:u.current_sqrt_price,myLiquidity:uo(r,V.decimals),amountA:T,amountB:I,...i,lpInfo:V,myAmountAUSD:v,myAmountBUSD:U,myLiquidityUSD:K,myShare:R,minPrice:y,maxPrice:L,poolCoinARatio:g,poolCoinBRatio:O,poolCoinANum:p,poolCoinBNum:w,poolCoinAUSD:Y,poolCoinBUSD:D,quoteUSD:lo,poolUSD:ro,balance:r},c.push({tick_lower_index:$,tick_upper_index:o,current_sqrt_price:(W=i==null?void 0:i.object)==null?void 0:W.current_sqrt_price,myLiquidity:uo(r,V.decimals),amountA:T,amountB:I,...i,lpInfo:V,myAmountAUSD:v,myAmountBUSD:U,myLiquidityUSD:K,myShare:R,minPrice:y,maxPrice:L,poolCoinARatio:g,poolCoinBRatio:O,poolCoinANum:p,poolCoinBNum:w,poolCoinAUSD:Y,poolCoinBUSD:D,quoteUSD:lo,poolUSD:ro,balance:r})}this.positionInfoList=c,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(n){var H,z;const l=no("Sui"),m=po("Sui"),c=await l.getAutoPool(n),e=await m.getPool(c.pool_id);console.log("newPoolInfo:",c),console.log("newPool:",e),console.log("this.positionInfoObj[id]:",this.positionInfoObj[n]);const _={...this.positionInfoObj[n],autoPoolPositionInfo:c.positins[0]},j=await l.getLpBalance(_.lp_token_type),W=(await m.getTokenListByCoinType([_.lp_token_type]))[0];console.log(j,"###balance updatePositionItem");const C=_.autoPoolPositionInfo.tick_lower_index,i=_.autoPoolPositionInfo.tick_upper_index,u={tick_lower_index:C,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,liquidity:E.get_share_liquidity_by_amount({liquidity:c==null?void 0:c.liquidity,total_supply:c==null?void 0:c.total_supply},j)},r=m.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.current_sqrt_price,..._},position:u,roundUp:!1});console.log(r,"amountInfo###"),r.coinaAmount,r.coinbAmount;const V=r.coinaAmount,Q=r.coinbAmount,{RATES:F}=this.getPoolStore,$=c.total_supply,o=co.sqrtPriceX64ToPrice(e.current_sqrt_price,_.coinA.decimals,_.coinB.decimals),a=2,P=2,S=((H=F[_.coinA.address])==null?void 0:H.price)||0,h=((z=F[_.coinB.address])==null?void 0:z.price)||0,T=new t(S).mul(new t(r==null?void 0:r.coinaAmount)).toNumber(),I=new t(h).mul(new t(r==null?void 0:r.coinbAmount)).toNumber(),q=T>0&&T<.01?"<$0.01":`$${eo(x(T,2))}`,d=I>0&&I<.01?"<$0.01":`$${eo(x(I,2))}`;let y=new t(0);Number(j)>0&&(y=new t(j).div(Math.pow(10,W.decimals)));const L=S&&h?x(new t(T).add(new t(I)).toString(),2):"--",s=new t(y).mul(Math.pow(10,_.lpInfo.decimals)).div(new t($)).mul(100).toNumber();console.log(s,"##myShare");const f=new t(1).div(Math.pow(10,_.decimals)).toNumber();let v=0;if(s>1)v=x(s,2);else if(s>0&&s<f)v=`<${f}`;else if(s==0)v=0;else{const oo=_o(s),io=oo==-1?2:oo+2;v=x(s,io)}let U,N;const g=co.sqrtPriceX64ToPrice(e.current_sqrt_price,a,P),O=await m.getCoinAmountFromLiquidity({pool:{..._,tick_lower_index:C,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:{...u,liquidity:c.liquidity},roundUp:!1}),b=new t(O.coinaAmount).toNumber(),p=new t(O.coinbAmount).toNumber();console.log(b,p,g.toString(),"###116");const w=x(new t(b).mul(new t(S)).toNumber(),2),Y=x(new t(p).mul(new t(h)).toNumber(),2);if(console.log(e,"newPool##"),console.log(b,p,"###poolCoinBNum"),b>0&&p>0){const oo=new t(b).mul(g).add(new t(p));U=new t(b).mul(g).div(oo).mul(100).toNumber().toFixed(2),N=new t(p).div(oo).mul(100).toNumber().toFixed(2)}else b>0?(U=100,N=0):p>0?(U=0,N=100):(U=50,N=50);const D={tick_lower_index:C,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price,liquidity:_.max_liquidity_quota},k=await m.getCoinAmountFromLiquidity({pool:{..._,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:D,roundUp:!1}),K=new t(S).mul(new t(k.coinaAmount)),X=new t(h).mul(new t(k.coinbAmount)),B=new t(S).mul(new t(O.coinaAmount)),M=new t(h).mul(new t(O.coinbAmount)),R=K.add(X).toNumber(),Z=B.add(M).toNumber();this.positionInfoObj[n]={..._,tick_lower_index:C,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,myLiquidity:uo(j,W.decimals),amountA:V,amountB:Q,myShare:v,myAmountAUSD:q,myAmountBUSD:d,myLiquidityUSD:L,poolCoinARatio:U,poolCoinBRatio:N,poolCoinANum:b,poolCoinBNum:p,poolCoinAUSD:w,poolCoinBUSD:Y,quoteUSD:R,poolUSD:Z,balance:j,price:o},console.log(this.positionInfoObj[n],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:n}=await fetch(`${A.Sui.api}/v2/sui/auto_pools`).then(l=>l.json());n&&n.pools&&n.pools.length>0&&(this.apyObj=Object.fromEntries(n.pools.map((l,m)=>[l.object_id,{...l,apr:l.apr.replace("%","")>0&&l.apr.replace("%","")<.01?"<0.01%":x(l.apr.replace("%",""),2)+"%",resultApr:l.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(n){const l=no("Sui"),{status:m}=await l.getVault(n);this.currentAutoPoolStatus=m,this.updatePositionItem(n),console.log(m,"status##")}}});export{no as a,ho as u};
