import{a6 as Y,l as z,T as G,a7 as H}from"./entry.96a5d1eb.js";import{c,a as Q}from"./sha256.c04914f1.js";import{I as X,C as F,e as Z,J as T,l as K,u as N,b as J,a as C,s as h,K as W,p as M}from"./pool.1233f348.js";import{C as oo,V as $}from"./index.91903f1c.js";import{D as l}from"./decimal.0e8aa3f1.js";function E(o){const s={launchpad:c[o||"Sui"].launchpad,ido:c[o||"Sui"].ido,xcetus:c[o||"Sui"].xcetus,xcetus_dividends:c[o||"Sui"].xcetus_dividends,cetus_faucet:c[o||"Sui"].cetus_faucet,xtoken:c[o||"Sui"].xtoken,xtoken_dividends:c[o||"Sui"].xtoken_dividends,token_faucet:c[o||"Sui"].token_faucet,booster:c[o||"Sui"].booster,maker_bonus:c[o||"Sui"].maker_bonus,liquidity_stratefy:c[o||"Sui"].liquidity_stratefy,vaults:c[o||"Sui"].vaults},d={fullRpcUrl:localStorage.getItem(`${o}-currentRpclocal2`)||c[o||"Sui"].fullRpcUrl,simulationAccount:c[o||"Sui"].simulationAccount,cetus_config:c[o||"Sui"].cetus_config,clmm_pool:c[o||"Sui"].clmm_pool,integrate:c[o||"Sui"].integrate,deepbook:c[o||"Sui"].deepbook,deepbook_endpoint_v2:c[o||"Sui"].deepbook_endpoint_v2,aggregatorUrl:c[o||"Sui"].aggregatorUrl},i=new X(d),n=Y(new oo(s,i)),a=Q(),f=z(()=>a);G(()=>{f.value.address&&(i.senderAddress=f.value.address)});const I=async()=>{console.log(n,"sdk###");const t=await n.Vaults.getVaultList();return t&&t.data||[]},B=async t=>await n.Vaults.getVault(t),A=async t=>{if(console.log(t,"###coinType"),i.senderAddress){const p=await n.ClmmSDK.fullClient.getBalance({owner:i.senderAddress,coinType:t});return p&&p.totalBalance}else return 0},e=t=>({transactionBlock:t,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:I,getLpBalance:A,deposit:async t=>{const{lowerTick:p,upperTick:x,coinAmount:m,fix_amount_a:g,slippage:y,curSqrtPrice:b,rewarder_coin_types:j}=t;console.log(t,"params###");const q=F.estLiquidityAndcoinAmountFromOneAmounts(p,x,m,g,!0,y,b),S=g?m.toString():q.tokenMaxA.toString(),_=g?q.tokenMaxB.toString():m.toString(),u=await n.Vaults.deposit({vault_id:t.id,clmm_pool:t.clmm_pool,lp_token_type:t.lp_token_type,amount_a:S,amount_b:_,fix_amount_a:g,slippage:y,coinTypeA:t.coinTypeA,coinTypeB:t.coinTypeB,rewarder_coin_types:[]});return e(u)},remove:async t=>{const{lowerSqrtPrice:p,upperSqrtPrice:x,lpTokenAmount:m,curSqrtPrice:g,slippage:y,rewarder_coin_types:b,id:j,liquidity:q}=t;console.log(t.lpTokenAmount.toString(),"params##");const S=await B(j),_=await i.Pool.getPool(S.pool_id),u=F.getCoinAmountFromLiquidity(q,new Z(_.current_sqrt_price),p,x,!1),k=T(u.coinA.toString()).mul(T(1-y)),O=T(u.coinB.toString()).mul(T(1-y));console.log(u.coinA.toString(),"##.toString()"),console.log(t.lpTokenAmount.toString(),k.toString(),O.toString(),"params##");const L=$.get_protocol_fee_amount(S,u.coinA.toString()),P=$.get_protocol_fee_amount(S,u.coinB.toString());console.log(S,"##vault"),console.log(_,"newPool##"),console.log(k.toString(),O.toString(),P,L,"###protocol_fee_amount_a");const D=await n.Vaults.remove({vault_id:t.id,clmm_pool:t.clmm_pool,lp_token_type:t.lp_token_type,coinTypeA:t.coinTypeA,coinTypeB:t.coinTypeB,lp_token_amount:m.toString(),min_amount_a:K(T(u.coinA.toString()).sub(L).toString(),0)||"",min_amount_b:K(T(u.coinB.toString()).sub(P).toString(),0)||"",rewarder_coin_types:[]});return e(D)},getAutoPool:B}}const lo=H("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return N()}},actions:{async getAutoPoolList(){const s=await E("Sui").getAutoPools();console.log(s,"list###");const d=this.getPoolStore,i=s.map(n=>({...d.poolConfigObj[n.pool_id],id:n.id,lp_token_type:n.lp_token_type,autoPoolPositionInfo:n.positins[0],is_pause:n.is_pause,total_supply:n.total_supply,liquidity:n.liquidity,protocol_fee_rate:n.protocol_fee_rate}));this.autoPoolList=i,this.autoPoolObj=Object.fromEntries(i.map((n,a)=>[n.address,n])),this.getMyAutoPoolPosition(),console.log(i,"##autoPoolList")},async getMyAutoPoolPosition(){var a,f,I,B;const o=E("Sui"),s=this.autoPoolList,d=J("Sui"),i=[],{RATES:n}=this.getPoolStore;for(let A=0;A<s.length;A++){const e=s[A];console.log(e,"poolINfo###");const r=await d.getPool(e.address),w=await o.getLpBalance(s[A].lp_token_type);console.log(w,"balance##");const t=(await d.getTokenListByCoinType([s[A].lp_token_type]))[0];console.log(t,"lpInfo##");const p=((a=n[e.coinA.address])==null?void 0:a.price)||"",x=((f=n[e.coinB.address])==null?void 0:f.price)||"",m=e.autoPoolPositionInfo.tick_lower_index,g=e.autoPoolPositionInfo.tick_upper_index;console.log(s[A],"list[i]"),console.log((I=e==null?void 0:e.object)==null?void 0:I.current_sqrt_price,"##poolInfo?.object?.current_sqrt_price");const y={tick_lower_index:m,tick_upper_index:g,current_sqrt_price:r==null?void 0:r.current_sqrt_price,liquidity:Number(w)>0?$.get_share_liquidity_by_amount({liquidity:e==null?void 0:e.liquidity,total_supply:e==null?void 0:e.total_supply},w):0};console.log(e,"##position");const b=d.getCoinAmountFromLiquidity({pool:{...e,current_sqrt_price:r==null?void 0:r.current_sqrt_price},position:y,roundUp:!1}),j=b.coinaAmount,q=b.coinbAmount;console.log(e.protocol_fee_rate,"##newPoolInfo.protocol_fee_rate");const S=j,_=q,u=new l(p).mul(new l(j)).toNumber(),k=new l(x).mul(new l(q)).toNumber(),O=u>0&&u<.01?"<$0.01":`$${C(h(u,2))}`,L=k>0&&k<.01?"<$0.01":`$${C(h(k,2))}`;let P=0;Number(w)>0&&(P=new l(w).div(Math.pow(10,t.decimals)));const D=p&&x?h(new l(u).add(new l(k)).toString(),2):"",R=e.total_supply;let v=0;P>0&&R>0&&(v=new l(P).mul(Math.pow(10,t.decimals)).div(new l(R)).mul(100).toNumber()),console.log(v,"##myShare");const V=new l(1).div(Math.pow(10,e.decimals)).toNumber();let U=0;v>1?U=h(v,2):v>0&&v<V?U=`<${V}`:v==0?U=0:U=W(v,1),console.log(w,P.toString(),"###balance"),this.positionInfoObj[e.id]={tick_lower_index:m,tick_upper_index:g,current_sqrt_price:r.current_sqrt_price,myLiquidity:M(w,t.decimals),amountA:S,amountB:_,...e,lpInfo:t,myAmountAUSD:O,myAmountBUSD:L,myLiquidityUSD:D,myShare:U},i.push({tick_lower_index:m,tick_upper_index:g,current_sqrt_price:(B=e==null?void 0:e.object)==null?void 0:B.current_sqrt_price,myLiquidity:M(w,t.decimals),amountA:S,amountB:_,...e,lpInfo:t,myAmountAUSD:O,myAmountBUSD:L,myLiquidityUSD:D,myShare:U})}this.positionInfoList=i,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(o){var L,P;const s=E("Sui"),d=J("Sui"),i=await s.getAutoPool(o),n=await d.getPool(i.pool_id);console.log("newPoolInfo:",i),console.log("this.positionInfoObj[id]:",this.positionInfoObj[o]);const a={...this.positionInfoObj[o],autoPoolPositionInfo:i.positins[0]},f=await s.getLpBalance(a.lp_token_type),I=(await d.getTokenListByCoinType([a.lp_token_type]))[0];console.log(f,"###balance updatePositionItem");const B=a.autoPoolPositionInfo.tick_lower_index,A=a.autoPoolPositionInfo.tick_upper_index,e={tick_lower_index:B,tick_upper_index:A,current_sqrt_price:n.current_sqrt_price,liquidity:$.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},f)},r=d.getCoinAmountFromLiquidity({pool:{current_sqrt_price:n.current_sqrt_price,...a},position:e,roundUp:!1});console.log(r,"amountInfo###"),r.coinaAmount,r.coinbAmount;const w=r.coinaAmount,t=r.coinbAmount,{RATES:p}=this.getPoolStore,x=i.total_supply,m=((L=p[a.coinA.address])==null?void 0:L.price)||0,g=((P=p[a.coinB.address])==null?void 0:P.price)||0,y=new l(m).mul(new l(r==null?void 0:r.coinaAmount)).toNumber(),b=new l(g).mul(new l(r==null?void 0:r.coinbAmount)).toNumber(),j=y>0&&y<.01?"<$0.01":`$${C(h(y,2))}`,q=b>0&&b<.01?"<$0.01":`$${C(h(b,2))}`;let S=new l(0);Number(f)>0&&(S=new l(f).div(Math.pow(10,I.decimals)));const _=new l(S).mul(Math.pow(10,a.lpInfo.decimals)).div(new l(x)).mul(100).toNumber();let u=0;const k=new l(1).div(Math.pow(10,a.decimals)).toNumber(),O=m&&g?h(new l(y).add(new l(b)).toString(),2):"";_>1?u=h(_,2):_>0&&_<k?u=`<${k}`:u=W(_,1),this.positionInfoObj[o]={...a,tick_lower_index:B,tick_upper_index:A,current_sqrt_price:n.current_sqrt_price,myLiquidity:M(f,I.decimals),amountA:w,amountB:t,myShare:u,myAmountAUSD:j,myAmountBUSD:q,myLiquidityUSD:O},console.log(this.positionInfoObj[o],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:o}=await fetch(`${c.Sui.api}/v2/sui/auto_pools`).then(s=>s.json());o&&o.pools&&o.pools.length>0&&(this.apyObj=Object.fromEntries(o.pools.map((s,d)=>[s.object_id,{...s,apr:s.apr.replace("%","")>0&&s.apr.replace("%","")<.01?"<0.01%":h(s.apr.replace("%",""),2)+"%",resultApr:s.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}}}});export{E as a,lo as u};
