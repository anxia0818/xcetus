import{a6 as V,l as $,T as K,a7 as H}from"./entry.34fc1491.js";import{c as r,a as W}from"./sha256.7cbc5f9a.js";import{H as Y,C as E,I as D,l as F,u as z,b as T,s as A,f as O,p as C}from"./pool.408390b1.js";import{C as G}from"./index.a2e374a0.js";import{D as i}from"./decimal.0e8aa3f1.js";function M(n){const u={launchpad:r[n||"Sui"].launchpad,ido:r[n||"Sui"].ido,xcetus:r[n||"Sui"].xcetus,xcetus_dividends:r[n||"Sui"].xcetus_dividends,cetus_faucet:r[n||"Sui"].cetus_faucet,xtoken:r[n||"Sui"].xtoken,xtoken_dividends:r[n||"Sui"].xtoken_dividends,token_faucet:r[n||"Sui"].token_faucet,booster:r[n||"Sui"].booster,maker_bonus:r[n||"Sui"].maker_bonus,liquidity_stratefy:r[n||"Sui"].liquidity_stratefy,vaults:r[n||"Sui"].vaults},e={fullRpcUrl:localStorage.getItem(`${n}-currentRpclocal2`)||r[n||"Sui"].fullRpcUrl,simulationAccount:r[n||"Sui"].simulationAccount,cetus_config:r[n||"Sui"].cetus_config,clmm_pool:r[n||"Sui"].clmm_pool,integrate:r[n||"Sui"].integrate,deepbook:r[n||"Sui"].deepbook,deepbook_endpoint_v2:r[n||"Sui"].deepbook_endpoint_v2,aggregatorUrl:r[n||"Sui"].aggregatorUrl},p=new Y(e),t=V(new G(u,p)),_=W(),f=$(()=>_);K(()=>{f.value.address&&(p.senderAddress=f.value.address)});const b=async()=>{console.log(t,"sdk###");const o=await t.Vaults.getVaultList();return o&&o.data||[]},P=async o=>await t.Vaults.getVault(o),L=async o=>{console.log(o,"###coinType");const c=await t.ClmmSDK.fullClient.getBalance({owner:p.senderAddress,coinType:o});return c&&c.totalBalance},a=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:b,getLpBalance:L,deposit:async o=>{const{lowerTick:c,upperTick:k,coinAmount:d,fix_amount_a:m,slippage:l,curSqrtPrice:I,rewarder_coin_types:q}=o;console.log(o,"params###");const y=E.estLiquidityAndcoinAmountFromOneAmounts(c,k,d,m,!0,l,I),w=m?d.toString():y.tokenMaxA.toString(),g=m?y.tokenMaxB.toString():d.toString(),S=await t.Vaults.deposit({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:w,amount_b:g,fix_amount_a:m,slippage:l,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[]});return a(S)},remove:async o=>{const{lowerSqrtPrice:c,upperSqrtPrice:k,lpTokenAmount:d,curSqrtPrice:m,slippage:l,rewarder_coin_types:I}=o,q=E.getCoinAmountFromLiquidity(d,m,c,k,!0),y=D(q.coinA.toString()).mul(D(1-l)),w=D(q.coinB.toString()).mul(D(1-l));console.log(o.lpTokenAmount.toString(),y.toString(),w.toString(),"params##");const g=await t.Vaults.remove({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:d.toString(),min_amount_a:F(y.toString(),0)||"",min_amount_b:F(w.toString(),0)||"",rewarder_coin_types:[]});return a(g)},getAutoPool:P}}const oo=H("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return z()}},actions:{async getAutoPoolList(){const u=await M("Sui").getAutoPools();console.log(u,"list###");const e=this.getPoolStore,p=u.map(t=>({...e.poolConfigObj[t.pool_id],id:t.id,lp_token_type:t.lp_token_type,autoPoolPositionInfo:t.positins[0],is_pause:t.is_pause}));this.autoPoolList=p,this.autoPoolObj=Object.fromEntries(p.map((t,_)=>[t.address,t])),console.log(p,"##autoPoolList")},async getMyAutoPoolPosition(){var _,f,b,P,L,a;const n=M("Sui"),u=this.autoPoolList,e=T("Sui"),p=[],{RATES:t}=this.getPoolStore;for(let h=0;h<u.length;h++){const s=u[h],o=await n.getLpBalance(u[h].lp_token_type),c=(await e.getTokenListByCoinType([u[h].lp_token_type]))[0];console.log(c,"lpInfo##");const k=((_=t[s.coinA.address])==null?void 0:_.price)||"",d=((f=t[s.coinB.address])==null?void 0:f.price)||"",m=s.autoPoolPositionInfo.tick_lower_index,l=s.autoPoolPositionInfo.tick_upper_index,I={tick_lower_index:m,tick_upper_index:l,current_sqrt_price:(b=s==null?void 0:s.object)==null?void 0:b.current_sqrt_price,liquidity:o},q=e.getCoinAmountFromLiquidity({pool:{current_sqrt_price:(P=s==null?void 0:s.object)==null?void 0:P.current_sqrt_price,...s},position:I,roundUp:!1}),y=q.coinaAmount,w=q.coinbAmount,g=A(new i(k).mul(new i(y)).toString(),2),S=A(new i(d).mul(new i(w)).toString(),2);let x=0;Number(o)>0&&(x=new i(o).div(Math.pow(10,c.decimals)));const j=k&&d?A(new i(g).add(new i(S)).toString(),2):"",U=s.autoPoolPositionInfo.total_supply;let B=0;x>0&&U>0&&(B=new i(x).mul(Math.pow(10,c.decimals)).div(new i(U)).mul(100).toNumber()),console.log(B,"##myShare");const R=new i(1).div(Math.pow(10,s.decimals)).toNumber();let v=0;B>1?v=A(B,2):B>0&&B<R?v=`<${R}`:v=O(B,1),console.log(o,x.toString(),"###balance"),this.positionInfoObj[s.id]={tick_lower_index:m,tick_upper_index:l,current_sqrt_price:(L=s==null?void 0:s.object)==null?void 0:L.current_sqrt_price,myLiquidity:C(o,c.decimals),amountA:y,amountB:w,...s,lpInfo:c,myAmountAUSD:g,myAmountBUSD:S,myLiquidityUSD:j,myShare:v},p.push({tick_lower_index:m,tick_upper_index:l,current_sqrt_price:(a=s==null?void 0:s.object)==null?void 0:a.current_sqrt_price,myLiquidity:C(o,c.decimals),amountA:y,amountB:w,...s,lpInfo:c,myAmountAUSD:g,myAmountBUSD:S,myLiquidityUSD:j,myShare:v})}this.positionInfoList=p,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async getUserPositionUSD(){const{RATES:n}=this.getPoolStore,u=T("Sui");console.log(this.positionInfoList,"###this.positionInfoList"),this.positionInfoList.forEach(e=>{var g,S;const p=((g=n[e.coinA.address])==null?void 0:g.price)||"",t=((S=n[e.coinB.address])==null?void 0:S.price)||"",_=new i(p).mul(new i(e==null?void 0:e.amountA)).toString(),f=new i(t).mul(new i(e==null?void 0:e.amountB)).toString(),b=2,P=2,L=A(_,b),a=A(f,P),h=p&&t?new i(L).add(new i(a)).toString():"",s=e.myLiquidity,o=e.autoPoolPositionInfo.total_supply;console.log(s,o,"####totalLiquidity");let c=0;s>0&&o>0&&(c=new i(s).mul(Math.pow(10,e.lpInfo.decimals)).div(new i(o)).mul(100).toNumber()),console.log(c,"##myShare");const k=new i(1).div(Math.pow(10,e.decimals)).toNumber();let d=0;c>1?d=A(c,2):c>0&&c<k?d=`<${k}`:d=O(c,1);const m={tick_lower_index:e.tick_lower_index,tick_upper_index:e.tick_upper_index,current_sqrt_price:e.object.current_sqrt_price,liquidity:o},l=u.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.object.current_sqrt_price,...e},position:m,roundUp:!1});console.log(l,"poolAmountInfo##");const I=new i(p).mul(new i(l==null?void 0:l.coinaAmount)).toString(),q=new i(t).mul(new i(l==null?void 0:l.coinbAmount)).toString(),y=A(I,b),w=A(q,P);console.log(l,"###poolAmountInfo"),console.log(c,"###myShare"),console.log(_,f,"##myPosition"),this.positionInfoObj[e.id]={...this.positionInfoObj[e.id],myAmountAUSD:L,myAmountBUSD:a,myLiquidityUSD:h,myShare:d,poolAmoutnA:y,poolAmoutnB:w},console.log(this.positionInfoObj,"###this.positionInfoObj")})},async updatePositionItem(n){var U,B;const u=M("Sui"),e=T("Sui"),p=await u.getAutoPool(n);console.log("newPoolInfo:",p),console.log("this.positionInfoObj[id]:",this.positionInfoObj[n]);const t={...this.positionInfoObj[n],autoPoolPositionInfo:p},_=await u.getLpBalance(t.lp_token_type),f=(await e.getTokenListByCoinType([t.lp_token_type]))[0];console.log(_,"###balance updatePositionItem");const b=t.autoPoolPositionInfo.tick_lower_index,P=t.autoPoolPositionInfo.tick_upper_index,L={tick_lower_index:b,tick_upper_index:P,current_sqrt_price:t.object.current_sqrt_price,liquidity:_},a=e.getCoinAmountFromLiquidity({pool:{current_sqrt_price:t.object.current_sqrt_price,...t},position:L,roundUp:!1});console.log(a,"amountInfo###");const h=a.coinaAmount,s=a.coinbAmount,{RATES:o}=this.getPoolStore,c=t.autoPoolPositionInfo.total_supply,k=2,d=2,m=((U=o[t.coinA.address])==null?void 0:U.price)||0,l=((B=o[t.coinB.address])==null?void 0:B.price)||0,I=new i(m).mul(new i(a==null?void 0:a.coinaAmount)).toString(),q=new i(l).mul(new i(a==null?void 0:a.coinbAmount)).toString();console.log(I,"poolAmountAUSD##");const y=A(I,k),w=A(q,d);let g=new i(0);Number(_)>0&&(g=new i(_).div(Math.pow(10,f.decimals)));const S=new i(g).mul(Math.pow(10,t.lpInfo.decimals)).div(new i(c)).mul(100).toNumber();let x=0;const j=new i(1).div(Math.pow(10,t.decimals)).toNumber();S>1?x=A(S,2):S>0&&S<j?x=`<${j}`:x=O(S,1),this.positionInfoObj[t.id]={...t,tick_lower_index:b,tick_upper_index:P,current_sqrt_price:t.object.current_sqrt_price,myLiquidity:A(C(_,f.decimals),2),amountA:h,amountB:s,myShare:x,myAmountAUSD:y,myAmountBUSD:w}},async getAutoPoolAPY(){const{data:n}=await fetch(`${r.Sui.api}/v2/sui/auto_pools`).then(u=>u.json());n&&n.pools&&n.pools.length>0&&(this.apyObj=Object.fromEntries(n.pools.map((u,e)=>[u.object_id,{...u,apr:O(u.apr.replace("%",""),2)+"%"}])),console.log(this.apyObj,"data##"))}}});export{M as a,oo as u};
