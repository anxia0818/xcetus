import{a8 as wo,C as go,V as Ao,a9 as So}from"./entry.90bfb5ad.js";import{c as g,a as fo}from"./sha256.51624703.js";import{I as qo,e as G,C as so,J,f as ao,s as x,u as bo,b as po,a as eo,T as uo,j as mo,p as co}from"./pool.b5ad59b5.js";import{C as ko,V as E}from"./index.c54617d8.js";import{D as t}from"./decimal.0e8aa3f1.js";function no(n){const l={launchpad:g[n||"Sui"].launchpad,ido:g[n||"Sui"].ido,xcetus:g[n||"Sui"].xcetus,xcetus_dividends:g[n||"Sui"].xcetus_dividends,cetus_faucet:g[n||"Sui"].cetus_faucet,xtoken:g[n||"Sui"].xtoken,xtoken_dividends:g[n||"Sui"].xtoken_dividends,token_faucet:g[n||"Sui"].token_faucet,booster:g[n||"Sui"].booster,maker_bonus:g[n||"Sui"].maker_bonus,liquidity_stratefy:g[n||"Sui"].liquidity_stratefy,vaults:g[n||"Sui"].vaults},_={fullRpcUrl:localStorage.getItem(`${n}-currentRpclocal2`)||g[n||"Sui"].fullRpcUrl,simulationAccount:g[n||"Sui"].simulationAccount,cetus_config:g[n||"Sui"].cetus_config,clmm_pool:g[n||"Sui"].clmm_pool,integrate:g[n||"Sui"].integrate,deepbook:g[n||"Sui"].deepbook,deepbook_endpoint_v2:g[n||"Sui"].deepbook_endpoint_v2,aggregatorUrl:g[n||"Sui"].aggregatorUrl},u=new qo(_),e=wo(new ko(l,u)),m=fo(),j=go(()=>m);Ao(()=>{j.value.address&&(u.senderAddress=j.value.address)});const W=async()=>{console.log(e,"sdk###");const o=await e.Vaults.getVaultList();return o&&o.data||[]},O=async o=>await e.Vaults.getVault(o),i=async o=>{if(console.log(o,"###coinType"),u.senderAddress){const a=await e.ClmmSDK.fullClient.getBalance({owner:u.senderAddress,coinType:o});return a&&a.totalBalance}else return 0},c=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:W,getLpBalance:i,getVault:async o=>{const a=await e.Vaults.getVault(o);return console.log(a,"vault##292"),a},deposit:async o=>{const{lowerTick:a,upperTick:P,slippage:S,rewarder_coin_types:h,isOnlyA:T,isOnlyB:I,currentTickIndex:f}=o;console.log(o,"params###");let d=o.fix_amount_a,y,L,s;if(T||I){const A=await e.Vaults.calculateDepositSwapAmount({lowerTick:a,upperTick:P,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool});console.log(A,"swapResut##211"),A?(y=new G(A.swapOutAmount),L=new G(A.afterSqrtPrice),s={swap_amount:A.swapInAmount,a2b:d},d=!d):(L=new G(o.curSqrtPrice),y=new G(o.coinAmount))}else L=o.curSqrtPrice,y=new G(o.coinAmount);let q,v,U;console.log(a,f,P,"####138"),f>=a&&f<=P?(q=so.estLiquidityAndcoinAmountFromOneAmounts(a,P,y,d,!0,S,L),v=d?y.toString():q.tokenMaxA.toString(),U=d?q.tokenMaxB.toString():y.toString()):f<a?(v=y.toNumber(),U=0):f>P&&(v=0,U=y.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:v,amount_b:U,fix_amount_a:d,slippage:S,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:s},"params171");const N=await e.Vaults.deposit({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:v,amount_b:U,fix_amount_a:d,slippage:S,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:s});return c(N)},remove:async o=>{const{lowerTick:a,upperTick:P,coinTypeA:S,coinTypeB:h,receiveAmount:T,clmm_pool:I,lowerSqrtPrice:f,upperSqrtPrice:d,fix_amount_a:y,curSqrtPrice:L,slippage:s,rewarder_coin_types:q,id:v,liquidity:U,swapParams:N,isOnlyA:A,isOnlyB:C,sliderVal:b,positionInfo:p}=o;console.log(b,"sliderVal##");const w=await O(v),Y=await u.Pool.getPool(w.pool_id);let D,k,K,X,B,M,R;if(console.log(T,"##receiveAmount"),A||C){if(D=await e.Vaults.calculateRemoveSwapAmount({lowerTick:a,upperTick:P,curSqrtPrice:Y.current_sqrt_price,fix_amount_a:y,receive_amount:T,coinTypeA:S,coinTypeB:h,clmm_pool:I}),console.log(D,"swapResut###"),D){const z=E.get_share_liquidity_by_amount(w,p.balance);k=so.getCoinAmountFromLiquidity(new G(b==100?z:D.liquidity),new G(Y.current_sqrt_price),f,d,!1),K=E.get_protocol_fee_amount(w,k.coinA.toString()),X=E.get_protocol_fee_amount(w,k.coinB.toString()),B=b==100?p.balance:E.get_lp_amount_by_liquidity(w,D.liquidity),M=J(k.coinA.toString()).mul(J(1-o.slippage)),R=J(k.coinB.toString()).mul(J(1-o.slippage)),console.log(M.toString(),"##minAmountA"),console.log(R.toString(),"##minAmountA")}}else{const z=E.get_share_liquidity_by_amount(w,b==100?p.balance:B);k=so.getCoinAmountFromLiquidity(new G(z),L,f,d,!1),K=E.get_protocol_fee_amount(w,k.coinA.toString()),X=E.get_protocol_fee_amount(w,k.coinB.toString()),B=o.lpTokenAmount,M=J(k.coinA.toString()).mul(J(1-o.slippage)),R=J(k.coinB.toString()).mul(J(1-o.slippage)),console.log(K,X,"##protocol_fee_amount_b")}console.log(B,"lpTokenAmount remove");const Z={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:B,min_amount_a:ao(M,0)||"",min_amount_b:ao(R,0)||"",rewarder_coin_types:[]};console.log(Z,"##removeParams"),(A||C)&&(Z.swapParams={a2b:!y,swap_amount:D==null?void 0:D.swapInAmount});const H=await e.Vaults.remove(Z);return c(H)},getAutoPool:O,calculateDepositSwapAmount:async o=>{const{lowerTick:a,upperTick:P,curSqrtPrice:S,fix_amount_a:h,input_amount:T,coinTypeA:I,coinTypeB:f,clmm_pool:d,slippage:y,decimals:L}=o;console.log(o,"params###");const s=await e.Vaults.calculateDepositSwapAmount({lowerTick:a,upperTick:P,curSqrtPrice:S,fix_amount_a:h,input_amount:T,coinTypeA:I,coinTypeB:f,clmm_pool:d});if(console.log(s,"##swapResut"),s){const q=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:x(q.sub(q.mul(y)).toNumber(),L)}}return s},calculateRemoveSwapAmount:async o=>{const{lowerTick:a,upperTick:P,curSqrtPrice:S,fix_amount_a:h,receiveAmount:T,coinTypeA:I,coinTypeB:f,clmm_pool:d,slippage:y,decimals:L}=o;console.log(o,"params###");const s=await e.Vaults.calculateRemoveSwapAmount({lowerTick:a,upperTick:P,curSqrtPrice:S,fix_amount_a:h,receive_amount:T,coinTypeA:I,coinTypeB:f,clmm_pool:d});if(console.log(s,"###swapResut calculateRemoveSwapAmount"),s){const q=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:x(q.sub(q.mul(y)).toNumber(),L)}}return s}}}const ho=So("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING",slippage:localStorage.getItem("cetus-auto-slippage")||"0.1"}),getters:{getPoolStore(){return bo()}},actions:{async getAutoPoolList(){const l=await no("Sui").getAutoPools();console.log(l,"list###");const _=this.getPoolStore,u=l.map(e=>({..._.poolConfigObj[e.pool_id],id:e.id,lp_token_type:e.lp_token_type,autoPoolPositionInfo:e.positins[0],is_pause:e.is_pause,total_supply:e.total_supply,liquidity:e.liquidity,protocol_fee_rate:e.protocol_fee_rate,max_liquidity_quota:e.max_liquidity_quota}));this.autoPoolList=u,this.autoPoolObj=Object.fromEntries(u.map((e,m)=>[e.address,e])),this.getMyAutoPoolPosition(),console.log(u,"##autoPoolList")},async getMyAutoPoolPosition(){var m,j,W;const n=no("Sui"),l=this.autoPoolList,_=po("Sui"),u=[],{RATES:e}=this.getPoolStore;for(let O=0;O<l.length;O++){const i=l[O];console.log(i,"poolINfo###");const c=await _.getPool(i.address),r=await n.getLpBalance(l[O].lp_token_type);console.log(r,"balance##");const V=(await _.getTokenListByCoinType([l[O].lp_token_type]))[0];console.log(V,"lpInfo##");const Q=((m=e[i.coinA.address])==null?void 0:m.price)||"",F=((j=e[i.coinB.address])==null?void 0:j.price)||"",$=i.autoPoolPositionInfo.tick_lower_index,o=i.autoPoolPositionInfo.tick_upper_index,a={tick_lower_index:$,tick_upper_index:o,current_sqrt_price:c==null?void 0:c.current_sqrt_price,liquidity:Number(r)>0?E.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},r):0},P=await _.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:c==null?void 0:c.current_sqrt_price},position:a,roundUp:!1});console.log(P,"##amountInfo");const S=P.coinaAmount,h=P.coinbAmount,T=S,I=h,f=i.coinA.decimals,d=i.coinB.decimals,y=_.TickMath.tickIndexToPrice(Number($),f,d).toString(),L=_.TickMath.tickIndexToPrice(Number(o),f,d).toString(),s=new t(Q).mul(new t(S)).toNumber(),q=new t(F).mul(new t(h)).toNumber(),v=s>0&&s<.01?"<$0.01":`$${eo(x(s,2))}`,U=q>0&&q<.01?"<$0.01":`$${eo(x(q,2))}`,N=uo.sqrtPriceX64ToPrice(c.current_sqrt_price,f,d);let A,C;const b=await _.getCoinAmountFromLiquidity({pool:{...i,tick_lower_index:$,tick_upper_index:o,current_sqrt_price:c==null?void 0:c.current_sqrt_price},position:{...a,liquidity:i.liquidity},roundUp:!1}),p=new t(b.coinaAmount).toNumber(),w=new t(b.coinbAmount).toNumber();console.log(p,w,N.toString(),"###116");const Y=x(new t(p).mul(new t(Q)).toNumber(),2),D=x(new t(w).mul(new t(F)).toNumber(),2);if(console.log(c,"newPool##"),console.log(p,w,"###131"),p>0&&w>0){const to=new t(p).mul(N).add(new t(w));A=new t(p).mul(N).div(to).mul(100).toNumber().toFixed(2),C=new t(w).div(to).mul(100).toNumber().toFixed(2)}else p>0?(A=100,C=0):w>0?(A=0,C=100):(A=50,C=50);console.log(p,w,A,C,"###147");let k=0;Number(r)>0&&(k=new t(r).div(Math.pow(10,V.decimals)));const K=Q&&F?x(new t(s).add(new t(q)).toString(),2):"--",X=i.total_supply;let B=0;k>0&&X>0&&(B=new t(k).mul(Math.pow(10,V.decimals)).div(new t(X)).mul(100).toNumber()),console.log(B,"##myShare");const M=new t(1).div(Math.pow(10,i.decimals)).toNumber();let R=0;if(B>1)R=x(B,2);else if(B>0&&B<M)R=`<${M}`;else if(B==0)R=0;else{const to=mo(B),yo=to==-1?2:to+2;R=x(B,yo)}console.log(r,k.toString(),"###balance");const Z={tick_lower_index:$,tick_upper_index:o,current_sqrt_price:c==null?void 0:c.current_sqrt_price,liquidity:i.max_liquidity_quota},H=await _.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:c==null?void 0:c.current_sqrt_price},position:Z,roundUp:!1}),z=new t(Q).mul(new t(H.coinaAmount)),oo=new t(F).mul(new t(H.coinbAmount)),io=new t(Q).mul(new t(b.coinaAmount)),_o=new t(F).mul(new t(b.coinbAmount)),lo=z.add(oo).toNumber(),ro=io.add(_o).toNumber();this.positionInfoObj[i.id]={tick_lower_index:$,tick_upper_index:o,current_sqrt_price:c.current_sqrt_price,myLiquidity:co(r,V.decimals),amountA:T,amountB:I,...i,lpInfo:V,myAmountAUSD:v,myAmountBUSD:U,myLiquidityUSD:K,myShare:R,minPrice:y,maxPrice:L,poolCoinARatio:A,poolCoinBRatio:C,poolCoinANum:p,poolCoinBNum:w,poolCoinAUSD:Y,poolCoinBUSD:D,quoteUSD:lo,poolUSD:ro,balance:r},u.push({tick_lower_index:$,tick_upper_index:o,current_sqrt_price:(W=i==null?void 0:i.object)==null?void 0:W.current_sqrt_price,myLiquidity:co(r,V.decimals),amountA:T,amountB:I,...i,lpInfo:V,myAmountAUSD:v,myAmountBUSD:U,myLiquidityUSD:K,myShare:R,minPrice:y,maxPrice:L,poolCoinARatio:A,poolCoinBRatio:C,poolCoinANum:p,poolCoinBNum:w,poolCoinAUSD:Y,poolCoinBUSD:D,quoteUSD:lo,poolUSD:ro,balance:r})}this.positionInfoList=u,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(n){var H,z;const l=no("Sui"),_=po("Sui"),u=await l.getAutoPool(n),e=await _.getPool(u.pool_id);console.log("newPoolInfo:",u),console.log("newPool:",e),console.log("this.positionInfoObj[id]:",this.positionInfoObj[n]);const m={...this.positionInfoObj[n],autoPoolPositionInfo:u.positins[0]},j=await l.getLpBalance(m.lp_token_type),W=(await _.getTokenListByCoinType([m.lp_token_type]))[0];console.log(j,"###balance updatePositionItem");const O=m.autoPoolPositionInfo.tick_lower_index,i=m.autoPoolPositionInfo.tick_upper_index,c={tick_lower_index:O,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,liquidity:E.get_share_liquidity_by_amount({liquidity:u==null?void 0:u.liquidity,total_supply:u==null?void 0:u.total_supply},j)},r=_.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.current_sqrt_price,...m},position:c,roundUp:!1});console.log(r,"amountInfo###"),r.coinaAmount,r.coinbAmount;const V=r.coinaAmount,Q=r.coinbAmount,{RATES:F}=this.getPoolStore,$=u.total_supply,o=uo.sqrtPriceX64ToPrice(e.current_sqrt_price,m.coinA.decimals,m.coinB.decimals),a=2,P=2,S=((H=F[m.coinA.address])==null?void 0:H.price)||0,h=((z=F[m.coinB.address])==null?void 0:z.price)||0,T=new t(S).mul(new t(r==null?void 0:r.coinaAmount)).toNumber(),I=new t(h).mul(new t(r==null?void 0:r.coinbAmount)).toNumber(),f=T>0&&T<.01?"<$0.01":`$${eo(x(T,2))}`,d=I>0&&I<.01?"<$0.01":`$${eo(x(I,2))}`;let y=new t(0);Number(j)>0&&(y=new t(j).div(Math.pow(10,W.decimals)));const L=S&&h?x(new t(T).add(new t(I)).toString(),2):"--",s=new t(y).mul(Math.pow(10,m.lpInfo.decimals)).div(new t($)).mul(100).toNumber();console.log(s,"##myShare");const q=new t(1).div(Math.pow(10,m.decimals)).toNumber();let v=0;if(s>1)v=x(s,2);else if(s>0&&s<q)v=`<${q}`;else if(s==0)v=0;else{const oo=mo(s),io=oo==-1?2:oo+2;v=x(s,io)}let U,N;const A=uo.sqrtPriceX64ToPrice(e.current_sqrt_price,a,P),C=await _.getCoinAmountFromLiquidity({pool:{...m,tick_lower_index:O,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:{...c,liquidity:u.liquidity},roundUp:!1}),b=new t(C.coinaAmount).toNumber(),p=new t(C.coinbAmount).toNumber();console.log(b,p,A.toString(),"###116");const w=x(new t(b).mul(new t(S)).toNumber(),2),Y=x(new t(p).mul(new t(h)).toNumber(),2);if(console.log(e,"newPool##"),console.log(b,p,"###poolCoinBNum"),b>0&&p>0){const oo=new t(b).mul(A).add(new t(p));U=new t(b).mul(A).div(oo).mul(100).toNumber().toFixed(2),N=new t(p).div(oo).mul(100).toNumber().toFixed(2)}else b>0?(U=100,N=0):p>0?(U=0,N=100):(U=50,N=50);const D={tick_lower_index:O,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price,liquidity:m.max_liquidity_quota},k=await _.getCoinAmountFromLiquidity({pool:{...m,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:D,roundUp:!1}),K=new t(S).mul(new t(k.coinaAmount)),X=new t(h).mul(new t(k.coinbAmount)),B=new t(S).mul(new t(C.coinaAmount)),M=new t(h).mul(new t(C.coinbAmount)),R=K.add(X).toNumber(),Z=B.add(M).toNumber();this.positionInfoObj[n]={...m,tick_lower_index:O,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,myLiquidity:co(j,W.decimals),amountA:V,amountB:Q,myShare:v,myAmountAUSD:f,myAmountBUSD:d,myLiquidityUSD:L,poolCoinARatio:U,poolCoinBRatio:N,poolCoinANum:b,poolCoinBNum:p,poolCoinAUSD:w,poolCoinBUSD:Y,quoteUSD:R,poolUSD:Z,balance:j,price:o},console.log(this.positionInfoObj[n],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:n}=await fetch(`${g.Sui.api}/v2/sui/auto_pools`).then(l=>l.json());n&&n.pools&&n.pools.length>0&&(this.apyObj=Object.fromEntries(n.pools.map((l,_)=>[l.object_id,{...l,apr:l.apr.replace("%","")>0&&l.apr.replace("%","")<.01?"<0.01%":x(l.apr.replace("%",""),2)+"%",resultApr:l.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(n){const l=no("Sui"),{status:_}=await l.getVault(n);this.currentAutoPoolStatus=_,this.updatePositionItem(n),console.log(_,"status##")},setSlippage(n){console.log(n,"slippage##"),this.slippage=n,localStorage.setItem("cetus-auto-slippage",n)}}});export{no as a,ho as u};
