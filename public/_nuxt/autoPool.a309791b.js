import{a8 as qo,C as fo,V as ko,a9 as Po}from"./entry.6a7fd9be.js";import{c as S,a as To}from"./sha256.f34400e9.js";import{M as Bo,N as wo,b as j,O as Y,T as ao,C as so,o as yo,s as v,u as xo,e as go,a as lo,f as Ao,p as uo}from"./pool.562ef446.js";import{C as vo,V as Z}from"./index.363fedaa.js";import{D as t}from"./decimal.0bdeb344.js";function ro(n){const _={launchpad:S[n||"Sui"].launchpad,ido:S[n||"Sui"].ido,xcetus:S[n||"Sui"].xcetus,xcetus_dividends:S[n||"Sui"].xcetus_dividends,cetus_faucet:S[n||"Sui"].cetus_faucet,xtoken:S[n||"Sui"].xtoken,xtoken_dividends:S[n||"Sui"].xtoken_dividends,token_faucet:S[n||"Sui"].token_faucet,booster:S[n||"Sui"].booster,maker_bonus:S[n||"Sui"].maker_bonus,liquidity_stratefy:S[n||"Sui"].liquidity_stratefy,vaults:S[n||"Sui"].vaults},d={fullRpcUrl:localStorage.getItem(`${n}-currentRpclocal2`)||S[n||"Sui"].fullRpcUrl,simulationAccount:S[n||"Sui"].simulationAccount,cetus_config:S[n||"Sui"].cetus_config,clmm_pool:S[n||"Sui"].clmm_pool,integrate:S[n||"Sui"].integrate,deepbook:S[n||"Sui"].deepbook,deepbook_endpoint_v2:S[n||"Sui"].deepbook_endpoint_v2,aggregatorUrl:S[n||"Sui"].aggregatorUrl},s=new Bo(d),e=qo(new vo(_,s)),r=To(),R=fo(()=>r);ko(()=>{R.value.address&&(s.senderAddress=R.value.address)});const oo=async()=>{console.log(e,"sdk###");const o=await e.Vaults.getVaultList();return o&&o.data||[]},O=async o=>{const u=await e.Vaults.getVault(o);return console.log(u,"vault##"),{...u,quota_based_type:wo(u.quota_based_type).full_address}},i=async o=>{if(console.log(o,"###coinType"),s.senderAddress){const u=await e.ClmmSDK.fullClient.getBalance({owner:s.senderAddress,coinType:o});return u&&u.totalBalance}else return 0},y=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:oo,getLpBalance:i,getVault:async o=>{const u=await e.Vaults.getVault(o);return console.log(u,"vault##292"),u},deposit:async o=>{const{lowerTick:u,upperTick:g,slippage:b,rewarder_coin_types:B,isOnlyA:q,isOnlyB:f,currentTickIndex:A,decimal_b:h}=o;console.log(o,"params###");let a=o.fix_amount_a,w,m,k,l=A;if(q||f){let c;try{c=await e.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:g,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,use_route:!0,priceSplitPoint:b},!0)}catch{c=await e.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:g,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,use_route:!1,priceSplitPoint:b},!0)}console.log(c,"swapResut##211"),c?(m=new j(c.afterSqrtPrice),w=c.fixAmountA===a?new j(Y(o.coinAmount).sub(c.swapInAmount).toString()):new j(c.swapOutAmount),k={swap_amount:c.swapInAmount,a2b:a,input_amount:o.coinAmount,route_obj:c.routeObj},a=c.fixAmountA,l=ao.sqrtPriceX64ToTickIndex(new j(c.afterSqrtPrice))):(m=new j(o.curSqrtPrice),w=new j(o.coinAmount))}else m=o.curSqrtPrice,w=new j(o.coinAmount);let D,C,V;console.log(u,A,g,"####138"),l>=u&&l<=g?(D=so.estLiquidityAndcoinAmountFromOneAmounts(u,g,w,a,!0,b,m),C=a?w.toString():D.tokenMaxA.toString(),V=a?D.tokenMaxB.toString():w.toString()):l<u?(C=w.toNumber(),V=0):l>g&&(C=0,V=w.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:C,amount_b:V,fix_amount_a:a,slippage:b,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:k},"params171");const p=await e.Vaults.deposit({lowerTick:u,upperTick:g,vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:C,amount_b:V,fix_amount_a:a,slippage:b,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,swapParams:k});return y(p)},remove:async o=>{const{lowerTick:u,upperTick:g,coinTypeA:b,coinTypeB:B,receiveAmount:q,clmm_pool:f,lowerSqrtPrice:A,upperSqrtPrice:h,fix_amount_a:a,curSqrtPrice:w,slippage:m,rewarder_coin_types:k,id:l,liquidity:D,swapParams:C,isOnlyA:V,isOnlyB:p,sliderVal:c,positionInfo:L,maxLiquidity:$}=o;console.log(c,"sliderVal##");const N=await O(l),z=await s.Pool.getPool(N.pool_id);let U,T,J,F,Q,M,G;const x=Z.get_share_liquidity_by_amount(N,c==100?L.balance:o.lpTokenAmount);if(console.log(q,"##receiveAmount"),V||p){try{U=await e.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:g,curSqrtPrice:z.current_sqrt_price,fix_amount_a:a,receive_amount:q,coinTypeA:b,coinTypeB:B,clmm_pool:f,use_route:!0,priceSplitPoint:m,removeLiquidity:c==100?x:"",maxLiquidity:$})}catch{U=await e.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:g,curSqrtPrice:z.current_sqrt_price,fix_amount_a:a,receive_amount:q,coinTypeA:b,coinTypeB:B,clmm_pool:f,use_route:!1,priceSplitPoint:m,removeLiquidity:c==100?x:"",maxLiquidity:$})}if(console.log(U,"swapResut###"),U){const K=Z.get_share_liquidity_by_amount(N,L.balance);T=so.getCoinAmountFromLiquidity(new j(c==100?K:U.liquidity),new j(z.current_sqrt_price),A,h,!1),J=Z.get_protocol_fee_amount(N,T.coinA.toString()),F=Z.get_protocol_fee_amount(N,T.coinB.toString()),Q=c==100?L.balance:Z.get_lp_amount_by_liquidity(N,U.liquidity),M=Y(T.coinA.toString()).mul(Y(1-o.slippage)),G=Y(T.coinB.toString()).mul(Y(1-o.slippage)),console.log(M.toString(),"##minAmountA"),console.log(G.toString(),"##minAmountA")}}else console.log(x,"#removeLiquidity"),T=so.getCoinAmountFromLiquidity(new j(x),w,A,h,!1),T=so.getCoinAmountFromLiquidity(new j(x),w,A,h,!1),console.log(T,"#coinAmountscoinAmounts"),Q=o.lpTokenAmount,M=Y(T.coinA.toString()).mul(Y(1-o.slippage)),G=Y(T.coinB.toString()).mul(Y(1-o.slippage)),console.log(J,F,"##protocol_fee_amount_b"),console.log(M.toString(),"##minAmountA"),console.log(G.toString(),"##minAmountA"),console.log(o,"params###246");console.log(Q,"lpTokenAmount remove");const W={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:Q,min_amount_a:yo(M,0)||"",min_amount_b:yo(G,0)||"",rewarder_coin_types:[],slippage:o.slippage};console.log(W,"##removeParams"),(V||p)&&(W.swapParams={a2b:!a,swap_amount:U==null?void 0:U.swapInAmount,route_obj:U.routeObj});const X=await e.Vaults.remove(W);return y(X)},getAutoPool:O,calculateDepositSwapAmount:async o=>{const{lowerTick:u,upperTick:g,curSqrtPrice:b,fix_amount_a:B,input_amount:q,coinTypeA:f,coinTypeB:A,clmm_pool:h,slippage:a,decimals:w}=o;console.log(o,"params###");let m;try{m=await e.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:g,curSqrtPrice:b,fix_amount_a:B,input_amount:q,coinTypeA:f,coinTypeB:A,clmm_pool:h,use_route:!0,priceSplitPoint:a},!0)}catch{m=await e.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:g,curSqrtPrice:b,fix_amount_a:B,input_amount:q,coinTypeA:f,coinTypeB:A,clmm_pool:h,use_route:!1,priceSplitPoint:a},!0)}if(console.log(m,"##swapResut"),m){const k=new t(m.swapOutAmount);return{...m,swapOutAmountLimit:v(k.sub(k.mul(a)).toNumber(),w)}}return m},calculateRemoveSwapAmount:async o=>{const{lowerTick:u,upperTick:g,curSqrtPrice:b,fix_amount_a:B,receiveAmount:q,coinTypeA:f,coinTypeB:A,clmm_pool:h,slippage:a,decimals:w,liquidity:m,maxLiquidity:k}=o;console.log(o,"params###");let l;try{l=await e.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:g,curSqrtPrice:b,fix_amount_a:B,receive_amount:q,coinTypeA:f,coinTypeB:A,clmm_pool:h,use_route:!0,priceSplitPoint:a,removeLiquidity:m,maxLiquidity:k})}catch{l=await e.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:g,curSqrtPrice:b,fix_amount_a:B,receive_amount:q,coinTypeA:f,coinTypeB:A,clmm_pool:h,use_route:!1,priceSplitPoint:a,removeLiquidity:m,maxLiquidity:k})}if(console.log(l,"###swapResut calculateRemoveSwapAmount"),l){const D=new t(l.swapOutAmount);return console.log(D.toNumber(),"swapOutAmount.toNumber()"),{...l,swapOutAmountLimit:v(D.sub(D.mul(a)).toNumber(),w)}}return l}}}const Io=Po("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING",slippage:localStorage.getItem("cetus-auto-slippage")||"0.1"}),getters:{getPoolStore(){return xo()}},actions:{async getAutoPoolList(){const _=await ro("Sui").getAutoPools();console.log(_,"list###");const d=this.getPoolStore,s=_.map(e=>({...d.poolConfigObj[e.pool_id],id:e.id,lp_token_type:e.lp_token_type,autoPoolPositionInfo:e.positins[0],is_pause:e.is_pause,total_supply:e.total_supply,liquidity:e.liquidity,protocol_fee_rate:e.protocol_fee_rate,max_quota:e.max_quota,quota_based_type:wo(e.quota_based_type).full_address}));this.autoPoolList=s,this.autoPoolObj=Object.fromEntries(s.map((e,r)=>[e.address,e])),this.getMyAutoPoolPosition(),console.log(s,"##autoPoolList")},async getMyAutoPoolPosition(){var r,R,oo;const n=ro("Sui"),_=this.autoPoolList,d=go("Sui"),s=[],{RATES:e}=this.getPoolStore;for(let O=0;O<_.length;O++){const i=_[O];console.log(i,"poolINfo###");const y=await d.getPool(i.address),I=await n.getLpBalance(_[O].lp_token_type);console.log(I,"balance##");const P=(await d.getTokenListByCoinType([_[O].lp_token_type]))[0];console.log(P,"lpInfo##");const to=((r=e[i.coinA.address])==null?void 0:r.price)||"",H=((R=e[i.coinB.address])==null?void 0:R.price)||"",E=i.autoPoolPositionInfo.tick_lower_index,o=i.autoPoolPositionInfo.tick_upper_index,u=Number(I)>0?Z.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},I):0,g={tick_lower_index:E,tick_upper_index:o,current_sqrt_price:y==null?void 0:y.current_sqrt_price,liquidity:u},b=await d.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:y==null?void 0:y.current_sqrt_price},position:g,roundUp:!1});console.log(b,"##amountInfo");const B=b.coinaAmount,q=b.coinbAmount,f=B,A=q,h=i.coinA.decimals,a=i.coinB.decimals,w=d.TickMath.tickIndexToPrice(Number(E),h,a).toString(),m=d.TickMath.tickIndexToPrice(Number(o),h,a).toString(),k=new t(to).mul(new t(B)).toNumber(),l=new t(H).mul(new t(q)).toNumber(),D=k>0&&k<.01?"<$0.01":`$${lo(v(k,2))}`,C=l>0&&l<.01?"<$0.01":`$${lo(v(l,2))}`,V=ao.sqrtPriceX64ToPrice(y.current_sqrt_price,h,a),p=await d.getCoinAmountFromLiquidity({pool:{...i,tick_lower_index:E,tick_upper_index:o,current_sqrt_price:y==null?void 0:y.current_sqrt_price},position:{...g,liquidity:i.liquidity},roundUp:!1}),c=new t(p.coinaAmount).toNumber(),L=new t(p.coinbAmount).toNumber();console.log(c,L,V.toString(),"###116");const $=v(new t(c).mul(new t(to)).toNumber(),2),N=v(new t(L).mul(new t(H)).toNumber(),2);console.log(y,"newPool##"),console.log(c,L,to,H,Number($)+Number(N),"###poolCoinBNum");const{ratioA:z,ratioB:U}=Z.calculateDepositRatio(E,o,new j.BN(y==null?void 0:y.current_sqrt_price));console.log(z,U.toString(),"###139");const T=z.mul(100).toNumber().toFixed(0),J=100-Number(T);console.log(c,L,T,J,"###147");let F=0;Number(I)>0&&(F=new t(I).div(Math.pow(10,P.decimals)));const Q=new t(k).add(new t(l)).toNumber(),M=to&&H?Q>0&&Q<.01?"<0.01":v(new t(k).add(new t(l)).toString(),2):"--",G=i.total_supply;let x=0;F>0&&G>0&&(x=new t(F).mul(Math.pow(10,P.decimals)).div(new t(G)).mul(100).toNumber()),console.log(x,"##myShare");const W=new t(1).div(Math.pow(10,i.decimals)).toNumber();let X=0;if(x>1)X=v(x,2);else if(x>0&&x<W)X=`<${W}`;else if(x==0)X=0;else{const _o=Ao(x),bo=_o==-1?2:_o+2;X=v(x,bo)}console.log(I,F.toString(),"###balance");const K=(await d.getTokenListByCoinType([i.quota_based_type]))[0],no=uo(i.max_quota,K.decimals);console.log(i.quota_based_type,K,no,"##quoteCoinInfo");const eo=K.address==i.coin_b_address,io=eo?new t(p.coinaAmount).mul(i.price).add(p.coinbAmount):new t(p.coinaAmount).mul(1/i.price).add(p.coinbAmount),co=io.toNumber();console.log(eo,co,"#isQuotaCoin");const po=no,So=eo?new t(p.coinaAmount).mul(i.price).add(p.coinbAmount):new t(p.coinaAmount).mul(1/i.price).add(p.coinbAmount),mo=new t(po).sub(So).mul(H).toNumber();console.log(mo,"remainingTokenUSD##"),console.log(io.toNumber(),"#poolTokenNum"),this.positionInfoObj[i.id]={tick_lower_index:E,tick_upper_index:o,current_sqrt_price:y.current_sqrt_price,myLiquidity:uo(I,P.decimals),amountA:f,amountB:A,...i,lpInfo:P,myAmountAUSD:D,myAmountBUSD:C,myLiquidityUSD:M,myShare:X,minPrice:w,maxPrice:m,poolCoinARatio:T,poolCoinBRatio:J,poolCoinANum:c,poolCoinBNum:L,poolCoinAUSD:$,poolCoinBUSD:N,quoteUSD:po,poolUSD:Number($)+Number(N),balance:I,quoteCoinInfo:K,remainingTokenUSD:mo,currentDeposit:co,positionLiquidity:u},s.push({tick_lower_index:E,tick_upper_index:o,current_sqrt_price:(oo=i==null?void 0:i.object)==null?void 0:oo.current_sqrt_price,myLiquidity:uo(I,P.decimals),amountA:f,amountB:A,...i,lpInfo:P,myAmountAUSD:D,myAmountBUSD:C,myLiquidityUSD:M,myShare:X,minPrice:w,maxPrice:m,poolCoinARatio:T,poolCoinBRatio:J,poolCoinANum:c,poolCoinBNum:L,poolCoinAUSD:$,poolCoinBUSD:N,quoteUSD:po,poolUSD:Number($)+Number(N),balance:I})}this.positionInfoList=s,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(n){var no,eo;const _=ro("Sui"),d=go("Sui"),s=await _.getAutoPool(n),e=await d.getPool(s.pool_id);console.log("newPoolInfo:",s),console.log("newPool:",e),console.log("this.positionInfoObj[id]:",this.positionInfoObj[n]);const r={...this.positionInfoObj[n],autoPoolPositionInfo:s.positins[0],...e},R=await _.getLpBalance(r.lp_token_type),oo=(await d.getTokenListByCoinType([r.lp_token_type]))[0];console.log(R,"###balance updatePositionItem");const O=r.autoPoolPositionInfo.tick_lower_index,i=r.autoPoolPositionInfo.tick_upper_index,y=Z.get_share_liquidity_by_amount({liquidity:s==null?void 0:s.liquidity,total_supply:s==null?void 0:s.total_supply},R),I={tick_lower_index:O,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,liquidity:y};console.log(r,"poolInfo##301");const P=d.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.current_sqrt_price,...r},position:I,roundUp:!1});console.log(P,"amountInfo###");const to=P.coinaAmount,H=P.coinbAmount,{RATES:E}=this.getPoolStore,o=s.total_supply,u=ao.sqrtPriceX64ToPrice(e.current_sqrt_price,r.coinA.decimals,r.coinB.decimals),g=2,b=2,B=((no=E[r.coinA.address])==null?void 0:no.price)||0,q=((eo=E[r.coinB.address])==null?void 0:eo.price)||0,f=new t(B).mul(new t(P==null?void 0:P.coinaAmount)).toNumber(),A=new t(q).mul(new t(P==null?void 0:P.coinbAmount)).toNumber(),h=f>0&&f<.01?"<$0.01":`$${lo(v(f,2))}`,a=A>0&&A<.01?"<$0.01":`$${lo(v(A,2))}`;let w=new t(0);Number(R)>0&&(w=new t(R).div(Math.pow(10,oo.decimals)));const m=new t(f).add(new t(A)).toNumber(),k=B&&q?m>0&&m<.01?"<0.01":v(new t(f).add(new t(A)).toString(),2):"--",l=new t(w).mul(Math.pow(10,r.lpInfo.decimals)).div(new t(o)).mul(100).toNumber();console.log(l,"##myShare");const D=new t(1).div(Math.pow(10,r.decimals)).toNumber();let C=0;if(l>1)C=v(l,2);else if(l>0&&l<D)C=`<${D}`;else if(l==0)C=0;else{const io=Ao(l),co=io==-1?2:io+2;C=v(l,co)}const V=ao.sqrtPriceX64ToPrice(e.current_sqrt_price,g,b),p=await d.getCoinAmountFromLiquidity({pool:{...r,tick_lower_index:O,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:{...I,liquidity:s.liquidity},roundUp:!1}),c=new t(p.coinaAmount).toNumber(),L=new t(p.coinbAmount).toNumber();console.log(c,L,V.toString(),"###116");const $=v(new t(c).mul(new t(B)).toNumber(),2),N=v(new t(L).mul(new t(q)).toNumber(),2);console.log(e,"newPool##"),console.log(c,L,B,q,Number($)+Number(N),"###poolCoinBNum");const{ratioA:z,ratioB:U}=Z.calculateDepositRatio(O,i,new j.BN(e==null?void 0:e.current_sqrt_price));console.log(z,U.toString(),"###139");const T=z.mul(100).toNumber().toFixed(0),J=100-Number(T),F=(await d.getTokenListByCoinType([s.quota_based_type]))[0],Q=uo(s.max_quota,F.decimals);console.log(s.quota_based_type,F,Q,"##quoteCoinInfo");const M=F.address==r.coin_b_address,x=(M?new t(p.coinaAmount).mul(r.price).add(p.coinbAmount):new t(p.coinaAmount).mul(1/r.price).add(p.coinbAmount)).toNumber(),W=Q,X=M?new t(p.coinaAmount).mul(r.price).add(p.coinbAmount):new t(p.coinaAmount).mul(1/r.price).add(p.coinbAmount),K=new t(W).sub(X).mul(q).toNumber();console.log(K,"remainingTokenUSD##"),this.positionInfoObj[n]={...r,tick_lower_index:O,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,myLiquidity:uo(R,oo.decimals),amountA:to,amountB:H,myShare:C,myAmountAUSD:h,myAmountBUSD:a,myLiquidityUSD:k,poolCoinARatio:T,poolCoinBRatio:J,poolCoinANum:c,poolCoinBNum:L,poolCoinAUSD:$,poolCoinBUSD:N,quoteUSD:W,poolUSD:Number($)+Number(N),balance:R,price:u,quoteCoinInfo:F,remainingTokenUSD:K,currentDeposit:x,positionLiquidity:y,liquidity:s==null?void 0:s.liquidity},console.log(this.positionInfoObj[n],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:n}=await fetch(`${S.Sui.api}/v2/sui/auto_pools`).then(_=>_.json());n&&n.pools&&n.pools.length>0&&(this.apyObj=Object.fromEntries(n.pools.map((_,d)=>[_.object_id,{..._,apr:_.apr.replace("%","")>0&&_.apr.replace("%","")<.01?"<0.01%":v(_.apr.replace("%",""),2)+"%",resultApr:_.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(n){const _=ro("Sui"),{status:d}=await _.getVault(n);this.currentAutoPoolStatus=d,this.updatePositionItem(n),console.log(d,"status##")},setSlippage(n){console.log(n,"slippage##"),this.slippage=n,localStorage.setItem("cetus-auto-slippage",n)}}});export{ro as a,Io as u};
