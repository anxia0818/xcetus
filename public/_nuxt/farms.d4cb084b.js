import{a7 as Q}from"./entry.06329c18.js";import{u as V,T as D,e as z,m as H}from"./pool.ade63acd.js";import{D as c}from"./decimal.0bdeb344.js";import{c as W}from"./sha256.05d9ba3f.js";const to=Q("farms",{state:()=>({farmsPoolList:[],farmsPoolObj:{},farmsPoolListLoading:!1,cmmPoolInfoObj:{},farmsPositionObj:{},farmsLoadingObj:{},farmsUserUsd:{},farmsRewardObj:{},totalRwadrdUsd:"",farmsPositionList:[],farmsAllPositionLoading:!1,myFarmsPoolList:[]}),getters:{getPoolStore(){return V()}},actions:{async getFarmsPoolList(){this.farmsPoolListLoading=!0;try{const{data:b}=await fetch(`${W.Sui.api}/v2/sui/swap/count`).then(s=>s.json()),d=b.pools.filter(s=>s.stable_farming);console.log(d,"#farmsPoolsfarmsPools");const m=d.map(s=>{let S=0;console.log(s,"#farmsPool");const U=s.coin_a.decimals,f=s.coin_b.decimals,n=D.tickIndexToPrice(s.stable_farming.effective_tick_lower,U,f).toString(),a=D.tickIndexToPrice(s.stable_farming.effective_tick_upper,U,f).toString(),l=s.stable_farming.stable_rewarder.map(r=>(S+=Number(r.amount_second),{emission_per_day:new c(r.amount_second).mul(60*60*24),reward_coin:r.coin=="0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI"?"0x2::sui::SUI":r.coin,symbol:r.symbol,allocate_point:Number(r.amount_second)>0?1:0}));return console.log(S,s,"##totalAllocatePoint"),{...s,clmm_pool_id:s.swap_account,effective_tick_lower:s.stable_farming.effective_tick_lower,effective_tick_upper:s.stable_farming.effective_tick_upper,fee:s.fee*100+"%",id:s.stable_farming.stable_farming_pool,rewarders:l,status:S>0?"Live":"Ended",minPrice:n,maxPrice:a,coinA:s.coin_a,coinB:s.coin_b}});this.farmsPoolList=m,this.farmsPoolObj=Object.fromEntries(m.map(s=>[s.clmm_pool_id,{...s,address:s.clmm_pool_id}])),this.farmsPoolListLoading=!1,console.log(d,m,"farmsPools####")}catch(b){console.log("getFarmsPoolList error:",b);const m=await z("Sui").getLpList(),s=Object.fromEntries(m.map((n,a)=>[n.address,n]));console.log(s,"cmmLpObj##");const U=await H("Sui").getFramsPoolList();console.log("getFarmsPoolList:",U);const f=U.map(n=>{const a=s[n.clmm_pool_id];let l=0;const{tokensObj:r}=this.getPoolStore,w=n.rewarders.map(e=>{const o=e.reward_coin=="0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI"?"0x2::sui::SUI":e.reward_coin,u=r[o].decimals,A=r[o].symbol;l=l+Number(e.allocate_point);const _=new c(e.allocate_point).div(new c(e.total_allocate_point));return{...e,reward_coin:o,emission_per_day:Number(e.allocate_point)>0?new c(e.emission_per_second).mul(_).div(Math.pow(10,12)).mul(60*60*24).div(Math.pow(10,u)).toString():"0",symbol:A}}),h=a.coinA.decimals,p=a.coinB.decimals,i=D.tickIndexToPrice(n.effective_tick_lower,h,p).toString(),t=D.tickIndexToPrice(n.effective_tick_upper,h,p).toString();return console.log(l,"allocatePoint##"),{...n,minPrice:i,maxPrice:t,fee:a.fee*100+"%",coinA:a.coinA,coinB:a.coinB,rewarders:w,status:l>0?"Live":"Ended",stable_farming:{apr:0,tvl:0},coin_a:a.coinA,coin_b:a.coinB}});console.log("getFarmsPoolList",f),this.farmsPoolList=f,this.farmsPoolObj=Object.fromEntries(f.map(n=>[n.clmm_pool_id,{...n,address:n.clmm_pool_id}])),this.cmmPoolInfoObj=s,this.farmsPoolListLoading=!1}},async getPositionByPool(b,d,m){var i,t;this.farmsLoadingObj[d]=!0;const s=z("Sui"),S=H("Sui");console.log(b,d,"#account, poolAddress");const f=(await S.getOwnedFramsPositionNFTList(!0)).filter(e=>e.clmm_pool_id==d),n=await s.getPositionList(b,{address:{address:d}})||[],a=f.concat(n);console.log(f,n,"###farmingPositionList"),console.log(a,"###positionGroup");const l={},r={},w=[];for(let e=0;e<a.length;e++){const o=a[e],u=this.farmsPoolObj[o.clmm_pool_id||o.pool];console.log(u,"##poolInfo");const A=u.coinA.decimals,_=u.coinB.decimals;let R,L;o.tick_lower_index==s.TickUtil.getMinIndex(Number(u.tick_spacing))?R="0":R=s.TickMath.tickIndexToPrice(Number(o.tick_lower_index),A,_).toString(),o.tick_upper_index==s.TickUtil.getMaxIndex(Number(u.tick_spacing))?L="∞":L=s.TickMath.tickIndexToPrice(Number(o.tick_upper_index),A,_).toString(),console.log(o,"#position.clmm_pool_id");let j;const N=await s.getPool(o.clmm_pool_id||o.pool),M=D.sqrtPriceX64ToPrice(N.current_sqrt_price,A,_).toString();Number(M)>=Number(R)&&(L==="∞"||Number(M)<=Number(L))?j="Active":(Number(M)>Number(L)||Number(M)<Number(R))&&(j="Inactive");const k=s.getCoinAmountFromLiquidity({pool:N,position:o,roundUp:!1}),{RATES:x,tokensObj:F}=this.getPoolStore;console.log(x,"##cmmPoolStore");const T=((i=x[u.coin_a.address])==null?void 0:i.price)||"",v=((t=x[u.coin_a.address])==null?void 0:t.price)||"",I=new c(k.coinaAmount).div(Math.pow(10,A)),E=new c(k.coinbAmount).div(Math.pow(10,_)),G=new c(k.coinaAmount).div(Math.pow(10,A)).mul(T),B=new c(k.coinbAmount).div(Math.pow(10,_)).mul(v);let P=new c(0);o.rewards&&o.rewards.length>0?o.rewards=o.rewards.map(g=>{var J;console.log(g,o,"reward##171");const X=g.rewarder_type=="0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI"?"0x2::sui::SUI":g.rewarder_type,$=F[X];console.log(F,"##tokensObj");const O=((J=x[X])==null?void 0:J.price)||0,y=new c(g.rewarder_amount).div(new c(Math.pow(10,$.decimals)));console.log(y,O,"amount,rewardPrice");const q=y.mul(new c(O));return console.log(q.toString(),"rewarderAmountUsd"),r[o.clmm_pool_id]&&r[o.clmm_pool_id][o.id]?r[o.clmm_pool_id][o.id]=r[o.clmm_pool_id][o.id].add(q):r[o.clmm_pool_id]&&!r[o.clmm_pool_id][o.id]?(r[o.clmm_pool_id][o.id]={},r[o.clmm_pool_id][o.id]=q):(r[o.clmm_pool_id]={},r[o.clmm_pool_id][o.id]={},r[o.clmm_pool_id][o.id]=q),console.log(this.farmsRewardObj,"##farmsRewardObj"),P=P.add(q),{...g,rewarderAmount:y.toString(),rewarderAmountUsd:q.toString(),rewarderType:X}}):(o.rewards=[],this.farmsRewardObj[o.clmm_pool_id]={});let C;if(o.id){const g=G.add(B);l[o.clmm_pool_id]||(l[o.clmm_pool_id]={}),l[o.clmm_pool_id][o.id]=g}console.log(this.farmsUserUsd,"##this.farmsUserUsd"),w.push({...o,minPrice:R,maxPrice:L,positionUSD:G.add(B).toNumber(),clmmPool:o.clmm_pool_id||o.pool,positionStatus:j,positionSource:o.creator?"clmm":"farming",farmsPoolId:m,coinA:u.coinA,coinB:u.coinB,positionShare:C,amountAUsd:G,amountBUsd:B,amountA:I,amountB:E,positionRewardAmount:P})}const h={};Object.keys(r).forEach(e=>{h[e]={},h[e].amountUsd=new c(0),typeof r[e]=="object"&&Object.keys(r[e]).forEach(o=>{console.log(o,r[e][o],"#######375"),h[e].amountUsd=h[e].amountUsd.add(r[e][o])})});const p={};Object.keys(l).forEach(e=>{p[e]={},p[e].amount=new c(0),p[e].positionNum=0,typeof l[e]=="object"&&Object.keys(l[e]).forEach(o=>{p[e].amount=p[e].amount.add(l[e][o]),p[e].positionNum+=1})}),console.log("farmsUserUsd:",l),console.log(h,"##farmsRewardObjResult"),this.farmsRewardObj={...this.farmsRewardObj,...h},this.farmsUserUsd={...this.farmsUserUsd,...p},this.farmsPositionObj[d]=w,this.farmsLoadingObj[d]=!1},async getPositionByAllPool(b){var h,p;this.farmsAllPositionLoading=!0;const d=H("Sui"),m=z("Sui");this.totalRwadrdUsd=0;const s=await d.getOwnedFramsPositionNFTList(!0),S=await m.getPositionList(b,this.farmsPoolObj)||[];console.log(S,"###clmmPositionList");const U=s.concat(S);console.log(U,"##positionGroup");const f=[],n={},a={};for(let i=0;i<U.length;i++){const t=U[i],e=await m.getPool(t.clmm_pool_id||t.pool),o=m.getCoinAmountFromLiquidity({pool:e,position:t,roundUp:!1}),{RATES:u,tokensObj:A}=this.getPoolStore,_=this.farmsPoolObj[t.clmm_pool_id||t.pool],R=((h=u[_.coin_a.address])==null?void 0:h.price)||"",L=((p=u[_.coin_b.address])==null?void 0:p.price)||"",j=_.coin_a.decimals,N=_.coin_b.decimals,M=new c(o.coinaAmount).div(Math.pow(10,j)),k=new c(o.coinbAmount).div(Math.pow(10,N)),x=new c(o.coinaAmount).div(Math.pow(10,j)).mul(R),F=new c(o.coinbAmount).div(Math.pow(10,N)).mul(L);let T,v;t.tick_lower_index==m.TickUtil.getMinIndex(Number(_.tick_spacing))?T="0":T=m.TickMath.tickIndexToPrice(Number(t.tick_lower_index),j,N).toString(),t.tick_upper_index==m.TickUtil.getMaxIndex(Number(_.tick_spacing))?v="∞":v=m.TickMath.tickIndexToPrice(Number(t.tick_upper_index),j,N).toString();let I;const E=D.sqrtPriceX64ToPrice(e.current_sqrt_price,j,N).toString();Number(E)>=Number(T)&&(v==="∞"||Number(E)<=Number(v))?I="Active":(Number(E)>Number(v)||Number(E)<Number(T))&&(I="Inactive");let G;if(t.id){const P=x.add(F);a[t.clmm_pool_id]||(a[t.clmm_pool_id]={}),a[t.clmm_pool_id][t.id]=P}let B=new c(0);t.rewards&&t.rewards.length>0&&(t.rewards=t.rewards.map(P=>{var y;console.log(P,t,"#reward292");const C=P.rewarder_type=="0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI"?"0x2::sui::SUI":P.rewarder_type,g=A[C];console.log(g,C,"tokenInfo##294");const X=((y=u[C])==null?void 0:y.price)||0,$=new c(P.rewarder_amount).div(new c(Math.pow(10,g==null?void 0:g.decimals))),O=$.mul(new c(X));return console.log(O,"##rewarderAmountUsd"),n[t.clmm_pool_id]&&n[t.clmm_pool_id][t.id]?n[t.clmm_pool_id][t.id]=n[t.clmm_pool_id][t.id].add(O):n[t.clmm_pool_id]&&!n[t.clmm_pool_id][t.id]?(n[t.clmm_pool_id][t.id]={},n[t.clmm_pool_id][t.id]=O):(n[t.clmm_pool_id]={},n[t.clmm_pool_id][t.id]={},n[t.clmm_pool_id][t.id]=O),this.totalRwadrdUsd=new c(this.totalRwadrdUsd).add(O),B=B.add(O),{...P,rewarderAmount:$.toString(),rewarderAmountUsd:O.toString(),rewarderType:C}})),f.push({...t,minPrice:T,maxPrice:v,positionUSD:x.add(F).toNumber(),clmmPool:t.clmm_pool_id||t.pool,positionStatus:I,positionSource:t.creator?"clmm":"farming",farmsPoolId:t.pool_id,coinA:_.coinA,coinB:_.coinB,soucrce:t.id?"farming":"clmm",positionShare:G,amountAUsd:x.toString(),amountBUsd:F.toString(),amountA:M.toString(),amountB:k.toString(),positionRewardAmount:B})}this.farmsPositionList=f;const l={};f.forEach(i=>{l[i.clmm_pool_id||i.pool]||(l[i.clmm_pool_id||i.pool]=[]),l[i.clmm_pool_id||i.pool].push(i)}),this.farmsPositionObj=l,this.farmsAllPositionLoading=!1,console.log(this.farmsPositionObj,"#farmingPositionList"),console.log(n,"##this.farmsRewardObj");const r={};Object.keys(n).forEach(i=>{console.log(n,i,"farmsRewardObj:"),r[i]={},r[i].amountUsd=new c(0),typeof n[i]=="object"&&Object.keys(n[i]).forEach(t=>{console.log(n[i][t].toString(),"#######375"),r[i].amountUsd=r[i].amountUsd.add(n[i][t]),console.log(r[i].amountUsd.toString(),"result[key].amountUsd.toString()")})});const w={};Object.keys(a).forEach(i=>{w[i]={},w[i].amount=new c(0),w[i].positionNum=0,typeof a[i]=="object"&&Object.keys(a[i]).forEach(t=>{w[i].amount=w[i].amount.add(a[i][t]),w[i].positionNum+=1})}),console.log("farmsUserUsd:",a),console.log(this.totalRwadrdUsd,"this.totalRwadrdUsd###"),this.farmsRewardObj=r,this.farmsUserUsd=w,console.log(this.farmsRewardObj,"##this.farmsRewardObj"),this.getMyFarms()},getMyFarms(){const b=[];this.farmsPoolList.forEach(d=>{console.log(this.farmsPositionObj[d.clmm_pool_id],"this.this.farmsPositionObj[##");const m=this.farmsPositionObj[d.clmm_pool_id]&&this.farmsPositionObj[d.clmm_pool_id].filter(s=>s.positionSource=="farming");console.log(m,"getMyFarmsresult##"),m&&m.length>0&&b.push(d)}),this.myFarmsPoolList=b,console.log(b,"##myFarms")},logOut(){this.farmsPositionObj={},this.farmsUserUsd={},this.farmsRewardObj={},this.totalRwadrdUsd="",this.farmsPositionList=[],this.farmsAllPositionLoading=!1,this.myFarmsPoolList=[]}}});export{to as u};
