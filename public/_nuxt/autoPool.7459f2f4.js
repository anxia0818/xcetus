import{a8 as wo,C as So,V as qo,a9 as fo}from"./entry.67040c2f.js";import{c as y,a as bo}from"./sha256.a32dec89.js";import{I as ko,b as R,J as z,T as so,C as uo,f as _o,s as A,u as Po,e as mo,a as no,j as yo,p as lo}from"./pool.af722257.js";import{C as Bo,V as N}from"./index.4fa2727c.js";import{D as t}from"./decimal.0bdeb344.js";function io(n){const r={launchpad:y[n||"Sui"].launchpad,ido:y[n||"Sui"].ido,xcetus:y[n||"Sui"].xcetus,xcetus_dividends:y[n||"Sui"].xcetus_dividends,cetus_faucet:y[n||"Sui"].cetus_faucet,xtoken:y[n||"Sui"].xtoken,xtoken_dividends:y[n||"Sui"].xtoken_dividends,token_faucet:y[n||"Sui"].token_faucet,booster:y[n||"Sui"].booster,maker_bonus:y[n||"Sui"].maker_bonus,liquidity_stratefy:y[n||"Sui"].liquidity_stratefy,vaults:y[n||"Sui"].vaults},m={fullRpcUrl:localStorage.getItem(`${n}-currentRpclocal2`)||y[n||"Sui"].fullRpcUrl,simulationAccount:y[n||"Sui"].simulationAccount,cetus_config:y[n||"Sui"].cetus_config,clmm_pool:y[n||"Sui"].clmm_pool,integrate:y[n||"Sui"].integrate,deepbook:y[n||"Sui"].deepbook,deepbook_endpoint_v2:y[n||"Sui"].deepbook_endpoint_v2,aggregatorUrl:y[n||"Sui"].aggregatorUrl},u=new ko(m),e=wo(new Bo(r,u)),_=bo(),O=So(()=>_);qo(()=>{O.value.address&&(u.senderAddress=O.value.address)});const Y=async()=>{console.log(e,"sdk###");const o=await e.Vaults.getVaultList();return o&&o.data||[]},v=async o=>await e.Vaults.getVault(o),i=async o=>{if(console.log(o,"###coinType"),u.senderAddress){const l=await e.ClmmSDK.fullClient.getBalance({owner:u.senderAddress,coinType:o});return l&&l.totalBalance}else return 0},c=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:Y,getLpBalance:i,getVault:async o=>{const l=await e.Vaults.getVault(o);return console.log(l,"vault##292"),l},deposit:async o=>{const{lowerTick:l,upperTick:w,slippage:S,rewarder_coin_types:T,isOnlyA:k,isOnlyB:h,currentTickIndex:I,decimal_b:L}=o;console.log(o,"params###");let d=o.fix_amount_a,g,s,q,P=I;if(k||h){const p=await e.Vaults.calculateDepositSwapAmount({lowerTick:l,upperTick:w,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,decimal_b:L});console.log(p,"swapResut##211"),p?(s=new R(p.afterSqrtPrice),g=p.fixAmountA===d?new R(z(o.coinAmount).sub(p.swapInAmount).toString()):new R(p.swapOutAmount),q={swap_amount:p.swapInAmount,a2b:d,input_amount:o.coinAmount},d=p.fixAmountA,P=so.sqrtPriceX64ToTickIndex(new R(p.afterSqrtPrice))):(s=new R(o.curSqrtPrice),g=new R(o.coinAmount))}else s=o.curSqrtPrice,g=new R(o.coinAmount);let Q,C,f;console.log(l,I,w,"####138"),P>=l&&P<=w?(Q=uo.estLiquidityAndcoinAmountFromOneAmounts(l,w,g,d,!0,S,s),C=d?g.toString():Q.tokenMaxA.toString(),f=d?Q.tokenMaxB.toString():g.toString()):P<l?(C=g.toNumber(),f=0):P>w&&(C=0,f=g.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:C,amount_b:f,fix_amount_a:d,slippage:S,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:q},"params171");const B=await e.Vaults.deposit({lowerTick:l,upperTick:w,vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:C,amount_b:f,fix_amount_a:d,slippage:S,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,swapParams:q});return c(B)},remove:async o=>{const{lowerTick:l,upperTick:w,coinTypeA:S,coinTypeB:T,receiveAmount:k,clmm_pool:h,lowerSqrtPrice:I,upperSqrtPrice:L,fix_amount_a:d,curSqrtPrice:g,slippage:s,rewarder_coin_types:q,id:P,liquidity:Q,swapParams:C,isOnlyA:f,isOnlyB:B,sliderVal:p,positionInfo:J}=o;console.log(p,"sliderVal##");const U=await v(P),Z=await u.Pool.getPool(U.pool_id);let D,b,X,j,F,K,x;if(console.log(k,"##receiveAmount"),f||B){if(D=await e.Vaults.calculateRemoveSwapAmount({lowerTick:l,upperTick:w,curSqrtPrice:Z.current_sqrt_price,fix_amount_a:d,receive_amount:k,coinTypeA:S,coinTypeB:T,clmm_pool:h,use_route:!0}),console.log(D,"swapResut###"),D){const H=N.get_share_liquidity_by_amount(U,J.balance);b=uo.getCoinAmountFromLiquidity(new R(p==100?H:D.liquidity),new R(Z.current_sqrt_price),I,L,!1),X=N.get_protocol_fee_amount(U,b.coinA.toString()),j=N.get_protocol_fee_amount(U,b.coinB.toString()),F=p==100?J.balance:N.get_lp_amount_by_liquidity(U,D.liquidity),K=z(b.coinA.toString()).mul(z(1-o.slippage)),x=z(b.coinB.toString()).mul(z(1-o.slippage)),console.log(K.toString(),"##minAmountA"),console.log(x.toString(),"##minAmountA")}}else{const H=N.get_share_liquidity_by_amount(U,p==100?J.balance:F);b=uo.getCoinAmountFromLiquidity(new R(H),g,I,L,!1),X=N.get_protocol_fee_amount(U,b.coinA.toString()),j=N.get_protocol_fee_amount(U,b.coinB.toString()),F=o.lpTokenAmount,K=z(b.coinA.toString()).mul(z(1-o.slippage)),x=z(b.coinB.toString()).mul(z(1-o.slippage)),console.log(X,j,"##protocol_fee_amount_b")}console.log(F,"lpTokenAmount remove");const W={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:F,min_amount_a:_o(K,0)||"",min_amount_b:_o(x,0)||"",rewarder_coin_types:[]};console.log(W,"##removeParams"),(f||B)&&(W.swapParams={a2b:!d,swap_amount:D==null?void 0:D.swapInAmount});const M=await e.Vaults.remove(W);return c(M)},getAutoPool:v,calculateDepositSwapAmount:async o=>{const{lowerTick:l,upperTick:w,curSqrtPrice:S,fix_amount_a:T,input_amount:k,coinTypeA:h,coinTypeB:I,clmm_pool:L,slippage:d,decimals:g}=o;console.log(o,"params###");const s=await e.Vaults.calculateDepositSwapAmount({lowerTick:l,upperTick:w,curSqrtPrice:S,fix_amount_a:T,input_amount:k,coinTypeA:h,coinTypeB:I,clmm_pool:L,use_route:!0});if(console.log(s,"##swapResut"),s){const q=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:A(q.sub(q.mul(d)).toNumber(),g)}}return s},calculateRemoveSwapAmount:async o=>{const{lowerTick:l,upperTick:w,curSqrtPrice:S,fix_amount_a:T,receiveAmount:k,coinTypeA:h,coinTypeB:I,clmm_pool:L,slippage:d,decimals:g}=o;console.log(o,"params###");const s=await e.Vaults.calculateRemoveSwapAmount({lowerTick:l,upperTick:w,curSqrtPrice:S,fix_amount_a:T,receive_amount:k,coinTypeA:h,coinTypeB:I,clmm_pool:L,use_route:!0});if(console.log(s,"###swapResut calculateRemoveSwapAmount"),s){const q=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:A(q.sub(q.mul(d)).toNumber(),g)}}return s}}}const Lo=fo("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING",slippage:localStorage.getItem("cetus-auto-slippage")||"0.1"}),getters:{getPoolStore(){return Po()}},actions:{async getAutoPoolList(){const r=await io("Sui").getAutoPools();console.log(r,"list###");const m=this.getPoolStore,u=r.map(e=>({...m.poolConfigObj[e.pool_id],id:e.id,lp_token_type:e.lp_token_type,autoPoolPositionInfo:e.positins[0],is_pause:e.is_pause,total_supply:e.total_supply,liquidity:e.liquidity,protocol_fee_rate:e.protocol_fee_rate,max_liquidity_quota:e.max_liquidity_quota}));this.autoPoolList=u,this.autoPoolObj=Object.fromEntries(u.map((e,_)=>[e.address,e])),this.getMyAutoPoolPosition(),console.log(u,"##autoPoolList")},async getMyAutoPoolPosition(){var _,O,Y;const n=io("Sui"),r=this.autoPoolList,m=mo("Sui"),u=[],{RATES:e}=this.getPoolStore;for(let v=0;v<r.length;v++){const i=r[v];console.log(i,"poolINfo###");const c=await m.getPool(i.address),a=await n.getLpBalance(r[v].lp_token_type);console.log(a,"balance##");const V=(await m.getTokenListByCoinType([r[v].lp_token_type]))[0];console.log(V,"lpInfo##");const G=((_=e[i.coinA.address])==null?void 0:_.price)||"",E=((O=e[i.coinB.address])==null?void 0:O.price)||"",$=i.autoPoolPositionInfo.tick_lower_index,o=i.autoPoolPositionInfo.tick_upper_index,l={tick_lower_index:$,tick_upper_index:o,current_sqrt_price:c==null?void 0:c.current_sqrt_price,liquidity:Number(a)>0?N.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},a):0},w=await m.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:c==null?void 0:c.current_sqrt_price},position:l,roundUp:!1});console.log(w,"##amountInfo");const S=w.coinaAmount,T=w.coinbAmount,k=S,h=T,I=i.coinA.decimals,L=i.coinB.decimals,d=m.TickMath.tickIndexToPrice(Number($),I,L).toString(),g=m.TickMath.tickIndexToPrice(Number(o),I,L).toString(),s=new t(G).mul(new t(S)).toNumber(),q=new t(E).mul(new t(T)).toNumber(),P=s>0&&s<.01?"<$0.01":`$${no(A(s,2))}`,Q=q>0&&q<.01?"<$0.01":`$${no(A(q,2))}`,C=so.sqrtPriceX64ToPrice(c.current_sqrt_price,I,L),f=await m.getCoinAmountFromLiquidity({pool:{...i,tick_lower_index:$,tick_upper_index:o,current_sqrt_price:c==null?void 0:c.current_sqrt_price},position:{...l,liquidity:i.liquidity},roundUp:!1}),B=new t(f.coinaAmount).toNumber(),p=new t(f.coinbAmount).toNumber();console.log(B,p,C.toString(),"###116");const J=A(new t(B).mul(new t(G)).toNumber(),2),U=A(new t(p).mul(new t(E)).toNumber(),2);console.log(c,"newPool##"),console.log(B,p,"###131");const{ratioA:Z,ratioB:D}=N.calculateDepositRatio($,o,new R.BN(c==null?void 0:c.current_sqrt_price));console.log(Z.toString(),D.toString(),"###139");const b=Number(A(Z.toString(),2))*100,X=100-b;console.log(B,p,b,X,"###147");let j=0;Number(a)>0&&(j=new t(a).div(Math.pow(10,V.decimals)));const F=G&&E?A(new t(s).add(new t(q)).toString(),2):"--",K=i.total_supply;let x=0;j>0&&K>0&&(x=new t(j).mul(Math.pow(10,V.decimals)).div(new t(K)).mul(100).toNumber()),console.log(x,"##myShare");const W=new t(1).div(Math.pow(10,i.decimals)).toNumber();let M=0;if(x>1)M=A(x,2);else if(x>0&&x<W)M=`<${W}`;else if(x==0)M=0;else{const po=yo(x),Ao=po==-1?2:po+2;M=A(x,Ao)}console.log(a,j.toString(),"###balance");const H={tick_lower_index:$,tick_upper_index:o,current_sqrt_price:c==null?void 0:c.current_sqrt_price,liquidity:i.max_liquidity_quota},oo=await m.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:c==null?void 0:c.current_sqrt_price},position:H,roundUp:!1}),to=new t(G).mul(new t(oo.coinaAmount)),eo=new t(E).mul(new t(oo.coinbAmount)),co=new t(G).mul(new t(f.coinaAmount)),go=new t(E).mul(new t(f.coinbAmount)),ro=to.add(eo).toNumber(),ao=co.add(go).toNumber();this.positionInfoObj[i.id]={tick_lower_index:$,tick_upper_index:o,current_sqrt_price:c.current_sqrt_price,myLiquidity:lo(a,V.decimals),amountA:k,amountB:h,...i,lpInfo:V,myAmountAUSD:P,myAmountBUSD:Q,myLiquidityUSD:F,myShare:M,minPrice:d,maxPrice:g,poolCoinARatio:b,poolCoinBRatio:X,poolCoinANum:B,poolCoinBNum:p,poolCoinAUSD:J,poolCoinBUSD:U,quoteUSD:ro,poolUSD:ao,balance:a},u.push({tick_lower_index:$,tick_upper_index:o,current_sqrt_price:(Y=i==null?void 0:i.object)==null?void 0:Y.current_sqrt_price,myLiquidity:lo(a,V.decimals),amountA:k,amountB:h,...i,lpInfo:V,myAmountAUSD:P,myAmountBUSD:Q,myLiquidityUSD:F,myShare:M,minPrice:d,maxPrice:g,poolCoinARatio:b,poolCoinBRatio:X,poolCoinANum:B,poolCoinBNum:p,poolCoinAUSD:J,poolCoinBUSD:U,quoteUSD:ro,poolUSD:ao,balance:a})}this.positionInfoList=u,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(n){var oo,to;const r=io("Sui"),m=mo("Sui"),u=await r.getAutoPool(n),e=await m.getPool(u.pool_id);console.log("newPoolInfo:",u),console.log("newPool:",e),console.log("this.positionInfoObj[id]:",this.positionInfoObj[n]);const _={...this.positionInfoObj[n],autoPoolPositionInfo:u.positins[0]},O=await r.getLpBalance(_.lp_token_type),Y=(await m.getTokenListByCoinType([_.lp_token_type]))[0];console.log(O,"###balance updatePositionItem");const v=_.autoPoolPositionInfo.tick_lower_index,i=_.autoPoolPositionInfo.tick_upper_index,c={tick_lower_index:v,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,liquidity:N.get_share_liquidity_by_amount({liquidity:u==null?void 0:u.liquidity,total_supply:u==null?void 0:u.total_supply},O)},a=m.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.current_sqrt_price,..._},position:c,roundUp:!1});console.log(a,"amountInfo###"),a.coinaAmount,a.coinbAmount;const V=a.coinaAmount,G=a.coinbAmount,{RATES:E}=this.getPoolStore,$=u.total_supply,o=so.sqrtPriceX64ToPrice(e.current_sqrt_price,_.coinA.decimals,_.coinB.decimals),l=2,w=2,S=((oo=E[_.coinA.address])==null?void 0:oo.price)||0,T=((to=E[_.coinB.address])==null?void 0:to.price)||0,k=new t(S).mul(new t(a==null?void 0:a.coinaAmount)).toNumber(),h=new t(T).mul(new t(a==null?void 0:a.coinbAmount)).toNumber(),I=k>0&&k<.01?"<$0.01":`$${no(A(k,2))}`,L=h>0&&h<.01?"<$0.01":`$${no(A(h,2))}`;let d=new t(0);Number(O)>0&&(d=new t(O).div(Math.pow(10,Y.decimals)));const g=S&&T?A(new t(k).add(new t(h)).toString(),2):"--",s=new t(d).mul(Math.pow(10,_.lpInfo.decimals)).div(new t($)).mul(100).toNumber();console.log(s,"##myShare");const q=new t(1).div(Math.pow(10,_.decimals)).toNumber();let P=0;if(s>1)P=A(s,2);else if(s>0&&s<q)P=`<${q}`;else if(s==0)P=0;else{const eo=yo(s),co=eo==-1?2:eo+2;P=A(s,co)}const Q=so.sqrtPriceX64ToPrice(e.current_sqrt_price,l,w),C=await m.getCoinAmountFromLiquidity({pool:{..._,tick_lower_index:v,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:{...c,liquidity:u.liquidity},roundUp:!1}),f=new t(C.coinaAmount).toNumber(),B=new t(C.coinbAmount).toNumber();console.log(f,B,Q.toString(),"###116");const p=A(new t(f).mul(new t(S)).toNumber(),2),J=A(new t(B).mul(new t(T)).toNumber(),2);console.log(e,"newPool##"),console.log(f,B,"###poolCoinBNum");const{ratioA:U,ratioB:Z}=N.calculateDepositRatio(v,i,new R.BN(e==null?void 0:e.current_sqrt_price));console.log(U.toString(),Z.toString(),"###139");const D=Number(A(U.toString(),2))*100,b=100-D,X={tick_lower_index:v,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price,liquidity:_.max_liquidity_quota},j=await m.getCoinAmountFromLiquidity({pool:{..._,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:X,roundUp:!1}),F=new t(S).mul(new t(j.coinaAmount)),K=new t(T).mul(new t(j.coinbAmount)),x=new t(S).mul(new t(C.coinaAmount)),W=new t(T).mul(new t(C.coinbAmount)),M=F.add(K).toNumber(),H=x.add(W).toNumber();this.positionInfoObj[n]={..._,tick_lower_index:v,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,myLiquidity:lo(O,Y.decimals),amountA:V,amountB:G,myShare:P,myAmountAUSD:I,myAmountBUSD:L,myLiquidityUSD:g,poolCoinARatio:D,poolCoinBRatio:b,poolCoinANum:f,poolCoinBNum:B,poolCoinAUSD:p,poolCoinBUSD:J,quoteUSD:M,poolUSD:H,balance:O,price:o},console.log(this.positionInfoObj[n],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:n}=await fetch(`${y.Sui.api}/v2/sui/auto_pools`).then(r=>r.json());n&&n.pools&&n.pools.length>0&&(this.apyObj=Object.fromEntries(n.pools.map((r,m)=>[r.object_id,{...r,apr:r.apr.replace("%","")>0&&r.apr.replace("%","")<.01?"<0.01%":A(r.apr.replace("%",""),2)+"%",resultApr:r.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(n){const r=io("Sui"),{status:m}=await r.getVault(n);this.currentAutoPoolStatus=m,this.updatePositionItem(n),console.log(m,"status##")},setSlippage(n){console.log(n,"slippage##"),this.slippage=n,localStorage.setItem("cetus-auto-slippage",n)}}});export{io as a,Lo as u};
