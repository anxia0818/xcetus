import{_ as C,S as I,i as O,a2 as p,s as v,D as i,c as D,p as f,b as W}from"./pool.fabe733c.js";import{$ as F,m as P,L as R,a0 as V}from"./entry.517e5b8b.js";function g(s){const o={fullRpcUrl:localStorage.getItem(`${s}-current-rpc`)||C[s||"Sui"].fullRpcUrl,faucetURL:localStorage.getItem(`${s}-current-rpc`)||C[s||"Sui"].faucetURL,simulationAccount:C[s||"Sui"].simulationAccount,xcetus:C[s||"Sui"].xcetus};console.log("defaultNetworkOptions####",o);const e=F(new I(o)),c=O(),r=P(()=>c);R(()=>{r.value.address&&(e.senderAddress=r.value.address)}),console.log(e.senderAddress,"===>sdk.senderAddress");const h=async t=>{const n=await e.XCetusModule.getOwnerLockCetuss(t);return console.log(n,"===>lockWhales"),n},m=async(t,n)=>{const a=p.getAvailableXCetus(t,n);return console.log(a,"==>availableXwhale"),a},d=async t=>{const n=await e.XCetusModule.getOwnerCetusCoins(t);return console.log(n,"===>coins"),n},y=async t=>await e.XCetusModule.getOwnerVeNFT(t),u=async(t,n)=>{const a={amount:t};n&&(a.venft_id=n);const l=await e.XCetusModule.convertPayload(a);return w(l)},S=async()=>{const t=await e.XCetusModule.mintVeNFTPayload();return w(t)},x=async(t,n)=>{const a=await e.XCetusModule.redeemNum(t,n);return console.log(a,"result===>"),{amountOut:a.amountOut,percent:v(new i(a.percent).mul(new i(100)).toString(),2)}},X=async(t,n)=>{const a=await e.XCetusModule.reverseRedeemNum(t,n);return{amountOut:a.amountOut,percent:v(new i(a.percent).mul(new i(100)).toString(),2)}},k=async(t,n,a)=>{const l=await e.XCetusModule.redeemLockPayload({venft_id:n,amount:t,lock_day:a});return console.log(l,"tx===>"),w(l)},M=t=>p.getLockingCetuss(t),b=async(t,n)=>{const a=await e.XCetusModule.getLockCetus(t);if(a&&p.isLocked(a)){const l=e.XCetusModule.cancelRedeemPayload({venft_id:n,lock_id:t});return w(l)}},L=async(t,n)=>{const a=await e.XCetusModule.getLockCetus(t);if(a&&!p.isLocked(a)){const l=await e.XCetusModule.redeemPayload({venft_id:n,lock_id:t});return w(l)}},T=t=>{const n=Date.parse(new Date().toString())/1e3,a=new i(n).sub(t.start_time).div(new i(t.interval_day).mul(24*3600)).toFixed(0,i.ROUND_UP);console.log(a,"===>currentPeriod");const l=new i(t.start_time).add(new i(a).mul(24*3600*t.interval_day));return console.log(l,"===>nextStartTime"),l.toString()},N=async()=>{const t=await e.XCetusModule.getDividendManager();console.log("dividendManager:",t);const n=T(t);return console.log(n,"===>nextStartTime"),{nextStartTime:n,...t}},_=async(t,n)=>{const a=await e.XCetusModule.getVeNFTDividendInfo(n.venft_dividends.id,t);return{rewards:a&&a.rewards||[]}},A=async t=>{const n=await e.XCetusModule.getDividendManager();if(console.log("dividendManager: ",n),n.bonus_types.length>0){const a=await e.XCetusModule.redeemDividendPayload(t,n.bonus_types);return w(a)}},B=async t=>{const n=await e.XCetusModule.getOwnerVeNFT(t);if(console.log("nfts: ",n),n){const a=await e.XCetusModule.getXcetusManager();console.log("xcetusManager: ",a);const l=new i(n.xcetus_balance).div(a.treasury).mul(100).toString();return console.log("rate: ",l),Number(l)>0&&Number(l)<.01?"<0.01":v(l,2)}else return 0},w=t=>({transactionBlock:t,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getOwnerLockCetuss:h,getOwnerCetusCoins:d,getOwnerVeNFT:y,depositCetus:u,getMintVeNFTPayload:S,redeemNum:x,getRedeemLockPayload:k,getAvailableXCetus:m,getLockingCetuss:M,getCancelRedeemPayload:b,getVeNFTDividendInfo:_,reverseRedeemNum:X,getRedeemPayload:L,getRedeemDividendPayload:A,getMyShare:B,getDividendManager:N}}const E=V("xcetus",{state:()=>({venft_id:"",xWhaleBalance:"--",venftInfo:{},pendingAmount:"--",whaleBalance:"--",ownerLocks:[],availableXwhale:"--",redeemingXwhale:"--",nextStartTime:"",xcetusShare:"--",pendingCoinInfo:{},cetusApr:"",claimLoading:"",dividendManagerInfo:{}}),actions:{async getOwnerVeNFT(s){const o=g("Sui");try{const e=await o.getOwnerVeNFT(s);console.log(e,"===>result"),e&&!D(e)?(this.venft_id=e.id,this.xWhaleBalance=f(e.xcetus_balance,9),this.venftInfo={id:e.id,type:e.type,index:e.index,xcetus_balance:e.xcetus_balance},console.log("执行37"),this.getVeNFTDividendInfo()):(this.xWhaleBalance="0",this.availableXwhale="0",this.redeemingXwhale="0",this.pendingAmount="0")}catch{this.xWhaleBalance="0",this.availableXwhale="0",this.redeemingXwhale="0",this.pendingAmount="0"}},async getVeNFTDividendInfo(){const s=g("Sui"),o=W("Sui");try{const e=await s.getVeNFTDividendInfo(this.venft_id,this.dividendManagerInfo);let c=0;if(console.log(e,"===>result"),e&&e.rewards){for(let r=0;r<e.rewards.length;r++){const h=e.rewards[r].rewards;for(let m=0;m<h.length;m++){const d=h[m],y=await o.getTokenList();console.log(y,"tokenList===>");let u=y.filter(S=>S.address==d.coin_type)[0];u||(u=(await o.getTokenListByCoinType([d.coin_type]))[0]),console.log(u,"==>tokenInfo"),this.pendingCoinInfo=u,console.log(d.amount,"ele.amount===>"),console.log(f(d.amount,u.decimals),"==>prettyAmount(ele.amount, tokenInfo[0].decimals)"),c+=Number(f(d.amount,u.decimals))}}console.log(c,"amount===>"),this.pendingAmount=v(c,6),console.log(this.nextStartTime,"===>nextStartTime")}else this.pendingAmount="0"}catch{this.pendingAmount="0"}},async getDividendManager(){const o=await g("Sui").getDividendManager();console.log(o,"===>dividendManager"),this.nextStartTime=o.nextStartTime,this.dividendManagerInfo=o},async getAccountWhaleBalance(s){const e=await g("Sui").getOwnerCetusCoins(s);if(console.log(e,"==>assets"),e&&e.length>0){let c=0;e.forEach(r=>{c+=Number(f(r.balance.toString(),9))}),this.whaleBalance=v(c,9)}else console.log(this.whaleBalance,"===>this.whaleBalance"),this.whaleBalance="0",console.log(this.whaleBalance,"===>this.whaleBalance")},async getOwnerLockCetuss(s){const e=await g("Sui").getOwnerLockCetuss(s);console.log(e,"assets===>");const c=e.sort((r,h)=>r.locked_until_time-h.locked_until_time);this.ownerLocks=c,console.log(this.ownerLocks,"===>this.ownerLocks"),this.setClaimLoading(""),this.getAvailableXCetus()},async getAvailableXCetus(){const o=await g("Sui").getAvailableXCetus(this.venftInfo,this.ownerLocks);console.log(o,"==>result1111"),this.availableXwhale=f(o,9),console.log(this.xWhaleBalance,"===>this.xWhaleBalance"),console.log(this.availableXwhale,"===>this.availableXwhale"),this.redeemingXwhale=this.xWhaleBalance!=="--"?new i(this.xWhaleBalance).sub(new i(this.availableXwhale)).toString():"--"},async getMyShare(s){const e=await g("Sui").getMyShare(s);this.xcetusShare=Number(e)>0&&Number(e)<.01?"<0.01":e,console.log(e,"result===>124")},async getXcetusApr(){const{data:s}=await fetch(`${C.Sui.api}/v2/sui/storm/dividend_rewards`).then(e=>e.json()),o=s.apr&&s.apr.replace("%","");this.cetusApr=Number(o)>0&&Number(o)<.01?"<0.01":o,console.log(s,"data===>")},loginOut(){this.venft_id="",this.xWhaleBalance="--",this.venftInfo={},this.pendingAmount="--",this.whaleBalance="--",this.ownerLocks=[],this.availableXwhale="--",this.redeemingXwhale="--"},setClaimLoading(s){this.claimLoading=s}}});export{g as a,E as u};
