var Ls=Object.defineProperty;var Ks=(e,t,s)=>t in e?Ls(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var B=(e,t,s)=>(Ks(e,typeof t!="symbol"?t+"":t,s),s);import{M as N,N as Fs,O as Us,P as ot,Q as Vs,R as Gs,S as V,U as ke,V as O,W as m,X as x,K as S,Y as Te,L as u,Z as v,_ as ye,$ as is,a0 as At,a1 as X,T as R,a2 as Ae,a3 as Ue,a4 as kt,a5 as Xs,a6 as zs,a7 as ns,a8 as jt,a9 as Ve,b as P,C as re,aa as Se,ab as Ws,ac as Js,ad as He,ae as Le,af as Ut,ag as Vt,ah as Hs,ai as Ys,aj as Gt,ak as dt,al as lt,am as Zs}from"./pool.1e5d4003.js";import{s as r,d as M,o as p,n as j,l as b,e as ze,f as ie,g as q,h as A,i as f,j as he,k as We,m as os,p as y,t as z,q as te,v as fe,w as Qs,x as bt,y as ei,z as ti}from"./sha256.2a058cd3.js";import{D as $}from"./decimal.0bdeb344.js";const as=32;function si(e){return ii(e)&&ni(e)===as}function F(e,t=!1){let s=e.toLowerCase();return!t&&s.startsWith("0x")&&(s=s.slice(2)),`0x${s.padStart(as*2,"0")}`}function ne(e,t=!1){return F(e,t)}function ii(e){return/^(0x|0X)?[a-fA-F0-9]+$/.test(e)&&e.length%2===0}function ni(e){return/^(0x|0X)/.test(e)?(e.length-2)/2:e.length/2}r();r();r();r();r();r();const xe=M([p({AddressOwner:r()}),p({ObjectOwner:r()}),p({Shared:p({initial_shared_version:j(r())})}),b("Immutable")]),oi=ze("SuiJsonValue",()=>!0),ai=M([p({u32:r()}),p({u64:r()}),p({f64:r()})]);p({attributes:ie(r(),j(ai)),featureFlags:ie(r(),q()),maxSupportedProtocolVersion:r(),minSupportedProtocolVersion:r(),protocolVersion:r()});M([r(),b("package")]);const ce=p({digest:r(),objectId:r(),version:M([A(),r()])}),ri=p({payment:f(ce),owner:r(),price:r(),budget:r()}),ci=he(ce,p({type:r(),owner:xe,previousTransaction:r()})),ui=ie(r(),We()),di=ie(r(),os()),li=p({type:r(),fields:ui,hasPublicTransfer:q()}),wt=p({disassembled:di}),_i=M([he(li,p({dataType:b("moveObject")})),he(wt,p({dataType:b("package")}))]),pi=p({type:r(),hasPublicTransfer:q(),version:r(),bcsBytes:r()}),mi=p({id:r(),moduleMap:ie(r(),r())}),hi=M([he(pi,p({dataType:b("moveObject")})),he(mi,p({dataType:b("package")}))]);BigInt(1e9);r();const rs=p({code:r(),error:y(r()),object_id:y(r()),parent_object_id:y(r()),version:y(r()),digest:y(r())}),gi=p({data:j(y(ie(r(),r()))),error:j(y(rs))}),fi=M([gi,y(ie(r(),r()))]),cs=p({objectId:r(),version:r(),digest:r(),type:j(y(r())),content:j(y(_i)),bcs:j(y(hi)),owner:j(y(xe)),previousTransaction:j(y(r())),storageRebate:j(y(r())),display:j(y(fi))});p({showType:j(y(q())),showContent:j(y(q())),showBcs:j(y(q())),showOwner:j(y(q())),showPreviousTransaction:j(y(q())),showStorageRebate:j(y(q())),showDisplay:j(y(q()))});M([b("Exists"),b("notExists"),b("Deleted")]);f(ci);const yi=p({data:j(y(cs)),error:j(y(rs))});function ki(e){return e.data}function bi(e){if(e.error&&"object_id"in e.error&&"version"in e.error&&"digest"in e.error){const t=e.error;return{objectId:t.object_id,version:t.version,digest:t.digest}}}function wi(e){if("reference"in e)return e.reference;const t=ki(e);return t?{objectId:t.objectId,version:t.version,digest:t.digest}:bi(e)}p({objectId:r(),atCheckpoint:y(A())});p({data:f(yi),nextCursor:y(j(r())),hasNextPage:q()});M([p({details:cs,status:b("VersionFound")}),p({details:r(),status:b("ObjectNotExists")}),p({details:ce,status:b("ObjectDeleted")}),p({details:z([r(),A()]),status:b("VersionNotFound")}),p({details:p({asked_version:A(),latest_version:A(),object_id:r()}),status:b("VersionTooHigh")})]);const us=p({txDigest:r(),eventSeq:r()}),ds=p({id:us,packageId:r(),transactionModule:r(),sender:r(),type:r(),parsedJson:y(ie(r(),We())),bcs:y(r()),timestampMs:y(r())});p({data:f(ds),nextCursor:j(us),hasNextPage:q()});r();const vi=p({epoch:r(),storage_charge:r(),computation_charge:r(),storage_rebate:r(),epoch_start_timestamp_ms:y(r())}),Ci=p({epoch:r(),round:r(),commit_timestamp_ms:r()}),Si=p({objects:f(r())}),ae=M([b("GasCoin"),p({Input:A()}),p({Result:A()}),p({NestedResult:z([A(),A()])})]),Ti=p({arguments:y(f(ae)),type_arguments:y(f(r())),package:r(),module:r(),function:r()}),Pi=M([p({MoveCall:Ti}),p({TransferObjects:z([f(ae),ae])}),p({SplitCoins:z([ae,f(ae)])}),p({MergeCoins:z([ae,f(ae)])}),p({Publish:M([z([wt,f(r())]),f(r())])}),p({Upgrade:M([z([wt,f(r()),r(),ae]),z([f(r()),r(),ae])])}),p({MakeMoveVec:z([j(r()),f(ae)])})]),Ai=M([p({type:b("pure"),valueType:j(r()),value:oi}),p({type:b("object"),objectType:b("immOrOwnedObject"),objectId:r(),version:r(),digest:r()}),p({type:b("object"),objectType:b("sharedObject"),objectId:r(),initialSharedVersion:r(),mutable:q()})]),ji=p({transactions:f(Pi),inputs:f(Ai)}),Oi=M([he(vi,p({kind:b("ChangeEpoch")})),he(Ci,p({kind:b("ConsensusCommitPrologue")})),he(Si,p({kind:b("Genesis")})),he(ji,p({kind:b("ProgrammableTransaction")}))]),ls=p({messageVersion:b("v1"),transaction:Oi,sender:r(),gasData:ri});r();const Di=M([r(),f(r())]);p({epoch:r(),signature:Di,signers_map:f(A())});const Ii=p({computationCost:r(),storageCost:r(),storageRebate:r(),nonRefundableStorageFee:r()}),xi=M([b("success"),b("failure")]),Ei=p({status:xi,error:y(r())}),Ye=p({owner:xe,reference:ce}),Mi=p({objectId:r(),sequenceNumber:r()}),Ot=p({messageVersion:b("v1"),status:Ei,executedEpoch:r(),modifiedAtVersions:y(f(Mi)),gasUsed:Ii,sharedObjects:y(f(ce)),transactionDigest:r(),created:y(f(Ye)),mutated:y(f(Ye)),unwrapped:y(f(Ye)),deleted:y(f(ce)),unwrappedThenDeleted:y(f(ce)),wrapped:y(f(ce)),gasObject:Ye,eventsDigest:j(y(r())),dependencies:y(f(r()))}),Dt=f(ds),Ni=z([f(A()),r()]),$i=z([ae,f(A()),r()]),Ri=p({mutableReferenceOutputs:y(f($i)),returnValues:y(f(Ni))});p({effects:Ot,events:Dt,results:y(f(Ri)),error:y(r())});r();const Bi=p({data:ls,txSignatures:f(r())}),qi=p({type:b("published"),packageId:r(),version:r(),digest:r(),modules:f(r())}),Li=p({type:b("transferred"),sender:r(),recipient:xe,objectType:r(),objectId:r(),version:r(),digest:r()}),Ki=p({type:b("mutated"),sender:r(),owner:xe,objectType:r(),objectId:r(),version:r(),previousVersion:r(),digest:r()}),Fi=p({type:b("deleted"),sender:r(),objectType:r(),objectId:r(),version:r()}),Ui=p({type:b("wrapped"),sender:r(),objectType:r(),objectId:r(),version:r()}),Vi=p({type:b("created"),sender:r(),owner:xe,objectType:r(),objectId:r(),version:r(),digest:r()}),_s=M([qi,Li,Ki,Fi,Ui,Vi]),ps=p({owner:xe,coinType:r(),amount:r()}),Gi=p({digest:r(),transaction:y(Bi),effects:y(Ot),events:y(Dt),timestampMs:y(r()),checkpoint:y(r()),confirmedLocalExecution:y(q()),objectChanges:y(f(_s)),balanceChanges:y(f(ps)),errors:y(f(r()))});p({showInput:y(q()),showEffects:y(q()),showEvents:y(q()),showObjectChanges:y(q()),showBalanceChanges:y(q())});p({data:f(Gi),nextCursor:j(r()),hasNextPage:q()});p({effects:Ot,events:Dt,objectChanges:f(_s),balanceChanges:f(ps),input:y(ls)});const Xi=M([r(),p({Object:r()})]);f(Xi);const zi=p({address:r(),name:r()}),Wi=M([b("Private"),b("Public"),b("Friend")]),It=p({abilities:f(r())}),Ji=p({constraints:It,isPhantom:q()}),Hi=p({TypeParameter:A()}),_t=z([p({module:r(),package:r(),function:r()}),r()]);p({rank3Days:f(_t),rank7Days:f(_t),rank30Days:f(_t)});function ms(e){if(!e)return!1;if(typeof e=="string"||te(e,Hi)||hs(e))return!0;if(typeof e!="object")return!1;const t=e;return!!(te(t.Reference,qe)||te(t.MutableReference,qe)||te(t.Vector,qe))}const qe=ze("SuiMoveNormalizedType",ms);function hs(e){if(!e||typeof e!="object")return!1;const t=e;if(!t.Struct||typeof t.Struct!="object")return!1;const s=t.Struct;return!(typeof s.address!="string"||typeof s.module!="string"||typeof s.name!="string"||!Array.isArray(s.typeArguments)||!s.typeArguments.every(i=>ms(i)))}ze("SuiMoveNormalizedStructType",hs);const Yi=p({visibility:Wi,isEntry:q(),typeParameters:f(It),parameters:f(qe),return:f(qe)}),Zi=p({name:r(),type:qe}),Qi=p({abilities:It,typeParameters:f(Ji),fields:f(Zi)}),en=p({fileFormatVersion:A(),address:r(),name:r(),friends:f(zi),structs:ie(r(),Qi),exposedFunctions:ie(r(),Yi)});ie(r(),en);function gs(e){return typeof e=="object"&&"MutableReference"in e?e.MutableReference:void 0}function tn(e){return typeof e=="object"&&"Reference"in e?e.Reference:void 0}function fs(e){if(typeof e=="object"&&"Struct"in e)return e;const t=tn(e),s=gs(e);if(typeof t=="object"&&"Struct"in t)return t;if(typeof s=="object"&&"Struct"in s)return s}const sn=p({apy:A(),address:r()});p({epoch:r(),apys:f(sn)});p({value:A()});const nn=p({stakedSuiId:r(),stakeRequestEpoch:r(),stakeActiveEpoch:r(),principal:r(),status:M([b("Active"),b("Pending"),b("Unstaked")]),estimatedReward:y(r())});p({validatorAddress:r(),stakingPool:r(),stakes:f(nn)});const on=p({balance:p({value:A()}),distribution_counter:A(),current_distribution_amount:A(),stake_subsidy_period_length:A(),stake_subsidy_decrease_rate:A()});p({type:r(),fields:on});p({value:A()});const an=p({id:r(),size:A(),head:p({vec:f()}),tail:p({vec:f()})});p({id:r(),size:A()});p({type:r(),fields:an});const rn=p({exchangeRates:p({id:r(),size:A()}),id:r(),pendingStake:A(),pendingPoolTokenWithdraw:A(),pendingTotalSuiWithdraw:A(),poolTokenBalance:A(),rewardsPool:p({value:A()}),activationEpoch:p({vec:f()}),deactivationEpoch:p({vec:f()}),suiBalance:A()});p({type:r(),fields:rn});const cn=f(z([r(),r()]));p({epoch:r(),validators:cn});const ys=p({suiAddress:r(),protocolPubkeyBytes:r(),networkPubkeyBytes:r(),workerPubkeyBytes:r(),proofOfPossessionBytes:r(),operationCapId:r(),name:r(),description:r(),imageUrl:r(),projectUrl:r(),p2pAddress:r(),netAddress:r(),primaryAddress:r(),workerAddress:r(),nextEpochProtocolPubkeyBytes:j(r()),nextEpochProofOfPossession:j(r()),nextEpochNetworkPubkeyBytes:j(r()),nextEpochWorkerPubkeyBytes:j(r()),nextEpochNetAddress:j(r()),nextEpochP2pAddress:j(r()),nextEpochPrimaryAddress:j(r()),nextEpochWorkerAddress:j(r()),votingPower:r(),gasPrice:r(),commissionRate:r(),nextEpochStake:r(),nextEpochGasPrice:r(),nextEpochCommissionRate:r(),stakingPoolId:r(),stakingPoolActivationEpoch:j(r()),stakingPoolDeactivationEpoch:j(r()),stakingPoolSuiBalance:r(),rewardsPool:r(),poolTokenBalance:r(),pendingStake:r(),pendingPoolTokenWithdraw:r(),pendingTotalSuiWithdraw:r(),exchangeRatesId:r(),exchangeRatesSize:r()});p({epoch:r(),protocolVersion:r(),systemStateVersion:r(),storageFundTotalObjectStorageRebates:r(),storageFundNonRefundableBalance:r(),referenceGasPrice:r(),safeMode:q(),safeModeStorageRewards:r(),safeModeComputationRewards:r(),safeModeStorageRebates:r(),safeModeNonRefundableStorageFee:r(),epochStartTimestampMs:r(),epochDurationMs:r(),stakeSubsidyStartEpoch:r(),maxValidatorCount:r(),minValidatorJoiningStake:r(),validatorLowStakeThreshold:r(),validatorVeryLowStakeThreshold:r(),validatorLowStakeGracePeriod:r(),stakeSubsidyBalance:r(),stakeSubsidyDistributionCounter:r(),stakeSubsidyCurrentDistributionAmount:r(),stakeSubsidyPeriodLength:r(),stakeSubsidyDecreaseRate:A(),totalStake:r(),activeValidators:f(ys),pendingActiveValidatorsId:r(),pendingActiveValidatorsSize:r(),pendingRemovals:f(r()),stakingPoolMappingsId:r(),stakingPoolMappingsSize:r(),inactivePoolsId:r(),inactivePoolsSize:r(),validatorCandidatesId:r(),validatorCandidatesSize:r(),atRiskValidators:f(z([r(),r()])),validatorReportRecords:f(z([r(),f(r())]))});const un=p({coinType:r(),coinObjectId:r(),version:r(),digest:r(),balance:r(),previousTransaction:r()});p({data:f(un),nextCursor:j(r()),hasNextPage:q()});p({coinType:r(),coinObjectCount:A(),totalBalance:r(),lockedBalance:p({epochId:y(A()),number:y(A())})});p({value:r()});const dn=p({lastCheckpointId:r(),epochEndTimestamp:r(),protocolVersion:r(),referenceGasPrice:r(),totalStake:r(),storageFundReinvestment:r(),storageCharge:r(),storageRebate:r(),storageFundBalance:r(),stakeSubsidyAmount:r(),totalGasFees:r(),totalStakeRewardsDistributed:r(),leftoverStorageFundInflow:r()}),ln=p({epoch:r(),validators:f(ys),epochTotalTransactions:r(),firstCheckpointId:r(),epochStartTimestamp:r(),endOfEpochInfo:j(dn),referenceGasPrice:j(A())});p({data:f(ln),nextCursor:j(r()),hasNextPage:q()});p({data:f(r()),hasNextPage:q(),nextCursor:j(r())});const _n=M([b("DynamicField"),b("DynamicObject")]),pn=p({type:r(),value:We()}),mn=p({name:pn,bcsName:r(),type:_n,objectType:r(),objectId:r(),version:A(),digest:r()});p({data:f(mn),nextCursor:j(r()),hasNextPage:q()});const hn=p({computationCost:r(),storageCost:r(),storageRebate:r(),nonRefundableStorageFee:r()});r();r();p({digest:f(A())});const ks=We();r();const gn=p({nextEpochCommittee:f(z([r(),r()])),nextEpochProtocolVersion:r(),epochCommitments:f(ks)});p({transaction:r(),effects:r()});const fn=p({epoch:r(),sequenceNumber:r(),digest:r(),networkTotalTransactions:r(),previousDigest:y(r()),epochRollingGasCostSummary:hn,timestampMs:r(),endOfEpochData:y(gn),validatorSignature:r(),transactions:f(r()),checkpointCommitments:f(ks)});p({data:f(fn),nextCursor:j(r()),hasNextPage:q()});p({currentTps:A(),tps30Days:A(),currentCheckpoint:r(),currentEpoch:r(),totalAddresses:r(),totalObjects:r(),totalPackages:r()});const yn=p({checkpoint:A(),epoch:A(),timestampMs:A(),cumulativeAddresses:A(),cumulativeActiveAddresses:A(),dailyActiveAddresses:A()});f(yn);const bs="0x2",xt="0x1",kn="object",bn="ID",wn=`${bs}::sui::SUI`;ne("0x6");p({decimals:A(),name:r(),symbol:r(),description:r(),iconUrl:j(r()),id:j(r())});const vn="ascii",Cn="String",Sn="string",Tn="String",Pn="option",An="Option",jn={address:bs,module:kn,name:bn},On={address:xt,module:vn,name:Cn},Dn={address:xt,module:Sn,name:Tn},In={address:xt,module:Pn,name:An},Ze=(e,t)=>e.address===t.address&&e.module===t.module&&e.name===t.name;function xn(e){var s;const t=(s=fs(e))==null?void 0:s.Struct;return(t==null?void 0:t.address)==="0x2"&&(t==null?void 0:t.module)==="tx_context"&&(t==null?void 0:t.name)==="TxContext"}function pt(e,t){if(!(typeof t>"u")&&typeof t!==e)throw new Error(`Expect ${t} to be ${e}, received ${typeof t}`)}const En=["Address","Bool","U8","U16","U32","U64","U128","U256"];function vt(e,t){if(typeof e=="string"&&En.includes(e)){if(e in["U8","U16","U32","U64","U128","U256"])pt("number",t);else if(e==="Bool")pt("boolean",t);else if(e==="Address"&&(pt("string",t),t&&!si(t)))throw new Error("Invalid Sui Address");return e.toLowerCase()}else if(typeof e=="string")throw new Error(`Unknown pure normalized type ${JSON.stringify(e,null,2)}`);if("Vector"in e){if((t===void 0||typeof t=="string")&&e.Vector==="U8")return"string";if(t!==void 0&&!Array.isArray(t))throw new Error(`Expect ${t} to be a array, received ${typeof t}`);const s=vt(e.Vector,t?t[0]:void 0);return s===void 0?void 0:`vector<${s}>`}if("Struct"in e){if(Ze(e.Struct,On))return"string";if(Ze(e.Struct,Dn))return"utf8string";if(Ze(e.Struct,jn))return"address";if(Ze(e.Struct,In)){const s={Vector:e.Struct.typeArguments[0]};return vt(s,t)}}}const Ne="vector",Mn={kind:"TransactionKind",sender:N.ADDRESS,gasData:"GasData",expiration:"TransactionExpiration"},Nn={enums:{"Option<T>":{None:null,Some:"T"},ObjectArg:{ImmOrOwned:"SuiObjectRef",Shared:"SharedObjectRef"},CallArg:{Pure:[Ne,N.U8],Object:"ObjectArg",ObjVec:[Ne,"ObjectArg"]},TypeTag:{bool:null,u8:null,u64:null,u128:null,address:null,signer:null,vector:"TypeTag",struct:"StructTag",u16:null,u32:null,u256:null},TransactionKind:{ProgrammableTransaction:"ProgrammableTransaction",ChangeEpoch:null,Genesis:null,ConsensusCommitPrologue:null},TransactionExpiration:{None:null,Epoch:"unsafe_u64"},TransactionData:{V1:"TransactionDataV1"}},structs:{SuiObjectRef:{objectId:N.ADDRESS,version:N.U64,digest:"ObjectDigest"},SharedObjectRef:{objectId:N.ADDRESS,initialSharedVersion:N.U64,mutable:N.BOOL},StructTag:{address:N.ADDRESS,module:N.STRING,name:N.STRING,typeParams:[Ne,"TypeTag"]},GasData:{payment:[Ne,"SuiObjectRef"],owner:N.ADDRESS,price:N.U64,budget:N.U64},SenderSignedData:{data:"TransactionData",txSignatures:[Ne,[Ne,N.U8]]},TransactionDataV1:Mn},aliases:{ObjectDigest:N.BASE58}},Et=new N({...Fs(),types:Nn});Et.registerType("utf8string",(e,t)=>{const s=Array.from(new TextEncoder().encode(t));return e.writeVec(s,(i,n)=>i.write8(n))},e=>{let t=e.readVec(s=>s.read8());return new TextDecoder().decode(new Uint8Array(t))});Et.registerType("unsafe_u64",(e,t)=>e.write64(t),e=>Number.parseInt(e.read64(),10));const $n=/^vector<(.+)>$/,Rn=/^([^:]+)::([^:]+)::([^<]+)(<(.+)>)?/;class pe{static parseFromStr(t,s=!1){if(t==="address")return{address:null};if(t==="bool")return{bool:null};if(t==="u8")return{u8:null};if(t==="u16")return{u16:null};if(t==="u32")return{u32:null};if(t==="u64")return{u64:null};if(t==="u128")return{u128:null};if(t==="u256")return{u256:null};if(t==="signer")return{signer:null};const i=t.match($n);if(i)return{vector:pe.parseFromStr(i[1],s)};const n=t.match(Rn);if(n)return{struct:{address:s?F(n[1]):n[1],module:n[2],name:n[3],typeParams:n[5]===void 0?[]:pe.parseStructTypeArgs(n[5],s)}};throw new Error(`Encountered unexpected token when parsing type args for ${t}`)}static parseStructTypeArgs(t,s=!1){return Us(t).map(i=>pe.parseFromStr(i,s))}static tagToString(t){if("bool"in t)return"bool";if("u8"in t)return"u8";if("u16"in t)return"u16";if("u32"in t)return"u32";if("u64"in t)return"u64";if("u128"in t)return"u128";if("u256"in t)return"u256";if("address"in t)return"address";if("signer"in t)return"signer";if("vector"in t)return`vector<${pe.tagToString(t.vector)}>`;if("struct"in t){const s=t.struct,i=s.typeParams.map(pe.tagToString).join(", ");return`${s.address}::${s.module}::${s.name}${i?`<${i}>`:""}`}throw new Error("Invalid TypeTag")}}const ws="Argument",G="vector",Bn="Option",qn="CallArg",Xt="TypeTag",Ln="ProgrammableTransaction",Ct="ProgrammableMoveCall",vs="Transaction",zt="CompressedSignature",Wt="PublicKey",Jt="MultiSigPublicKey",Ht="MultiSigPkMap",Kn="MultiSig",Mt="EnumKind",Fn=[Mt,vs],de=[Mt,ws],Cs="SimpleProgrammableMoveCall",se=new N(Et);Nt(se,"FixedArray[64]",64);Nt(se,"FixedArray[33]",33);Nt(se,"FixedArray[32]",32);se.registerStructType(Ln,{inputs:[G,qn],transactions:[G,Fn]}).registerEnumType(ws,{GasCoin:null,Input:{index:N.U16},Result:{index:N.U16},NestedResult:{index:N.U16,resultIndex:N.U16}}).registerStructType(Ct,{package:N.ADDRESS,module:N.STRING,function:N.STRING,type_arguments:[G,Xt],arguments:[G,de]}).registerEnumType(vs,{MoveCall:Cs,TransferObjects:{objects:[G,de],address:de},SplitCoins:{coin:de,amounts:[G,de]},MergeCoins:{destination:de,sources:[G,de]},Publish:{modules:[G,[G,N.U8]],dependencies:[G,N.ADDRESS]},MakeMoveVec:{type:[Bn,Xt],objects:[G,de]},Upgrade:{modules:[G,[G,N.U8]],dependencies:[G,N.ADDRESS],packageId:N.ADDRESS,ticket:de}}).registerEnumType(zt,{ED25519:["FixedArray[64]","u8"],Secp256k1:["FixedArray[64]","u8"],Secp256r1:["FixedArray[64]","u8"]}).registerEnumType(Wt,{ED25519:["FixedArray[32]","u8"],Secp256k1:["FixedArray[33]","u8"],Secp256r1:["FixedArray[33]","u8"]}).registerStructType(Ht,{pubKey:Wt,weight:N.U8}).registerStructType(Jt,{pk_map:[G,Ht],threshold:N.U16}).registerStructType(Kn,{sigs:[G,zt],bitmap:N.U16,multisig_pk:Jt});se.registerType([Mt,"T"],function(t,s,i,n){const a={[s.kind]:s},[c]=i;return this.getTypeInterface(c)._encodeRaw.call(this,t,a,i,n)},function(t,s,i){const[n]=s,o=this.getTypeInterface(n)._decodeRaw.call(this,t,s,i),a=Object.keys(o)[0];return{kind:a,...o[a]}},e=>{if(typeof e!="object"&&!("kind"in e))throw new Error(`EnumKind: Missing property "kind" in the input ${JSON.stringify(e)}`);return!0});se.registerType(Cs,function(t,s,i,n){const[o,a,c]=s.target.split("::"),d=s.typeArguments.map(l=>pe.parseFromStr(l,!0));return this.getTypeInterface(Ct)._encodeRaw.call(this,t,{package:F(o),module:a,function:c,type_arguments:d,arguments:s.arguments},i,n)},function(t,s,i){let n=se.getTypeInterface(Ct)._decodeRaw.call(this,t,s,i);return{target:[n.package,n.module,n.function].join("::"),arguments:n.arguments,typeArguments:n.type_arguments.map(pe.tagToString)}},e=>e.target.split("::").length===3);function Nt(e,t,s){e.registerType(t,function(n,o,a,c){if(o.length!==s)throw new Error(`Expected fixed array of length ${s}, got ${o.length}`);if(a.length!==1)throw new Error(`Expected one type parameter in a fixed array, got ${a.length}`);let[d]=typeof a[0]=="string"?[a[0],[]]:a[0];for(let l of o)this.getTypeInterface(d)._encodeRaw.call(this,n,l,a,c);return n},function(n,o,a){if(o.length!==1)throw new Error(`Expected one type parameter in a fixed array, got ${o.length}`);let c=[],[d]=typeof o[0]=="string"?[o[0],[]]:o[0];for(let l=0;l<s;l++)c.push(this.getTypeInterface(d)._decodeRaw.call(this,n,o,a));return c})}const Un=M([p({ImmOrOwned:ce}),p({Shared:p({objectId:r(),initialSharedVersion:M([fe(),r()]),mutable:q()})})]),at=p({Pure:f(fe())}),Vn=p({Object:Un}),Ke=M([at,Vn]),me={Pure(e,t){return{Pure:Array.from(e instanceof Uint8Array?e:se.ser(t,e,{maxSize:1/0}).toBytes())}},ObjectRef({objectId:e,digest:t,version:s}){return{Object:{ImmOrOwned:{digest:t,version:s,objectId:F(e)}}}},SharedObjectRef({objectId:e,mutable:t,initialSharedVersion:s}){return{Object:{Shared:{mutable:t,initialSharedVersion:s,objectId:F(e)}}}}};function Yt(e){return typeof e=="string"?F(e):"ImmOrOwned"in e.Object?F(e.Object.ImmOrOwned.objectId):F(e.Object.Shared.objectId)}function Gn(e){return typeof e=="object"&&"Object"in e&&"Shared"in e.Object?e.Object.Shared:void 0}function Xn(e){var t;return((t=Gn(e))==null?void 0:t.mutable)??!1}function Z(e,t){return Qs(e,t)}const rt=Symbol("transaction-argument-type"),zn=e=>M([p({None:M([b(!0),b(null)])}),p({Some:e})]),Ge=p({kind:b("Input"),index:fe(),value:y(We()),type:y(M([b("pure"),b("object")]))}),$t=[Ge,p({kind:b("GasCoin")}),p({kind:b("Result"),index:fe()}),p({kind:b("NestedResult"),index:fe(),resultIndex:fe()})],Wn=M([...$t]),De=M([...$t]);De[rt]={kind:"object"};const Ss=e=>{const t=M([...$t]);return t[rt]={kind:"pure",type:e},t},Ts=p({kind:b("MoveCall"),target:ze("target",r().validator),typeArguments:f(r()),arguments:f(Wn)}),Ps=p({kind:b("TransferObjects"),objects:f(De),address:Ss(N.ADDRESS)}),As=p({kind:b("SplitCoins"),coin:De,amounts:f(Ss("u64"))}),js=p({kind:b("MergeCoins"),destination:De,sources:f(De)}),Os=p({kind:b("MakeMoveVec"),type:y(zn(ie(r(),os()))),objects:f(De)}),Ds=p({kind:b("Publish"),modules:f(f(fe())),dependencies:f(r())}),Is=p({kind:b("Upgrade"),modules:f(f(fe())),dependencies:f(r()),packageId:r(),ticket:De}),xs=[Ts,Ps,As,js,Ds,Is,Os],Es=M([...xs]);function Jn(e){return bt(e,Es),xs.find(t=>te(e,t))}const be={MoveCall(e){return Z({kind:"MoveCall",target:e.target,arguments:e.arguments??[],typeArguments:e.typeArguments??[]},Ts)},TransferObjects(e,t){return Z({kind:"TransferObjects",objects:e,address:t},Ps)},SplitCoins(e,t){return Z({kind:"SplitCoins",coin:e,amounts:t},As)},MergeCoins(e,t){return Z({kind:"MergeCoins",destination:e,sources:t},js)},Publish({modules:e,dependencies:t}){return Z({kind:"Publish",modules:e.map(s=>typeof s=="string"?Array.from(ot(s)):s),dependencies:t.map(s=>ne(s))},Ds)},Upgrade({modules:e,dependencies:t,packageId:s,ticket:i}){return Z({kind:"Upgrade",modules:e.map(n=>typeof n=="string"?Array.from(ot(n)):n),dependencies:t.map(n=>ne(n)),packageId:s,ticket:i},Is)},MakeMoveVec({type:e,objects:t}){return Z({kind:"MakeMoveVec",type:e?{Some:pe.parseFromStr(e)}:{None:null},objects:t},Os)}};function Hn(e,t){const s=Array.from(`${e}::`).map(n=>n.charCodeAt(0)),i=new Uint8Array(s.length+t.length);return i.set(s),i.set(t,s.length),ei(i,{dkLen:32})}const Yn=y(j(M([p({Epoch:fe()}),p({None:M([b(!0),b(null)])})]))),Zt=ze("StringEncodedBigint",e=>{if(!["string","number","bigint"].includes(typeof e))return!1;try{return BigInt(e),!0}catch{return!1}}),Zn=p({budget:y(Zt),price:y(Zt),payment:y(f(ce)),owner:y(r())}),Qe=p({version:b(1),sender:y(r()),expiration:Yn,gasConfig:Zn,inputs:f(Ge),transactions:f(Es)});function Qt(e){return F(e).replace("0x","")}class ge{constructor(t){this.version=1,this.sender=t==null?void 0:t.sender,this.expiration=t==null?void 0:t.expiration,this.gasConfig=(t==null?void 0:t.gasConfig)??{},this.inputs=(t==null?void 0:t.inputs)??[],this.transactions=(t==null?void 0:t.transactions)??[]}static fromKindBytes(t){const s=se.de("TransactionKind",t),i=s==null?void 0:s.ProgrammableTransaction;if(!i)throw new Error("Unable to deserialize from bytes.");const n=Z({version:1,gasConfig:{},inputs:i.inputs.map((o,a)=>Z({kind:"Input",value:o,index:a,type:te(o,at)?"pure":"object"},Ge)),transactions:i.transactions},Qe);return ge.restore(n)}static fromBytes(t){var a;const s=se.de("TransactionData",t),i=s==null?void 0:s.V1,n=(a=i==null?void 0:i.kind)==null?void 0:a.ProgrammableTransaction;if(!i||!n)throw new Error("Unable to deserialize from bytes.");const o=Z({version:1,sender:i.sender,expiration:i.expiration,gasConfig:i.gasData,inputs:n.inputs.map((c,d)=>Z({kind:"Input",value:c,index:d,type:te(c,at)?"pure":"object"},Ge)),transactions:n.transactions},Qe);return ge.restore(o)}static restore(t){bt(t,Qe);const s=new ge;return Object.assign(s,t),s}static getDigestFromBytes(t){const s=Hn("TransactionData",t);return Vs(s)}build({maxSizeBytes:t=1/0,overrides:s,onlyTransactionKind:i}={}){const n=this.inputs.map(_=>(bt(_.value,Ke),_.value)),o={ProgrammableTransaction:{inputs:n,transactions:this.transactions}};if(i)return se.ser("TransactionKind",o,{maxSize:t}).toBytes();const a=(s==null?void 0:s.expiration)??this.expiration,c=(s==null?void 0:s.sender)??this.sender,d={...this.gasConfig,...s==null?void 0:s.gasConfig};if(!c)throw new Error("Missing transaction sender");if(!d.budget)throw new Error("Missing gas budget");if(!d.payment)throw new Error("Missing gas payment");if(!d.price)throw new Error("Missing gas price");const l={sender:Qt(c),expiration:a||{None:!0},gasData:{payment:d.payment,owner:Qt(this.gasConfig.owner??c),price:BigInt(d.price),budget:BigInt(d.budget)},kind:{ProgrammableTransaction:{inputs:n,transactions:this.transactions}}};return se.ser("TransactionData",{V1:l},{maxSize:t}).toBytes()}getDigest(){const t=this.build({onlyTransactionKind:!1});return ge.getDigestFromBytes(t)}snapshot(){return Z(this,Qe)}}var Rt=(e,t,s)=>{if(!t.has(e))throw TypeError("Cannot "+s)},L=(e,t,s)=>(Rt(e,t,"read from private field"),s?s.call(e):t.get(e)),we=(e,t,s)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,s)},et=(e,t,s,i)=>(Rt(e,t,"write to private field"),i?i.call(e,s):t.set(e,s),s),Y=(e,t,s)=>(Rt(e,t,"access private method"),s),E,st,St,Pe,Ie,Bt,Ms,qt,Ns,Lt,$s,Kt,Rs,it,Tt;const Qn={maxPureArgumentSize:16*1024,maxTxGas:5e10,maxGasObjects:256,maxTxSizeBytes:128*1024};function eo(e){const t={kind:"Result",index:e},s=[],i=n=>s[n]??(s[n]={kind:"NestedResult",index:e,resultIndex:n});return new Proxy(t,{set(){throw new Error("The transaction result is a proxy, and does not support setting properties directly")},get(n,o){if(o in n)return Reflect.get(n,o);if(o===Symbol.iterator)return function*(){let c=0;for(;;)yield i(c),c++};if(typeof o=="symbol")return;const a=parseInt(o,10);if(!(Number.isNaN(a)||a<0))return i(a)}})}function Xe(e){if(!e.client&&!e.provider)throw new Error("No provider passed to Transaction#build, but transaction data was not sufficient to build offline.");return e.client??e.provider}const es=Symbol.for("@mysten/transaction"),mt={maxTxGas:"max_tx_gas",maxGasObjects:"max_gas_payment_objects",maxTxSizeBytes:"max_tx_size_bytes",maxPureArgumentSize:"max_pure_argument_size"},to=1000n,so=50,io=(e,t)=>Array.from({length:Math.ceil(e.length/t)},(s,i)=>e.slice(i*t,i*t+t)),no=class Pt{constructor(t){we(this,st),we(this,Pe),we(this,Bt),we(this,qt),we(this,Lt),we(this,Kt),we(this,it),we(this,E,void 0),et(this,E,new ge(t?t.blockData:void 0))}static is(t){return!!t&&typeof t=="object"&&t[es]===!0}static fromKind(t){const s=new Pt;return et(s,E,ge.fromKindBytes(typeof t=="string"?ot(t):t)),s}static from(t){const s=new Pt;return typeof t!="string"||!t.startsWith("{")?et(s,E,ge.fromBytes(typeof t=="string"?ot(t):t)):et(s,E,ge.restore(JSON.parse(t))),s}static get Transactions(){return be}static get Inputs(){return me}setSender(t){L(this,E).sender=t}setSenderIfNotSet(t){L(this,E).sender||(L(this,E).sender=t)}setExpiration(t){L(this,E).expiration=t}setGasPrice(t){L(this,E).gasConfig.price=String(t)}setGasBudget(t){L(this,E).gasConfig.budget=String(t)}setGasOwner(t){L(this,E).gasConfig.owner=t}setGasPayment(t){L(this,E).gasConfig.payment=t.map(s=>ti(s,ce))}get blockData(){return L(this,E).snapshot()}get[es](){return!0}get gas(){return{kind:"GasCoin"}}object(t){const s=Yt(t);return L(this,E).inputs.find(n=>n.type==="object"&&s===Yt(n.value))??Y(this,st,St).call(this,"object",t)}objectRef(...t){return this.object(me.ObjectRef(...t))}sharedObjectRef(...t){return this.object(me.SharedObjectRef(...t))}pure(t,s){return Y(this,st,St).call(this,"pure",t instanceof Uint8Array?me.Pure(t):s?me.Pure(t,s):t)}add(t){const s=L(this,E).transactions.push(t);return eo(s-1)}splitCoins(...t){return this.add(be.SplitCoins(...t))}mergeCoins(...t){return this.add(be.MergeCoins(...t))}publish(...t){return this.add(be.Publish(...t))}upgrade(...t){return this.add(be.Upgrade(...t))}moveCall(...t){return this.add(be.MoveCall(...t))}transferObjects(...t){return this.add(be.TransferObjects(...t))}makeMoveVec(...t){return this.add(be.MakeMoveVec(...t))}serialize(){return JSON.stringify(L(this,E).snapshot())}async sign(t){const{signer:s,...i}=t,n=await this.build(i);return s.signTransactionBlock(n)}async build(t={}){return await Y(this,it,Tt).call(this,t),L(this,E).build({maxSizeBytes:Y(this,Pe,Ie).call(this,"maxTxSizeBytes",t),onlyTransactionKind:t.onlyTransactionKind})}async getDigest(t={}){return await Y(this,it,Tt).call(this,t),L(this,E).getDigest()}};E=new WeakMap;st=new WeakSet;St=function(e,t){const s=L(this,E).inputs.length,i=Z({kind:"Input",value:typeof t=="bigint"?String(t):t,index:s,type:e},Ge);return L(this,E).inputs.push(i),i};Pe=new WeakSet;Ie=function(e,{protocolConfig:t,limits:s}){if(s&&typeof s[e]=="number")return s[e];if(!t)return Qn[e];const i=t==null?void 0:t.attributes[mt[e]];if(!i)throw new Error(`Missing expected protocol config: "${mt[e]}"`);const n="u64"in i?i.u64:"u32"in i?i.u32:i.f64;if(!n)throw new Error(`Unexpected protocol config value found for: "${mt[e]}"`);return Number(n)};Bt=new WeakSet;Ms=function(e){const t=Y(this,Pe,Ie).call(this,"maxPureArgumentSize",e);L(this,E).inputs.forEach((s,i)=>{if(te(s.value,at)&&s.value.Pure.length>t)throw new Error(`Input at index ${i} is too large, max pure input size is ${t} bytes, got ${s.value.Pure.length} bytes`)})};qt=new WeakSet;Ns=async function(e){if(L(this,E).gasConfig.payment){const n=Y(this,Pe,Ie).call(this,"maxGasObjects",e);if(L(this,E).gasConfig.payment.length>n)throw new Error(`Payment objects exceed maximum amount: ${n}`)}if(e.onlyTransactionKind||L(this,E).gasConfig.payment)return;const t=L(this,E).gasConfig.owner??L(this,E).sender,i=(await Xe(e).getCoins({owner:t,coinType:wn})).data.filter(n=>!L(this,E).inputs.find(a=>te(a.value,Ke)&&"Object"in a.value&&"ImmOrOwned"in a.value.Object?n.coinObjectId===a.value.Object.ImmOrOwned.objectId:!1)).slice(0,Y(this,Pe,Ie).call(this,"maxGasObjects",e)-1).map(n=>({objectId:n.coinObjectId,digest:n.digest,version:n.version}));if(!i.length)throw new Error("No valid gas coins found for the transaction.");this.setGasPayment(i)};Lt=new WeakSet;$s=async function(e){e.onlyTransactionKind||L(this,E).gasConfig.price||this.setGasPrice(await Xe(e).getReferenceGasPrice())};Kt=new WeakSet;Rs=async function(e){const{inputs:t,transactions:s}=L(this,E),i=[],n=[];if(s.forEach(o=>{if(o.kind==="MoveCall"){o.arguments.some(d=>d.kind==="Input"&&!te(t[d.index].value,Ke))&&i.push(o);return}const a=Jn(o);a.schema&&Object.entries(o).forEach(([c,d])=>{if(c==="kind")return;const l=a.schema[c],_=l.type==="array",h=_?l.schema[rt]:l[rt];if(!h)return;const g=k=>{const T=t[k];if(!T)throw new Error(`Missing input ${d.index}`);if(!te(T.value,Ke))if(h.kind==="object"&&typeof T.value=="string")n.push({id:T.value,input:T});else if(h.kind==="pure")T.value=me.Pure(T.value,h.type);else throw new Error("Unexpected input format.")};if(_)d.forEach(k=>{k.kind==="Input"&&g(k.index)});else{if(d.kind!=="Input")return;g(d.index)}})}),i.length&&await Promise.all(i.map(async o=>{const[a,c,d]=o.target.split("::"),l=await Xe(e).getNormalizedMoveFunction({package:ne(a),module:c,function:d}),h=l.parameters.length>0&&xn(l.parameters.at(-1))?l.parameters.slice(0,l.parameters.length-1):l.parameters;if(h.length!==o.arguments.length)throw new Error("Incorrect number of arguments.");h.forEach((g,k)=>{const T=o.arguments[k];if(T.kind!=="Input")return;const I=t[T.index];if(te(I.value,Ke))return;const D=I.value,w=vt(g,D);if(w){I.value=me.Pure(D,w);return}if(fs(g)!=null||typeof g=="object"&&"TypeParameter"in g){if(typeof D!="string")throw new Error(`Expect the argument to be an object id string, got ${JSON.stringify(D,null,2)}`);n.push({id:D,input:I,normalizedType:g});return}throw new Error(`Unknown call arg type ${JSON.stringify(g,null,2)} for value ${JSON.stringify(D,null,2)}`)})})),n.length){const o=[...new Set(n.map(({id:_})=>_))],a=io(o,so),c=(await Promise.all(a.map(_=>Xe(e).multiGetObjects({ids:_,options:{showOwner:!0}})))).flat();let d=new Map(o.map((_,h)=>[_,c[h]]));const l=Array.from(d).filter(([_,h])=>h.error).map(([_,h])=>_);if(l.length)throw new Error(`The following input objects are invalid: ${l.join(", ")}`);n.forEach(({id:_,input:h,normalizedType:g})=>{var D;const k=d.get(_),T=(D=k.data)==null?void 0:D.owner,I=T&&typeof T=="object"&&"Shared"in T?T.Shared.initial_shared_version:void 0;if(I){const w=Xn(h.value)||g!=null&&gs(g)!=null;h.value=me.SharedObjectRef({objectId:_,initialSharedVersion:I,mutable:w})}else h.value=me.ObjectRef(wi(k))})}};it=new WeakSet;Tt=async function(e){if(!e.onlyTransactionKind&&!L(this,E).sender)throw new Error("Missing transaction sender");const t=e.client||e.provider;if(!e.protocolConfig&&!e.limits&&t&&(e.protocolConfig=await t.getProtocolConfig()),await Promise.all([Y(this,Lt,$s).call(this,e),Y(this,Kt,Rs).call(this,e)]),!e.onlyTransactionKind&&(await Y(this,qt,Ns).call(this,e),!L(this,E).gasConfig.budget)){const s=await Xe(e).dryRunTransactionBlock({transactionBlock:L(this,E).build({maxSizeBytes:Y(this,Pe,Ie).call(this,"maxTxSizeBytes",e),overrides:{gasConfig:{budget:String(Y(this,Pe,Ie).call(this,"maxTxGas",e)),payment:[]}}})});if(s.effects.status.status!=="success")throw new Error(`Dry run failed, could not automatically determine a budget: ${s.effects.status.error}`,{cause:s});const i=to*BigInt(this.blockData.gasConfig.price||1n),n=BigInt(s.effects.gasUsed.computationCost)+i,o=n+BigInt(s.effects.gasUsed.storageCost)-BigInt(s.effects.gasUsed.storageRebate);this.setGasBudget(o>n?o:n)}Y(this,Bt,Ms).call(this,e)};let C=no;BigInt(1e9);ne("0x6");ne("0x5");var ht="router",Be=1e4,ve=class{static buildPoolImmutables(e){const{fields:t}=e.value.fields.value;return{clmm_pool_id:S(t.clmm_pool_id).address,booster_type:S(t.booster_type.fields.name).source_address,pool_id:S(t.pool_id).address,coinTypeA:S(t.coin_type_a.fields.name).source_address,coinTypeB:S(t.coin_type_b.fields.name).source_address}}static buildPoolState(e){const t=x(e),s=[];return t.config.fields.contents.forEach(n=>{s.push({lock_day:Number(n.fields.key),multiplier:Number(u(n.fields.value).div(Be))})}),{basic_percent:Number(u(t.basic_percent).div(Be)),balances:{balances_handle:t.balances.fields.id.id,size:t.balances.fields.size},config:s,lock_positions:{lock_positions_handle:t.lock_positions.fields.id.id,size:t.lock_positions.fields.size},is_open:t.is_open,index:Number(t.index),pool_id:Ve(e)}}static buildLockNFT(e){const t=S(Ve(e)).address;return{lock_clmm_position:At(e),locked_nft_id:t}}static buildLockPositionInfo(e){const t=x(e),{value:s}=t.value.fields;return{type:s.type,position_id:s.fields.position_id,start_time:Number(s.fields.start_time),lock_period:Number(s.fields.lock_period),end_time:Number(s.fields.end_time),growth_rewarder:s.fields.growth_rewarder,rewarder_owned:s.fields.rewarder_owned,is_settled:s.fields.is_settled}}static isLocked(e){return e.end_time>Date.parse(new Date().toString())/1e3}},oo=class{constructor(e){B(this,"_sdk");B(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=!1){var o;const{booster:t}=this._sdk.sdkOptions,s=`${t.package_id}_getPoolImmutables`,i=this.getCache(s,e),n=[];if(i!==void 0)n.push(...i);else{const a=[];(o=(await this._sdk.ClmmSDK.fullClient.getDynamicFieldsByPage(m(t).booster_pool_handle)).data)==null||o.forEach(l=>{a.push(l.objectId)});const d=await this._sdk.ClmmSDK.fullClient.batchGetObjects(a,{showContent:!0});for(const l of d){const _=x(l);if(_){const h=ve.buildPoolImmutables(_);this.updateCache(`${h.pool_id}_getPoolImmutable`,h,O),n.push(h)}}}return this.updateCache(s,n,O),n}async getPoolImmutable(e){const{booster:t}=this._sdk.sdkOptions,s=`${e}_getPoolImmutable`,i=this.getCache(s);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:m(t).booster_pool_handle,name:{type:"0x2::object::ID",value:e}}),o=x(n),a=ve.buildPoolImmutables(o);return this.updateCache(s,a,O),a}async getPools(){const e=[],s=(await this.getPoolImmutables()).map(n=>n.pool_id),i=await this._sdk.ClmmSDK.fullClient.batchGetObjects(s,{showType:!0,showContent:!0});for(const n of i){const o=ve.buildPoolState(n);if(o){const a={...await this.getPoolImmutable(o.pool_id),...o};e.push(a);const c=`${a.pool_id}_getPoolObject`;this.updateCache(c,a,O)}}return e}async getPool(e,t=!0){const s=`${e}_getPoolObject`,i=this.getCache(s,t),n=await this.getPoolImmutable(e);if(i!==void 0)return{...n,...i};const o=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),a=ve.buildPoolState(o),c={...n,...a};return this.updateCache(s,c,O),c}async getPoolHandleId(e){const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),s=x(t);return s?s.list.fields.id.id:""}async getBoosterInitConfigs(){var i;const{package_id:e}=this.sdk.sdkOptions.booster,t=(i=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::config::InitEvent`}))==null?void 0:i.data,s={booster_config_id:"",booster_pool_handle:""};return t.length>0&&t.forEach(n=>{const o=n.parsedJson;o&&(s.booster_config_id=o.config_id)}),s.booster_pool_handle=await this.getPoolHandleId(s.booster_config_id),s}async getOwnerBoosterPositions(e,t,s){const{booster:i}=this.sdk.sdkOptions,n=[],o=[],a=`${i.package_id}::lock_nft::LockNFT<${this._sdk.ClmmSDK.Position.buildPositionType()}>`,c=await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0,showOwner:!0},filter:{StructType:a}});for(const l of c.data)if(S(Te(l)).source_address===a&&l.data){const h=ve.buildLockNFT(l);this.updateCache(`${h.locked_nft_id}_getBoosterPositionById`,h,O),h&&(t===void 0||t===h.lock_clmm_position.pool)&&n.push(h)}const d=await this.getLockPositionInfos(s,n.map(l=>l.locked_nft_id));for(const l of n)for(const _ of d)if(l.lock_clmm_position.pos_object_id===_.position_id){o.push({...l,..._});break}return o}async getBoosterPosition(e,t){const s=`${t}_getBoosterPositionById`,i=this.getCache(s);let n;if(i!==void 0)n=i;else{const a=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0,showOwner:!0}});n=ve.buildLockNFT(a),this.updateCache(s,n,O)}const o=await this.getLockPositionInfo(e,t);return{...n,...o}}async getLockPositionInfos(e,t=[]){var o;const s=await this._sdk.ClmmSDK.fullClient.getDynamicFieldsByPage(e),i=[],n=[];return(o=s.data)==null||o.forEach(a=>{t.length>0?t.includes(a.name.value)&&i.push(a.objectId):i.push(a.objectId)}),i.length>0&&(await this._sdk.ClmmSDK.fullClient.batchGetObjects(i,{showContent:!0})).forEach(c=>{const d=ve.buildLockPositionInfo(c);d&&n.push(d)}),n}async getLockPositionInfo(e,t){const s=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}});return ve.buildLockPositionInfo(s)}calculateXCetusRewarder(e,t,s){let i=t.basic_percent,n="0";e.forEach(c=>{c.coin_address===t.booster_type&&(console.log("find ",t.booster_type),n=c.amount_owed.toString())}),s.is_settled||t.config.forEach(c=>{c.lock_day===s.lock_period&&(i=c.multiplier)});const o=u(n).sub(s.growth_rewarder).mul(i);return u(s.rewarder_owned).add(o).toString()}lockPositionPayload(e){const{booster:t}=this.sdk.sdkOptions,{clmm_pool:s}=this.sdk.ClmmSDK.sdkOptions,i=new C;return i.moveCall({target:`${t.published_at}::${ht}::lock_position`,typeArguments:[e.booster_type,e.coinTypeA,e.coinTypeB],arguments:[i.pure(m(t).booster_config_id),i.pure(m(s).global_config_id),i.pure(e.booster_pool_id),i.pure(e.clmm_pool_id),i.pure(e.clmm_position_id),i.pure(e.lock_day),i.pure(v)]}),i}canceLockPositionPayload(e){const{booster:t}=this.sdk.sdkOptions,s=new C;return s.moveCall({target:`${t.published_at}::${ht}::cancel_lock`,typeArguments:[e.booster_type],arguments:[s.pure(m(t).booster_config_id),s.pure(e.booster_pool_id),s.pure(e.lock_nft_id),s.pure(v)]}),s}redeemPayload(e){const{booster:t,xcetus:s}=this.sdk.sdkOptions,{clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions,n=new C,o=m(s);return n.moveCall({target:`${t.published_at}::${ht}::redeem`,typeArguments:[e.booster_type,e.coinTypeA,e.coinTypeB],arguments:[n.pure(m(t).booster_config_id),n.pure(m(i).global_config_id),n.pure(e.booster_pool_id),n.pure(e.lock_nft_id),n.pure(e.clmm_pool_id),n.pure(o.lock_manager_id),n.pure(o.xcetus_manager_id),n.pure(e.ve_nft_id),n.pure(v)]}),n}updateCache(e,t,s=ye){let i=this._cache[e];i?(i.overdueTime=V(s),i.value=t):i=new ke(t,V(s)),this._cache[e]=i}getCache(e,t=!1){const s=this._cache[e];if(!t&&(s!=null&&s.isValid()))return s.value;delete this._cache[e]}},H="router",Bs=1e9,W=class{static priceRealToFix(e,t,s){const i=u(t-s).toNumber();return Number(u(e).div(u(10).pow(u(i))).toString())}static priceFixToReal(e,t,s){const i=u(t-s).toNumber();return Number(u(e).mul(u(10).pow(u(i))).toString())}static raiseTotalAmount(e,t,s){const i=u(t-s).abs().toNumber();return t>s?Number(u(e.total_supply).mul(e.current_price).div(u(10).pow(u(i))).toString()):Number(u(e.total_supply).mul(e.current_price).mul(u(10).pow(u(i))).toString())}static buildLaunchPadPool(e){const t=Te(e),s=S(t),i=x(e),n={coin_type_sale:s.type_arguments[0],coin_type_raise:s.type_arguments[1],pool_address:ne(Ve(e)),is_settle:i.is_settle,current_price:u(i.initialize_price).div(u(Bs)).toString(),price:i.initialize_price,min_price:"0",max_price:"0",sale_coin_amount:i.sale_coin,raise_coin_amount:i.raise_coin,total_purchase_amount:i.reality_raise_total,total_supply:i.sale_total,min_purchase:i.min_purchase,max_purchase:i.max_purchase,complete_raise_limit:i.least_raise_amount,softcap:i.softcap,max_raise_amount:i.hardcap,sale_decimals:0,raise_decimals:0,liquidity_injection_ratio:Number(i.liquidity_rate)/1e4,is_cancel:i.is_cancel,duration_summary:{start_time:Number(i.duration_manager.fields.start_time),end_time:0,settle_end_time:0,purchase_duration:Number(i.duration_manager.fields.activity_duration),settle_duration:Number(i.duration_manager.fields.settle_duration),lock_up_duration:Number(i.duration_manager.fields.locked_duration)},white_summary:{white_handle:i.white_list.fields.users.fields.id.id,protection_hard_cap:i.white_list.fields.hard_cap_total,protection_limit_used:i.white_list.fields.purchase_total,size:Number(i.white_list.fields.users.fields.size)},unused_sale:i.unused_sale,harvest_raise:i.harvest_raise,tick_spacing:Number(i.tick_spacing),owner:i.recipient,purchase_summary:{purchase_handle:i.purchase_list.fields.id.id,size:Number(i.purchase_list.fields.size)},pool_status:"Failed"};return W.updatePoolStatus(n),n}static updatePoolStatus(e){const t=Number(u(Date.now()/1e3).toFixed(0)),{duration_summary:s}=e,i=s.start_time+s.purchase_duration,n=i+s.settle_duration;if(s.end_time=i,s.settle_end_time=n,e.is_settle)e.pool_status="Ended";else if(e.is_cancel)e.pool_status="Canceled";else if(t<s.start_time)e.pool_status="Upcoming";else if(t>s.start_time&&t<i)e.pool_status="Live";else if(t>i&&t<n){const o=e.raise_coin_amount;Number(o)<Number(e.complete_raise_limit)?e.pool_status="Failed":e.pool_status="Settle"}return e}static async calculatePoolPrice(e,t){const s=await e.ClmmSDK.CetusConfig.getTokenListByCoinTypes([t.coin_type_sale,t.coin_type_raise]),i=s[t.coin_type_sale].decimals,n=s[t.coin_type_raise].decimals;t.min_price=this.priceFixToReal(Number(u(t.softcap).div(u(t.total_supply))),i,n).toString(),t.max_price=this.priceFixToReal(Number(u(t.max_raise_amount).div(u(t.total_supply))),i,n).toString(),t.current_price=this.priceFixToReal(Number(t.current_price),i,n).toString(),t.sale_decimals=i,t.raise_decimals=n}static async getWithdrawRaise(e){return e.pool_status==="Ended"?e.harvest_raise:"0"}static async getWithdrawSale(e){return e.pool_status==="Ended"?e.unused_sale:e.sale_coin_amount}static async getHistoryWithdrawRaise(e,t){if(t.pool_status==="Ended"){if(u(t.harvest_raise).equals(u(0))){const i=await e.Launchpad.getSettleEvent(t.pool_address);i&&(t.harvest_raise=i.unused_raise)}const s=P.min(new P(t.total_purchase_amount),new P(t.max_raise_amount));return u(s.toString()).mul(1-t.liquidity_injection_ratio).toString()}return"0"}static async getHistoryWithdrawSale(e,t){if(t.pool_status==="Ended"){const s=await e.Launchpad.getSettleEvent(t.pool_address);return s&&(t.unused_sale=s.unused_sale),t.unused_sale}return"0"}static async getOverrecruitReverseAmount(e,t){const s=await e.Launchpad.getPurchaseMarks(e.ClmmSDK.senderAddress,[t.pool_address],!1);if(s.length>0){const i=s[0].purchased_raise_amount,n=(await e.Launchpad.getPurchaseAmount(t.white_summary.white_handle,e.ClmmSDK.senderAddress)).safe_purchased_amount,{protection_limit_used:o}=t.white_summary;return u(i).sub(n).div(u(t.total_purchase_amount).sub(o)).mul(u(t.total_purchase_amount).sub(t.max_raise_amount)).toString()}return"0"}static async getCanPurchaseAmount(e,t){const s=await W.getOverrecruitReverseAmount(e,t),i=await e.Launchpad.getPurchaseMarks(e.ClmmSDK.senderAddress,[t.pool_address],!1);if(i){const n=i[0].purchased_raise_amount;u(n).sub(s).div(t.current_price)}return"0"}},ao=class{constructor(e){B(this,"_sdk");B(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=[],t=0,s=100,i=!1){var _;const{package_id:n}=this._sdk.sdkOptions.launchpad;if(n===void 0)throw Error("sdk.sdkOptions.launchpad is undefined");const o=`${n}_getPoolImmutables`,a=this.getCache(o,i),c=[],d=[];if(a!==void 0&&c.push(...a),c.length===0)try{((_=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${n}::factory::CreatePoolEvent`}))==null?void 0:_.data).forEach(g=>{const k=g.parsedJson;k&&c.push({pool_address:k.pool_id,coin_type_sale:S(k.sale_coin.name).full_address,coin_type_raise:S(k.raise_coin.name).full_address})}),this.updateCache(o,c,O)}catch(h){console.log("getPoolImmutables",h)}const l=e.length>0;for(let h=0;h<c.length;h+=1){const g=c[h];if(!(l&&!e.includes(g.pool_address))){if(!l){const k=h;if(k<t||k>=t+s)continue}d.push(g)}}return d}async getPoolImmutablesWithPage(e="all",t=!1){const{package_id:s}=this._sdk.sdkOptions.launchpad,i=`${s}_getPoolImmutables`,n=[],o={data:[],hasNextPage:!1},a=e==="all";if(a){const c=this.getCache(i,t);c&&n.push(...c)}if(n.length===0)try{const c=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${s}::factory::CreatePoolEvent`},e);o.hasNextPage=c.hasNextPage,o.nextCursor=c.nextCursor,c.data.forEach(d=>{const l=d.parsedJson;l&&n.push({pool_address:l.pool_id,coin_type_sale:S(l.sale_coin.name).full_address,coin_type_raise:S(l.raise_coin.name).full_address})})}catch(c){console.log("getPoolImmutables",c)}return o.data=n,a&&this.updateCache(i,n,O),o}async getPools(e=[],t=0,s=100){const i=[];let n=[];e.length>0?n=[...e]:(await this.getPoolImmutables([],t,s,!1)).forEach(c=>{n.push(c.pool_address)});const o=await this._sdk.ClmmSDK.fullClient.batchGetObjects(n,{showType:!0,showContent:!0});for(const a of o){const c=W.buildLaunchPadPool(a);await W.calculatePoolPrice(this._sdk,c),i.push(c);const d=`${c.pool_address}_getPoolObject`;this.updateCache(d,c,O)}return i}async getPool(e,t=!0){const s=`${e}_getPoolObject`,i=this.getCache(s,t);if(i!==void 0){const a=i;return W.updatePoolStatus(a),a}const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=W.buildLaunchPadPool(n);return await W.calculatePoolPrice(this._sdk,o),this.updateCache(s,o),o}async getInitConfig(e=!1){var d;const t=this._sdk.sdkOptions.launchpad.package_id,s=`${t}_getInitEvent`,i=this.getCache(s,e);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showPreviousTransaction:!0}}),o=is(n),a=(d=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({Transaction:o}))==null?void 0:d.data,c={pools_id:"",admin_cap_id:"",config_cap_id:""};return a.length>0&&(a.forEach(l=>{const _=l.parsedJson;if(_)switch(S(l.type).full_address){case`${t}::config::InitConfigEvent`:c.admin_cap_id=_.admin_cap_id,c.config_cap_id=_.config_cap_id;break;case`${t}::factory::InitFactoryEvent`:c.pools_id=_.pools_id;break}}),this.updateCache(s,c,O)),c}async getLockNFT(e,t=!1){const s=`${e}_getLockNFT`,i=this.getCache(s,t);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(!n.error)return At(n)}async getLockNFTList(e){var n;const{package_id:t}=this._sdk.ClmmSDK.sdkOptions.clmm_pool,{sdkOptions:s}=this._sdk,i=[];try{const o=(n=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${s.launchpad.package_id}::lock::LockNFTEvent`}))==null?void 0:n.data;for(const a of o){const c=a.parsedJson;if(c){const d={locked_time:Number(c.locked_time),end_lock_time:Number(c.end_lock_time),nft_type:c.nft_type_name.name,lock_nft_id:c.lock_nft_id,recipient:c.recipient};if(e===d.recipient&&`${t}`===S(d.nft_type).address){const l=await this.getLockNFT(d.lock_nft_id);if(l){const _=S(l.coin_type_a).full_address,h=S(l.coin_type_b).full_address;i.push({...l,coin_type_a:_,coin_type_b:h,...d})}}}}return i}catch(o){return console.log("getLockNFTList:",o),[]}}async creatPoolTransactionPayload(e){const{launchpad:t}=this.sdk.sdkOptions,s=m(t);if(this.assertLuanchpadConfig(),this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const i=W.priceRealToFix(Number(e.initialize_price),e.sale_decimals,e.raise_decimals),n=new C,o=u(e.total_supply).add(u(e.total_supply).mul(u(e.liquidity_rate))).toNumber(),a=await X.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,n,BigInt(o),e.coin_type_sale),c=[n.pure(s.admin_cap_id),n.pure(s.config_cap_id),n.pure(s.pools_id),n.pure(F(e.recipient)),n.pure((i*Bs).toString()),a,n.pure(e.total_supply.toString()),n.pure(e.min_purchase.toString()),n.pure(e.max_purchase.toString()),n.pure(e.least_raise_amount.toString()),n.pure(e.hardcap.toString()),n.pure((e.liquidity_rate*1e3).toString()),n.pure(e.start_time.toString()),n.pure(e.activity_duration.toString()),n.pure(e.settle_duration.toString()),n.pure(e.locked_duration.toString()),n.pure(e.tick_spacing.toString()),n.pure(v)],d=[e.coin_type_sale,e.coin_type_raise];return n.moveCall({target:`${t.published_at}::${H}::create_launch_pool`,typeArguments:d,arguments:c}),n}async creatPurchasePayload(e){const{launchpad:t}=this.sdk.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const s=new C,i=await X.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,s,BigInt(e.purchase_amount),e.coin_type_raise),n=(await this.getPurchaseMarks(this._sdk.ClmmSDK.senderAddress,[e.pool_address],!1))[0],o=[e.coin_type_sale,e.coin_type_raise];let a;return n?a=[s.pure(e.pool_address),s.pure(m(t).config_cap_id),s.pure(n.id),i,s.pure(e.purchase_amount.toString()),s.pure(v)]:a=[s.pure(e.pool_address),s.pure(m(t).config_cap_id),i,s.pure(e.purchase_amount.toString()),s.pure(v)],s.moveCall({target:`${t.published_at}::${H}::${n===void 0?"create_and_purchase":"purchase"}`,typeArguments:o,arguments:a}),s}async creatClaimPayload(e){const{launchpad:t}=this.sdk.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const s=(await this.getPurchaseMarks(this._sdk.ClmmSDK.senderAddress,[e.pool_address],!1))[0],i=new C,n=[e.coin_type_sale,e.coin_type_raise],o=[i.pure(e.pool_address),i.pure(m(t).config_cap_id),i.pure(s==null?void 0:s.id),i.pure(v)];return i.moveCall({target:`${t.published_at}::${H}::claim`,typeArguments:n,arguments:o}),i}async creatSettlePayload(e){const{launchpad:t}=this.sdk.sdkOptions,{clmm_pool:s}=this.sdk.ClmmSDK.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");this.assertLuanchpadConfig();const i=m(s),{clmm_args:n}=e,o=new C;o.setSender(this.sdk.ClmmSDK.senderAddress);const a=[e.coin_type_sale,e.coin_type_raise];if(n){const c=n.opposite?R.priceToSqrtPriceX64(u(1).div(n.current_price),n.raise_decimals,n.sale_decimals).toString():R.priceToSqrtPriceX64(u(n.current_price),n.sale_decimals,n.raise_decimals).toString(),d=BigInt(c)<BigInt(n.clmm_sqrt_price),l=n.opposite?d?e.coin_type_raise:e.coin_type_sale:d?e.coin_type_sale:e.coin_type_raise,_=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,l);let h=Ae.calculateTotalBalance(_);Ae.isSuiCoin(l)&&(h-=BigInt(2e8));const k=X.buildCoinForAmount(o,_,h,l).targetCoin,T=n.opposite?d?"settle_with_reverse_clmm_only_with_a":"settle_with_reverse_clmm_only_with_b":d?"settle_only_with_a":"settle_only_with_b",I=[o.pure(e.pool_address),o.pure(m(t).config_cap_id),o.pure(n.clmm_pool_address),o.pure(i.global_config_id),o.pure(c),k,o.pure(v)];o.moveCall({target:`${t.published_at}::${H}::${T}`,typeArguments:a,arguments:I})}else o.moveCall({target:`${t.published_at}::${H}::settle`,typeArguments:a,arguments:[o.pure(e.pool_address),o.pure(m(t).config_cap_id),o.pure(v)]});return o}creatWithdrawPayload(e){const{launchpad:t}=this.sdk.sdkOptions,s=new C,i=[e.coin_type_sale,e.coin_type_raise],n=[s.object(e.pool_address),s.object(m(t).config_cap_id),s.object(v)];return e.sale_amount>BigInt(0)&&s.moveCall({target:`${t.published_at}::${H}::withdraw_sale`,typeArguments:i,arguments:n}),e.raise_amount>BigInt(0)&&s.moveCall({target:`${t.published_at}::${H}::withdraw_raise`,typeArguments:i,arguments:n}),s}addUserToWhitelisPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const s=new C,i=[e.coin_type_sale,e.coin_type_raise];return e.user_addrs.forEach(n=>{const o=[s.object(m(t).admin_cap_id),s.object(m(t).config_cap_id),s.object(e.pool_address),s.object(n),s.pure(e.safe_limit_amount),s.object(v)];s.moveCall({target:`${t.published_at}::${H}::add_user_to_whitelist`,typeArguments:i,arguments:o})}),s}updateWhitelistCapPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const s=new C,i=[e.coin_type_sale,e.coin_type_raise];return e.safe_limit_amount>0&&s.moveCall({target:`${t.published_at}::${H}::update_whitelist_member_safe_limit_amount`,typeArguments:i,arguments:[s.object(m(t).admin_cap_id),s.object(m(t).config_cap_id),s.object(e.pool_address),s.pure(e.white_list_member),s.pure(e.safe_limit_amount),s.object(v)]}),e.hard_cap_total>0&&s.moveCall({target:`${t.published_at}::${H}::update_whitelist_hard_cap_total`,typeArguments:i,arguments:[s.object(m(t).admin_cap_id),s.object(m(t).config_cap_id),s.object(e.pool_address),s.pure(e.hard_cap_total),s.object(v)]}),s}creatRemoveWhitelistPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const s=new C,i=[e.coin_type_sale,e.coin_type_raise];return e.user_addrs.forEach(n=>{const o=[s.object(m(t).admin_cap_id),s.object(m(t).config_cap_id),s.object(e.pool_address),s.object(n),s.object(v)];s.moveCall({target:`${t.published_at}::${H}::remove_user_from_whitelist`,typeArguments:i,arguments:o})}),s}creatCancelPoolPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const s=new C,i=[e.coin_type_sale,e.coin_type_raise],n=[s.pure(m(t).admin_cap_id),s.pure(m(t).config_cap_id),s.pure(e.pool_address),s.pure(v)];return s.moveCall({target:`${t.published_at}::${H}::cancel`,typeArguments:i,arguments:n}),s}updateRecipientPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const s=new C,i=[e.coin_type_sale,e.coin_type_raise],n=[s.pure(m(t).admin_cap_id),s.pure(m(t).config_cap_id),s.pure(e.pool_address),s.pure(e.new_recipient),s.pure(v)];return s.moveCall({target:`${t.published_at}::${H}::update_recipient_address`,typeArguments:i,arguments:n}),s}updatePoolDuractionPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const s=new C,i=[e.coin_type_sale,e.coin_type_raise],n=[s.pure(m(t).admin_cap_id),s.pure(m(t).config_cap_id),s.pure(e.pool_address),s.pure(e.activity_duration),s.pure(e.settle_duration),s.pure(e.lock_duration),s.pure(v)];return s.moveCall({target:`${t.published_at}::${H}::update_pool_duration`,typeArguments:i,arguments:n}),s}creatUnlockNftPayload(e){const{launchpad:t}=this.sdk.sdkOptions;if(m(t)===void 0)throw Error("getPackagerConfigs(launchpad)  is null");const s=new C,i=[e.nft_type],n=[s.pure(e.lock_nft),s.pure(v)];return s.moveCall({target:`${t.published_at}::lock::unlock_nft`,typeArguments:i,arguments:n}),s}async isAdminCap(e){const{launchpad:t}=this._sdk.sdkOptions;if(m(t)===void 0)throw Error("launchpad config is empty");const s=`${e}_isAdminCap`,i=this.getCache(s);if(i)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:m(t).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(n);const o=Ue(n),a=kt(n);let c=!1;return a&&o&&S(o).source_address===`${t.package_id}::config::AdminCap`&&(c=F(a.AddressOwner)===F(e)),this.updateCache(s,c,O),c}async isWhiteListUser(e,t){const s={type:"address",value:t};try{const i=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:s});return!!(i&&i.data)}catch{return!1}}async getPurchaseAmount(e,t){var i;const s={type:"address",value:t};try{const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:s}),o=x(n);if(console.log(o),o)return(i=o==null?void 0:o.value)==null?void 0:i.fields}catch{}return{safe_limit_amount:"0",safe_purchased_amount:"0"}}async getPurchaseMarks(e,t=[],s=!0){const{launchpad:i}=this._sdk.sdkOptions,n=`${t}_getPurchaseMark`,o=this.getCache(n,s);if(!s&&o!==void 0)return o;let a=null;const c=[];for(;;){const d=await this._sdk.ClmmSDK.fullClient.getOwnedObjects({owner:e,options:{showType:!0,showContent:!0,showDisplay:!0},cursor:a});for(const l of d.data){const{fields:_}=l.data.content;if(S(Te(l)).source_address===`${i.package_id}::pool::PurchaseMark`){console.log("fields: ",_);const g={id:_.id.id,pool_id:S(_.pool_id).address,purchased_raise_amount:_.purchase_total,obtain_sale_amount:_.obtain_sale_amount,used_raise_amount:_.used_raise_amount};t.length>0?t.includes(g.pool_id)&&c.push(g):c.push(g)}}if(d.hasNextPage)a=d.nextCursor;else break}return this.updateCache(n,c,O),c}async getSettleEvent(e){const{launchpad:t}=this._sdk.sdkOptions,s=`${e}_getPurchaseMark`,i=this.getCache(s);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${t.package_id}::pool::SettleEvent`});for(const o of n.data){const a=o.parsedJson;if(e===ne(a.pool_id)){const c={pool_id:a.pool_id,settle_price:a.settle_price,unused_sale:a.unused_sale,unused_raise:a.unused_raise,white_purchase_total:a.white_purchase_total};return this.updateCache(s,c,O),c}}}buildLaunchpadCoinType(e,t){return Xs(this._sdk.sdkOptions.launchpad.package_id,"pool","PoolLiquidityCoin",[e,t])}assertLuanchpadConfig(){const{launchpad:e}=this.sdk.sdkOptions;if(m(e)===void 0)throw Error("sdk getPackagerConfigs(launchpad) is null")}updateCache(e,t,s=ye){let i=this._cache[e];i?(i.overdueTime=V(s),i.value=t):i=new ke(t,V(s)),this._cache[e]=i}getCache(e,t=!1){const s=this._cache[e];if(!t&&(s!=null&&s.isValid()))return s.value;delete this._cache[e]}},Ce=class{static buildPoolImmutables(e){const{fields:t}=e.value.fields.value;return{clmm_pool_id:S(t.clmm_pool_id).address,bonus_type:S(t.bonus_type.fields.name).source_address,pool_id:S(t.pool_id).address,coinTypeA:S(t.coin_type_a.fields.name).source_address,coinTypeB:S(t.coin_type_b.fields.name).source_address}}static buildPoolState(e){const t=x(e),s=[];return t.config.fields.contents.forEach(n=>{s.push({rate:Number(u(n.fields.key).div(Be)),multiplier:Number(u(n.fields.value).div(Be))})}),{balance:t.balance,config:s,is_open:t.is_open,index:Number(t.index),start_time:Number(t.start_time),interval_day:Number(t.interval_day),minimum_percent_to_reward:Number(u(t.minimum_percent_to_reward).div(Be)),rewarders:{rewarder_handle:t.rewarders.fields.id.id,size:Number(t.rewarders.fields.size)},whale_nfts:{whale_nfts_handle:t.whale_nfts.fields.id.id,size:Number(t.whale_nfts.fields.size)},points:{point_handle:t.points.fields.id.id,size:Number(t.points.fields.size)}}}static buildMarkerPositions(e){const{contents:t}=e.value.fields.value.fields,s=[],i=e.id.id;return t.forEach(n=>{const{key:o,value:a}=n.fields,c={id:o,period_id:i,bonus_num:a.fields.bonus_num,point:a.fields.point,is_burn:a.fields.is_burn,point_after_multiplier:a.fields.point_after_multiplier,percent:Number(u(a.fields.percent).div(Be)),fee_share_rate:0,is_redeemed:a.fields.is_redeemed};s.push(c)}),s}static buildPoolBonusInfo(e){const{fields:t,type:s}=e.value.fields.value;return{type:s,time:Number(t.time),settle_time:Number(t.settle_time),settled_num:t.settled_num,is_settled:t.is_settled,basis_bonus:t.basis_bonus,total_bonus:t.total_bonus,is_vacant:t.is_vacant,redeemed_num:t.redeemed_num}}static getBonusPercent(e,t){let s=0;for(const i of e)t>=i.rate&&i.rate>s&&(s=i.multiplier);return s}},ts="router",ro=class{constructor(e){B(this,"_sdk");B(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=!1){var o;const{maker_bonus:t}=this._sdk.sdkOptions,s=`${t.package_id}_getPoolImmutables`,i=this.getCache(s,e),n=[];if(i!==void 0)n.push(...i);else{const a=[];(o=(await this._sdk.ClmmSDK.fullClient.getDynamicFieldsByPage(m(t).maker_pool_handle)).data)==null||o.forEach(l=>{a.push(l.objectId)});const d=await this._sdk.ClmmSDK.fullClient.batchGetObjects(a,{showContent:!0});for(const l of d){const _=x(l);_&&n.push(Ce.buildPoolImmutables(_))}}return n}async getPoolImmutable(e){const{maker_bonus:t}=this._sdk.sdkOptions,s=`${t.package_id}_getPoolImmutables`,i=this.getCache(s);if(i!==void 0){const a=i.filter(c=>e===c.pool_id);if(a.length>0)return a[0]}const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:m(t).maker_pool_handle,name:{type:"0x2::object::ID",value:e}}),o=x(n);return Ce.buildPoolImmutables(o)}async getPools(){const e=[],t=await this.getPoolImmutables(),s=t.map(o=>o.pool_id),i=await this._sdk.ClmmSDK.fullClient.batchGetObjects(s,{showType:!0,showContent:!0});let n=0;for(const o of i){const a=Ce.buildPoolState(o);if(a){const c={...t[n],...a};e.push(c);const d=`${c.pool_id}_getPoolObject`;this.updateCache(d,c,O)}n+=1}return e}async getPool(e,t=!0){const s=`${e}_getPoolObject`,i=this.getCache(s,t),n=await this.getPoolImmutable(e);if(i!==void 0)return i;const o=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),a=Ce.buildPoolState(o),c={...n,...a};return this.updateCache(s,c,O),c}async getPoolHandleId(e){const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),s=x(t);return s?s.list.fields.id.id:""}async getMakerPoolPeriods(e,t=!1){const s=[],i=`${e.pool_id}_getMakerPoolPeriods`,n=this.getCache(i,t);return n!==void 0?n:((await this._sdk.ClmmSDK.fullClient.getDynamicFieldsByPage(e.whale_nfts.whale_nfts_handle)).data.forEach(a=>{const c={id:a.objectId,start_time:0,end_time:0,period:Number(a.name.value)};c.start_time=Number(u(e.start_time).add(u(e.interval_day).mul(24*3600).mul(c.period)).toFixed(0,$.ROUND_DOWN)),c.end_time=Number(u(c.start_time).add(u(e.interval_day).mul(24*3600)).toFixed(0,$.ROUND_DOWN)),s.push(c)}),this.updateCache(i,s,O),s)}async getMakerBonusInitConfigs(){var i;const{package_id:e}=this.sdk.sdkOptions.maker_bonus,t=(i=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::config::InitEvent`}))==null?void 0:i.data,s={maker_config_id:"",maker_pool_handle:""};return t.length>0&&t.forEach(n=>{const o=n.parsedJson;o&&(s.maker_config_id=o.config_id)}),s.maker_pool_handle=await this.getPoolHandleId(s.maker_config_id),s}async getPoolMarkerPositionList(e,t,s=!1){const i={},n=[];s||t.forEach(o=>{const a=`${e}_${o.period}_getPoolMarkerPositionList`,c=this.getCache(a);c!==void 0?i[o.period]=c:(i[o.period]=[],n.push(o))});try{n.length>0&&(await this._sdk.ClmmSDK.fullClient.batchGetObjects(n.map(c=>c.id),{showContent:!0})).forEach(c=>{const d=x(c),l=Ce.buildMarkerPositions(d);if(l.length>0){const{period_id:_}=l[0],h=t.filter(g=>g.id===_)[0];i[h.period]=l}});const o=[];for(const a in i)i[a].forEach(d=>{o.push(d)});if(o.length>0){const a=await this._sdk.ClmmSDK.Position.getSipmlePositionList(o.map(c=>c.id));for(const c of o)for(const d of a)if(c.id===d.pos_object_id){c.clmm_position=d;break}}}catch(o){console.log(o)}for(const o in i){const a=`${e}_${o}_getPoolMarkerPositionList`;this.updateCache(a,i[o],O)}return i}async updateXCetusRewarderAndFee(e,t,s){const i=await this.calculateTotalPointsAfterMultiper(e,s);for(const n of t)await this.calculateXCetusRewarder(e,n,s.period,i);return t}async calculateXCetusRewarder(e,t,s,i){const n=await this.getPoolBonusInfo(e.rewarders.rewarder_handle,s),{fee_share_rate:o}=this.calculateFeeShareRate(e,t,i),a=u(o).mul(n.total_bonus);return t.is_redeemed?t.bonus_num="0":t.bonus_num=a.toString(),t.bonus_num}calculateFeeShareRate(e,t,s){const i=Ce.getBonusPercent(e.config,t.percent),n=u(t.point).mul(i),o=u(n).div(s);return t.point_after_multiplier=n.toString(),t.fee_share_rate=Number(o),{fee_share_rate:Number(o),points_after_multiper:n.toString()}}async calculateTotalPointsAfterMultiper(e,t){const s=await this.getPoolMarkerPositionList(e.whale_nfts.whale_nfts_handle,[t]);let i=u(0);const n=s[t.period];for(const o of n){const a=Ce.getBonusPercent(e.config,o.percent),c=u(o.point).mul(a);i=i.add(c)}return i.toString()}async calculateAllXCetusRewarder(e){const t=this._sdk.ClmmSDK.senderAddress;let s=u(0);const i=[];for(const n of e){const o=await this._sdk.MakerModule.getMakerPoolPeriods(n),a=await this._sdk.MakerModule.getPoolMarkerPositionList(n.whale_nfts.whale_nfts_handle,o),c=[];for(const d of o){const l=a[d.period].filter(_=>{var h;return t.length===0?!1:((h=_.clmm_position)==null?void 0:h.owner)===t});l.length>0&&(await this._sdk.MakerModule.updateXCetusRewarderAndFee(n,l,d),l.forEach(_=>{var h;((h=_.clmm_position)==null?void 0:h.position_status)===zs.Exists&&u(_.bonus_num).greaterThan(0)&&(s=s.add(_.bonus_num),c.includes(_.clmm_position.pos_object_id)||c.push(_.clmm_position.pos_object_id))}))}i.push({bonus_type:n.bonus_type,pool_id:n.pool_id,nft_ids:c})}return{claimtotal:s,claimRecord:i}}async getPoolBonusInfo(e,t,s=!1){const i=`${e}_${t}_getPoolBonusInfo`,n=this.getCache(i,s);if(n!==void 0)return n;const o=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"u64",value:t.toString()}}),a=x(o),c=Ce.buildPoolBonusInfo(a);return this.updateCache(i,c,ye),c}claimPayload(e){const{maker_bonus:t,xcetus:s}=this.sdk.sdkOptions,i=new C;return i.moveCall({target:`${t.published_at}::${ts}::claim`,typeArguments:[e.bonus_type],arguments:[i.pure(m(t).maker_config_id),i.pure(e.market_pool_id),i.pure(e.position_nft_id),i.pure(e.phase),i.pure(m(s).lock_manager_id),i.pure(m(s).xcetus_manager_id),i.pure(e.ve_nft_id)]}),i}claimAllPayload(e){const{maker_bonus:t,xcetus:s}=this.sdk.sdkOptions,i=new C;return e.whale_nfts.forEach(n=>{n.nft_ids.forEach(o=>{i.moveCall({target:`${t.published_at}::${ts}::claim_all`,typeArguments:[n.bonus_type],arguments:[i.object(m(t).maker_config_id),i.object(n.pool_id),i.object(o),i.object(m(s).lock_manager_id),i.object(m(s).xcetus_manager_id),i.object(e.ve_nft_id)]})})}),i}updateCache(e,t,s=ye){let i=this._cache[e];i?(i.overdueTime=V(s),i.value=t):i=new ke(t,V(s)),this._cache[e]=i}getCache(e,t=!1){const s=this._cache[e];if(!t&&(s!=null&&s.isValid()))return s.value;delete this._cache[e]}},$e="router",gt="router",Fe=24*3600,ct=1e3,ee=1e11,je=class{static buildVeNFTDividendInfo(e){const t={id:e.id.id,ve_nft_id:e.name,rewards:[]};return e.value.fields.value.fields.dividends.fields.contents.forEach(s=>{const i=[];s.fields.value.fields.contents.forEach(n=>{i.push({coin_type:S(n.fields.key.fields.name).source_address,amount:n.fields.value})}),t.rewards.push({period:Number(s.fields.key),rewards:i})}),t}static buildDividendManager(e){const t={id:e.id.id,dividends:{id:e.dividends.fields.id.id,size:e.dividends.fields.size},venft_dividends:{id:e.venft_dividends.fields.id.id,size:e.venft_dividends.fields.size},bonus_types:[],start_time:Number(e.start_time),interval_day:Number(e.interval_day),balances:{id:e.balances.fields.id.id,size:e.balances.fields.size},is_open:e.is_open};return e.bonus_types.forEach(s=>{t.bonus_types.push(S(s.fields.name).source_address)}),t}static buildLockUpManager(e){return{id:e.id.id,balance:e.balance,treasury_manager:e.treasury_manager,extra_treasury:e.extra_treasury,lock_infos:{lock_handle_id:e.lock_infos.fields.id.id,size:Number(e.lock_infos.fields.size)},type_name:ns(e.type_name.fields.name),min_lock_day:Number(e.min_lock_day),max_lock_day:Number(e.max_lock_day),package_version:Number(e.package_version),max_percent_numerator:Number(e.max_percent_numerator),min_percent_numerator:Number(e.min_percent_numerator)}}static buildLockCetus(e){const t=e.fields,s={id:t.id.id,type:S(e.type).source_address,locked_start_time:Number(t.locked_start_time),locked_until_time:Number(t.locked_until_time),cetus_amount:t.balance,xcetus_amount:"0",lock_day:0};return s.lock_day=(s.locked_until_time-s.locked_start_time)/Fe,s}static getAvailableXCetus(e,t){let s=u(0);return t.forEach(i=>{s=s.add(i.xcetus_amount)}),u(e.xcetus_balance).sub(s).toString()}static getWaitUnLockCetuss(e){return e.filter(t=>!je.isLocked(t))}static getLockingCetuss(e){return e.filter(t=>je.isLocked(t))}static isLocked(e){return e.locked_until_time>Date.parse(new Date().toString())/1e3}static buildDividendRewardTypeList(e){const t=new Set;return e.forEach(s=>{s.rewards.forEach(i=>{t.add(i.coin_type)})}),Array.from(t)}static getNextStartTime(e){const t=Date.now()/1e3,{start_time:s,interval_day:i}=e,n=Math.ceil((t-s)/(i*Fe));return s+n*i*Fe}},co=class{constructor(e){B(this,"_sdk");B(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getOwnerVeNFT(e,t=!0){const{xcetus:s}=this.sdk.sdkOptions,i=`${e}_getLockUpManagerEvent`,n=this.getCache(i,t);if(n!==void 0)return n;let o;const a=`${s.package_id}::xcetus::VeNFT`;return(await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0,showDisplay:!0},filter:{StructType:a}})).data.forEach(d=>{const l=S(Te(d)).source_address;if(l===a&&d.data&&d.data.content){const{fields:_}=d.data.content;o={...jt(d),id:_.id.id,index:_.index,type:l,xcetus_balance:_.xcetus_balance},this.updateCache(i,o,O)}}),o}async getOwnerLockCetuss(e){const{xcetus:t}=this.sdk.sdkOptions,s=[],i=`${t.package_id}::lock_coin::LockedCoin<${this.buileCetusCoinType()}>`,n=await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0},filter:{StructType:i}});for(const o of n.data)if(S(Te(o)).source_address===i&&o.data){const c=je.buildLockCetus(o.data.content);c.xcetus_amount=await this.getXCetusAmount(c.id),s.push(c)}return s}async getLockCetus(e){var s;const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0}});if((s=t.data)!=null&&s.content){const i=je.buildLockCetus(t.data.content);return i.xcetus_amount=await this.getXCetusAmount(i.id),i}}async getOwnerCetusCoins(e){return await this._sdk.ClmmSDK.getOwnerCoinAssets(e,this.buileCetusCoinType())}mintVeNFTPayload(){const{xcetus:e}=this.sdk.sdkOptions,t=new C;return t.moveCall({target:`${e.published_at}::${$e}::mint_venft`,typeArguments:[],arguments:[t.pure(m(e).xcetus_manager_id)]}),t}async convertPayload(e){const{xcetus:t}=this.sdk.sdkOptions,s=new C,i=this.buileCetusCoinType(),n=await X.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,s,BigInt(e.amount),i);return e.venft_id===void 0?s.moveCall({target:`${t.published_at}::${$e}::mint_and_convert`,typeArguments:[],arguments:[s.object(m(t).lock_manager_id),s.object(m(t).xcetus_manager_id),n,s.pure(e.amount)]}):s.moveCall({target:`${t.published_at}::${$e}::convert`,typeArguments:[],arguments:[s.object(m(t).lock_manager_id),s.object(m(t).xcetus_manager_id),n,s.pure(e.amount),s.pure(e.venft_id)]}),s}redeemLockPayload(e){const{xcetus:t}=this.sdk.sdkOptions,s=new C;return s.moveCall({target:`${t.published_at}::${$e}::redeem_lock`,typeArguments:[],arguments:[s.pure(m(t).lock_manager_id),s.pure(m(t).xcetus_manager_id),s.pure(e.venft_id),s.pure(e.amount),s.pure(e.lock_day),s.pure(v)]}),s}redeemPayload(e){const{xcetus:t}=this.sdk.sdkOptions,s=new C;return s.moveCall({target:`${t.published_at}::${$e}::redeem`,typeArguments:[],arguments:[s.pure(m(t).lock_manager_id),s.pure(m(t).xcetus_manager_id),s.pure(e.venft_id),s.pure(e.lock_id),s.pure(v)]}),s}redeemDividendPayload(e,t){const{xcetus:s,xcetus_dividends:i}=this.sdk.sdkOptions,n=new C;return t.forEach(o=>{n.moveCall({target:`${s.published_at}::${gt}::redeem`,typeArguments:[o],arguments:[n.object(m(i).dividend_manager_id),n.object(e)]})}),n}redeemDividendV2Payload(e,t,s){const{xcetus_dividends:i}=this.sdk.sdkOptions;let n=new C;return t.filter(a=>s.includes(a)).length>0&&(n=this.redeemDividendXTokenPayload(e,n)),t.forEach(a=>{s.includes(a)||n.moveCall({target:`${i.published_at}::${gt}::redeem_v2`,typeArguments:[a],arguments:[n.object(m(i).dividend_manager_id),n.object(e),n.object(v)]})}),n}redeemDividendXTokenPayload(e,t){const{xcetus_dividends:s,xcetus:i}=this.sdk.sdkOptions,{xcetus_manager_id:n,lock_manager_id:o}=m(i),{dividend_manager_id:a}=m(s);return t=t===void 0?new C:t,t.moveCall({target:`${s.published_at}::${gt}::redeem_xtoken`,typeArguments:[],arguments:[t.object(o),t.object(n),t.object(a),t.object(e),t.object(v)]}),t}buileCetusCoinType(){return`${this.sdk.sdkOptions.cetus_faucet.package_id}::cetus::CETUS`}buileXTokenCoinType(e=this._sdk.sdkOptions.xcetus.package_id,t="xcetus",s="XCETUS"){return`${e}::${t}::${s}`}cancelRedeemPayload(e){const{xcetus:t}=this.sdk.sdkOptions,s=new C;return s.moveCall({target:`${t.published_at}::${$e}::cancel_redeem_lock`,typeArguments:[],arguments:[s.pure(m(t).lock_manager_id),s.pure(m(t).xcetus_manager_id),s.pure(e.venft_id),s.pure(e.lock_id),s.pure(v)]}),s}async getInitConfigs(){var a,c;const{package_id:e}=this.sdk.sdkOptions.xcetus,t=`${e}_getInitFactoryEvent`,s=this.getCache(t);if(s!==void 0)return s;const i=(a=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::xcetus::InitEvent`}))==null?void 0:a.data,n={xcetus_manager_id:"",lock_manager_id:"",lock_handle_id:""};i.length>0&&i.forEach(d=>{const l=d.parsedJson;l&&(n.xcetus_manager_id=l.xcetus_manager)});const o=(c=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::locking::InitializeEvent`}))==null?void 0:c.data;return o.length>0&&o.forEach(d=>{const l=d.parsedJson;l&&(n.lock_manager_id=l.lock_manager)}),n.lock_manager_id.length>0&&(n.lock_handle_id=(await this.getLockUpManager(n.lock_manager_id)).lock_infos.lock_handle_id),this.updateCache(t,n,O),n}async getLockUpManager(e=m(this.sdk.sdkOptions.xcetus).lock_manager_id,t=!1){const s=`${e}_getLockUpManager`,i=this.getCache(s,t);if(i!==void 0)return i;const n=await this.sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),o=je.buildLockUpManager(x(n));return this.updateCache(s,o,O),o}async getDividendConfigs(){var o;const{package_id:e}=this.sdk.sdkOptions.xcetus_dividends,t=`${e}_getDividendManagerEvent`,s=this.getCache(t);if(s!==void 0)return s;const i=(o=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::dividend::InitEvent`}))==null?void 0:o.data,n={dividend_manager_id:"",dividend_admin_id:"",dividend_settle_id:""};return i.length>0&&i.forEach(a=>{const c=a.parsedJson;c&&(n.dividend_manager_id=c.manager_id,n.dividend_admin_id=c.admin_id,n.dividend_settle_id=c.settle_id,this.updateCache(t,n,O))}),n}async getDividendManager(e=!1){const{dividend_manager_id:t}=m(this._sdk.sdkOptions.xcetus_dividends),s=`${t}_getDividendManager`,i=this.getCache(s,e);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=x(n),a=je.buildDividendManager(o);return this.updateCache(s,a,O),a}async getXcetusManager(e=!0){const{xcetus_manager_id:t}=m(this._sdk.sdkOptions.xcetus),s=`${t}_getXcetusManager`,i=this.getCache(s,e);if(i)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=x(n),a={id:o.id.id,index:Number(o.index),has_venft:{handle:o.has_venft.fields.id.id,size:o.has_venft.fields.size},nfts:{handle:o.nfts.fields.id.id,size:o.nfts.fields.size},total_locked:o.total_locked,treasury:o.treasury.fields.total_supply.fields.value};return this.updateCache(s,a),a}async getVeNFTDividendInfo(e,t){try{const s=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),i=x(s);return je.buildVeNFTDividendInfo(i)}catch{return}}async redeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const s=await this.getLockUpManager(m(this._sdk.sdkOptions.xcetus).lock_manager_id),i=u(ee).mul(u(s.max_lock_day).sub(u(t))).mul(u(s.max_percent_numerator).sub(u(s.min_percent_numerator))).div(u(s.max_lock_day).sub(u(s.min_lock_day))),n=u(ee).mul(u(s.max_percent_numerator)).sub(i).div(u(ct)).div(ee);return{amountOut:u(n).mul(u(e)).round().toString(),percent:n.toString()}}async reverseRedeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const s=await this.getLockUpManager(m(this._sdk.sdkOptions.xcetus).lock_manager_id),i=u(ee).mul(u(s.max_lock_day).sub(u(t))).mul(u(s.max_percent_numerator).sub(u(s.min_percent_numerator))).div(u(s.max_lock_day).sub(u(s.min_lock_day))),n=u(ee).mul(u(s.max_percent_numerator)).sub(i).div(u(ct)).div(ee);return{amountOut:u(e).div(n).toFixed(0,$.ROUND_UP),percent:n.toString()}}async getXCetusAmount(e){const{lock_handle_id:t}=m(this._sdk.sdkOptions.xcetus),s=`${e}_getXCetusAmount`,i=this.getCache(s);if(i!==void 0)return i;try{const n=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:t,name:{type:"0x2::object::ID",value:e}}),o=x(n);if(o){const{xcetus_amount:a}=o.value.fields.value.fields;return this.updateCache(s,a,O),a}}catch{}return"0"}async getVeNftAmount(e,t){try{const s=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),i=x(s);if(i){const{lock_amount:n,xcetus_amount:o}=i.value.fields.value.fields;return{lock_amount:n,xcetus_amount:o}}}catch{}return{lock_amount:"0",xcetus_amount:"0"}}async getPhaseDividendInfo(e,t=!1){const i=(await this.getDividendManager()).dividends.id,n=`${i}_${e}_getPhaseDividendInfo`,o=this._sdk.getCache(n,t);if(o)return o;try{const a=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:i,name:{type:"u64",value:e}}),c=x(a),d=c.value.fields.value.fields,l=d.redeemed_num.fields.contents.map(k=>({name:k.fields.key.fields.name,value:k.fields.value})),_=d.bonus_types.map(k=>k.fields.name),h=d.bonus.fields.contents.map(k=>({name:k.fields.key.fields.name,value:k.fields.value})),g={id:Ve(a),phase:c.name,settled_num:d.settled_num,register_time:d.register_time,redeemed_num:l,is_settled:d.is_settled,bonus_types:_,bonus:h,phase_end_time:""};return this.updateCache(n,g),g}catch{}}updateCache(e,t,s=ye){let i=this._cache[e];i?(i.overdueTime=V(s),i.value=t):i=new ke(t,V(s)),this._cache[e]=i}getCache(e,t=!1){const s=this._cache[e];if(!t&&(s!=null&&s.isValid()))return s.value;delete this._cache[e]}},uo="factory",Q="oversubscribe_pool",qs=1e6,nt=1e18,Re="router",ft="router",tt="router",ss={curve:{strategy:3,both_side:{div_width:10,ratios:[.333333,.266666,.2,.133333,.066666]},one_side:{div_width:5,ratios:[.333333,.266666,.2,.133333,.066666]}},bidAsk:{strategy:4,both_side:{div_width:10,ratios:[.172413793,.137931034,.103448276,.068965517,.034482759,.068965517,.103448276,.137931034,.172413793]},one_side:{div_width:5,ratios:[.066666667,.13333333,.2,.266666667,.333333333]}}};function lo(e){return"master_address"in e}var yt="router",_o="vaults",po=1e4,U=class{static buildIdoPoolImmutables(e){return{pool_address:ne(e.pool_id),coin_type_sale:S(e.sale_coin_type.name).full_address,coin_type_raise:S(e.raise_coin_type.name).full_address,tick_spacing:Number(e.tick_spacing),total_supply:e.total_supply,min_purchase:e.min_purchase_amount,max_purchase:e.max_purchase_amount}}static buildIdoPool(e){const t=Te(e),s=S(t),i=x(e),n={pool_address:ne(i.id.id),coin_type_sale:s.type_arguments[0],coin_type_raise:s.type_arguments[1],tick_spacing:Number(i.tick_spacing),total_supply:i.total_supply,min_purchase:i.min_purchase_amount,max_purchase:i.max_purchase_amount},o={start_time:Number(i.duration_manager.fields.start_time),lock_up_duration:Number(i.duration_manager.fields.lock_up_duration),purchase_duration:Number(i.duration_manager.fields.purchase_duration),end_time:0};o.end_time=o.start_time+o.purchase_duration;const a={complete_raise_limit:i.complete_raise_limit,liquidity_injection_ratio:u(i.liquidity_injection_ratio).div(qs).toNumber(),current_sqrt_price_min:i.current_sqrt_price_min,current_sqrt_price_max:i.current_sqrt_price_max,owner:i.owner,sale_coin_amount:i.sale_coin,raise_coin_amount:i.raise_coin,price:i.price,current_price:i.price,duration_summary:o,is_cancelled:i.is_cancelled,is_liquidity_injected:i.is_liquidity_injected,liquidity_used_raise_amount:i.liquidity_used_raise_amount,liquidity_used_sale_amount:i.liquidity_used_sale_amount,purchase_summary:{size:Number(i.purchase_manager.fields.purchases.fields.size),purchase_handle:i.purchase_manager.fields.purchases.fields.id.id},total_purchase_amount:i.total_purchase_amount,white_summary:{white_list_id:i.white_list.fields.id.id,protection_limit_used:i.white_list.fields.protection_limit_used,protection_hard_cap:i.white_list.fields.protection_hard_cap,white_handle:i.white_list.fields.addresses.fields.id.id,size:Number(i.white_list.fields.addresses.fields.size)},pool_status:"Upcoming",max_raise_amount:"",sale_decimals:0,raise_decimals:0,is_withdrawn:i.is_withdrawn};return U.updatePoolStatus(a),{...n,...a}}static is_init_period(e){return Number(u(Date.now()/1e3).toFixed(0))<e.start_time}static is_purchase_period(e){const t=Number(u(Date.now()/1e3).toFixed(0));return t>=e.start_time&&t<=e.start_time+e.purchase_duration}static is_claim_period(e){const t=Number(u(Date.now()/1e3).toFixed(0)),s=e.start_time+e.purchase_duration;return t>s}static is_can_inject_liquidity(e){return!e.is_cancelled&&e.liquidity_injection_ratio!==0&&U.is_claim_period(e.duration_summary)&&!e.is_liquidity_injected}static is_can_withdraw(e){return e.is_withdrawn?!1:U.is_sale_failed(e)?!0:(e.liquidity_injection_ratio===0||e.is_liquidity_injected)&&U.is_claim_period(e.duration_summary)}static is_sale_failed(e){return!!(e.is_cancelled||U.is_claim_period(e.duration_summary)&&u(e.total_purchase_amount).lessThan(e.complete_raise_limit))}static buildPurchaseInfo(e){return{...e.value.fields.value.fields,owner:e.name}}static calculateRedeemAmount(e,t){let s,i;if(U.is_sale_failed(e))s="0",i="0";else if(t.is_redeemed)s=t.obtained_sale_amount,i=t.used_raise_amount;else if(u(e.total_purchase_amount).lessThanOrEqualTo(e.max_raise_amount))s=u(t.purchased_raise_amount).mul(nt).div(e.price).toString(),i=t.purchased_raise_amount;else{const o=U.redeemForSaleOversubcribe(e,t);s=o.user_obtained_sale_amount,i=o.user_used_raise_amount_ceil}s=$.floor(s);const n=$.floor(u(t.purchased_raise_amount).sub(i).toString());return{obtained_sale_amount:s,refunded_raise_amount:n}}static calculateWithdrawAmount(e){let t,s;const i=u(e.total_supply).mul(e.liquidity_injection_ratio);if(U.is_sale_failed(e))t="0",s=u(i).add(e.total_supply);else{const{max_raise_amount:n}=e;u(e.total_purchase_amount).greaterThanOrEqualTo(n)?(t=u(n).sub(e.liquidity_used_raise_amount).toString(),s="0"):(t=u(e.total_purchase_amount).sub(e.liquidity_used_raise_amount),s=u(e.total_supply).add(i).sub(e.liquidity_used_sale_amount).sub(U.get_sold_amount(e)))}return{obtained_raise_amount:$.floor(t).toString(),refunded_sale_amount:$.ceil(s).toString()}}static get_sold_amount(e){return u(e.total_purchase_amount).greaterThanOrEqualTo(e.max_raise_amount)?e.total_supply:u(e.total_purchase_amount).mul(nt).div(e.price)}static redeemForSaleOversubcribe(e,t){const s=t.protection_raise_amount,i=u(t.purchased_raise_amount).sub(s),n=e.max_raise_amount,{protection_limit_used:o}=e.white_summary,a=u(n).sub(o),c=u(e.total_purchase_amount).sub(o),d=$.ceil(i.mul(a).div(c).add(s)),l=$.floor(i.mul(a).div(c).add(s));return{user_obtained_sale_amount:$.floor(u(e.total_supply).mul(l).div(n)),user_used_raise_amount_ceil:d}}static raiseTotalAmount(e){const t=u(e.sale_decimals-e.raise_decimals).abs().toNumber();return e.sale_decimals>e.raise_decimals?u(e.total_supply).mul(e.current_price).div(u(10).pow(u(t))).toString():u(e.total_supply).mul(e.current_price).mul(u(10).pow(u(t))).toString()}static updatePoolStatus(e){const t=Number(u(Date.now()/1e3).toFixed(0)),s=e.duration_summary,i=s.start_time+s.purchase_duration;e.is_cancelled?e.pool_status="Canceled":t<s.start_time?e.pool_status="Upcoming":t>s.start_time&&t<i?e.pool_status="Live":u(e.total_purchase_amount).lessThan(e.complete_raise_limit)?e.pool_status="Failed":e.pool_status="Ended"}static async calculatePoolUiPrice(e,t){const s=await e.ClmmSDK.CetusConfig.getTokenListByCoinTypes([t.coin_type_sale,t.coin_type_raise]),i=s[t.coin_type_sale].decimals,n=s[t.coin_type_raise].decimals;t.current_price=W.priceFixToReal(Number(u(t.price).div(u(nt)).toString()),i,n).toString(),t.sale_decimals=i,t.raise_decimals=n,t.max_raise_amount=this.raiseTotalAmount(t)}},vo=class{constructor(e){B(this,"_sdk");this._sdk=e}async getPools(e=[],t=!1){const s=[];if(e.length>0){if(e.filter(n=>{const o=`${n}_getPool`,a=this._sdk.getCache(o,t);return a?(s.push(a),!1):!0}).length>0){const n=await this._sdk.ClmmSDK.fullClient.batchGetObjects(e,{showType:!0,showContent:!0});for(const o of n){const a=await this.buildIdoWarpPool(o);a&&s.push(a)}}}else{const i=await this._sdk.Launchpad.getPools(),n=await this._sdk.Ido.getPools();i.forEach(o=>{s.push({...o,version:"1"})}),n.forEach(o=>{s.push({...o,version:"2"})})}return s.forEach(i=>{const n=`${i.pool_address}_getPool`;this._sdk.updateCache(n,i)}),s}async getPool(e,t=!0){const s=`${e}_getPool`,i=this._sdk.getCache(s,t);if(i)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=await this.buildIdoWarpPool(n);return this._sdk.updateCache(s,o),o}async getJoinPools(e,t){const s=[],i=t.filter(o=>o.version==="1"),n=t.filter(o=>o.version==="2");if(i.length>0){const o=await this._sdk.Launchpad.getPurchaseMarks(e,i.map(a=>a.pool_address),!1);i.forEach(a=>{for(const c of o)if(c.pool_id===a.pool_address){s.push(a);break}})}for(const o of n)await this._sdk.Ido.getPurchaseInfo(o.purchase_summary.purchase_handle,e,!1)&&s.push(o);return s}async getOwnerPools(e,t){return t.filter(s=>s.owner===F(e))}async creatPurchasePayload(e,t){return e.version==="1"?await this._sdk.Launchpad.creatPurchasePayload({pool_address:e.pool_address,purchase_amount:t,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise}):await this._sdk.Ido.creatPurchasePayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,purchase_handle:e.purchase_summary.purchase_handle,raise_amount:t.toString()})}async creatRedeemPayload(e){return e.version==="1"?await this._sdk.Launchpad.creatClaimPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise}):await this._sdk.Ido.redeemPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,purchase_handle:e.purchase_summary.purchase_handle})}async creatWithdrawPayload(e){if(e.version==="1"){const s=await W.getWithdrawSale(e),i=await W.getWithdrawRaise(e);return this._sdk.Launchpad.creatWithdrawPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,sale_amount:BigInt(s),raise_amount:BigInt(i)})}return this._sdk.Ido.withdrawPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise})}unlockNftPayload(e,t){return e.version==="1"?this._sdk.Launchpad.creatUnlockNftPayload(t):this._sdk.Ido.unlockNftPayload({lock_nft_id:t.lock_nft,nft_type:t.nft_type})}async getLockNFTList(e){let t=[];return e.version==="1"&&(t=await this._sdk.Launchpad.getLockNFTList(e.owner)),t=await this._sdk.Ido.getLockNFTList(e.owner),t.filter(i=>i.coin_type_a===e.coin_type_sale&&i.coin_type_b===e.coin_type_raise||i.coin_type_a===e.coin_type_raise&&i.coin_type_b===e.coin_type_sale)}async isWhiteListUser(e,t){return t.version==="1"?await this._sdk.Launchpad.isWhiteListUser(t.white_summary.white_handle,e):!!await this._sdk.Ido.getWhiteProtectionLimit(t.white_summary.white_handle,e)}async getPurchaseInfo(e,t){if(t.version==="1"){const i=await this._sdk.Launchpad.getPurchaseMarks(e,[t.pool_address]);return i.length>0?i[0]:void 0}return await this._sdk.Ido.getPurchaseInfo(t.purchase_summary.purchase_handle,e)}async getwhiteProtectionInfo(e,t,s=!1){if(t.version==="1")return await this._sdk.Launchpad.getPurchaseAmount(t.white_summary.white_handle,e);const i=await this._sdk.Ido.getPurchaseInfo(t.purchase_summary.purchase_handle,e,s);if(i)return{safe_limit_amount:i.protection_raise_limit,safe_purchased_amount:i.protection_raise_amount};const n=await this._sdk.Ido.getWhiteProtectionLimit(t.white_summary.white_handle,e,!1);return n?{safe_limit_amount:n,safe_purchased_amount:"0"}:{safe_limit_amount:"0",safe_purchased_amount:"0"}}async calculateWithdrawAmount(e){if(e.version==="1"){const t=await W.getHistoryWithdrawRaise(this._sdk,e),s=await W.getHistoryWithdrawSale(this._sdk,e);return{obtained_raise_amount:t,refunded_sale_amount:s}}return U.calculateWithdrawAmount(e)}async buildIdoWarpPool(e){const t=Ue(e);if(S(t).address===this._sdk.sdkOptions.ido.package_id){const s=U.buildIdoPool(e);return await U.calculatePoolUiPrice(this._sdk,s),{...s,version:"2"}}if(S(t).address===this._sdk.sdkOptions.launchpad.package_id){const s=W.buildLaunchPadPool(e);return await W.calculatePoolPrice(this._sdk,s),{...s,version:"1"}}}},Oe=class{static buildVeNFTDividendInfo(e){const t={id:e.id.id,ve_nft_id:e.name,rewards:[]};return e.value.fields.value.fields.dividends.fields.contents.forEach(s=>{const i=[];s.fields.value.fields.contents.forEach(n=>{i.push({coin_type:S(n.fields.key.fields.name).source_address,amount:n.fields.value})}),t.rewards.push({period:Number(s.fields.key),rewards:i})}),t}static buildDividendManager(e){const t={id:e.id.id,dividends:{id:e.dividends.fields.id.id,size:e.dividends.fields.size},venft_dividends:{id:e.venft_dividends.fields.id.id,size:e.venft_dividends.fields.size},bonus_types:[],start_time:Number(e.start_time),interval_day:Number(e.interval_day),balances:{id:e.balances.fields.id.id,size:e.balances.fields.size},is_open:e.is_open};return e.bonus_types.forEach(s=>{t.bonus_types.push(S(s.fields.name).source_address)}),t}static buildLockUpManager(e){return{id:e.id.id,balance:e.balance,treasury_manager:e.treasury_manager,extra_treasury:e.extra_treasury,lock_infos:{lock_handle_id:e.lock_infos.fields.id.id,size:Number(e.lock_infos.fields.size)},type_name:ns(e.type_name.fields.name),min_lock_day:Number(e.min_lock_day),max_lock_day:Number(e.max_lock_day),package_version:Number(e.package_version),max_percent_numerator:Number(e.max_percent_numerator),min_percent_numerator:Number(e.min_percent_numerator)}}static buildLockToken(e){const t=e.fields,s={id:t.id.id,type:S(e.type).source_address,locked_start_time:Number(t.locked_start_time),locked_until_time:Number(t.locked_until_time),token_amount:t.balance,xtoken_amount:"0",lock_day:0};return s.lock_day=(s.locked_until_time-s.locked_start_time)/Fe,s}static getAvailableXToken(e,t){let s=u(0);return t.forEach(i=>{s=s.add(i.xtoken_amount)}),u(e.xtoken_balance).sub(s).toString()}static getWaitUnLockTokens(e){return e.filter(t=>!Oe.isLocked(t))}static getLockingTokens(e){return e.filter(t=>Oe.isLocked(t))}static buildDividendRewardTypeList(e){const t=new Set;return e.forEach(s=>{s.rewards.forEach(i=>{t.add(i.coin_type)})}),Array.from(t)}static isLocked(e){return e.locked_until_time>Date.parse(new Date().toString())/1e3}static getNextStartTime(e,t=Fe){const s=Date.now()/1e3,{start_time:i,interval_day:n}=e,o=Math.ceil((s-i)/(n*t));return i+o*n*t}},le=class{static getDefaultStrategyConfig(e){let t;switch(e){case 4:t=ss.bidAsk;break;default:t=ss.curve;break}return t}static geTickIndexRange(e,t,s,i){let n,o;switch(e=R.getInitializableTickIndex(e,t),i){case"left":e>0?(o=u(e).sub(t).toNumber(),n=u(e).mul(u(1).add(s)).toDecimalPlaces(0).toNumber()):(o=u(e).sub(t).toNumber(),n=u(e).mul(u(1).sub(s)).toDecimalPlaces(0).toNumber());break;case"right":e>0?(o=u(e).mul(u(1).add(s)).toDecimalPlaces(0).toNumber(),n=u(e).add(t).toNumber()):(o=u(e).mul(u(1).sub(s)).toDecimalPlaces(0).toNumber(),n=u(e).add(t).toNumber());break;default:e>0?(n=u(e).mul(u(1).sub(s)).toDecimalPlaces(0).toNumber(),o=u(e).mul(u(1).add(s)).toDecimalPlaces(0).toNumber()):(n=u(e).mul(u(1).add(s)).toDecimalPlaces(0).toNumber(),o=u(e).mul(u(1).sub(s)).toDecimalPlaces(0).toNumber());break}if(n=R.getInitializableTickIndex(n,t),o=R.getInitializableTickIndex(o,t),n<Hs)throw Error("Tick lower value is below the minimum allowed value.");if(o>Ys)throw Error("Tick upper value is above the maximum allowed value.");return{tick_lower:n,tick_upper:o}}static getCreateLiquidityBins(e,t){let s=[];switch(t){case 4:s=le.getCreateBidAskLiquidityBins(e);break;default:s=le.getCreateCurveLiquidityBins(e);break}return s}static getCreateBidAskLiquidityBins(e){const t=u(Math.floor(u(e.tick_upper).sub(e.tick_lower).div(e.div_width).toNumber())).abs(),s=[],i=e.ratios;let n,o;for(let a=0;a<i.length;a++){let c,d;e.tick_upper<=e.curr_tick?(d=u(e.tick_upper).sub(t.mul(a)).toNumber(),c=u(d).sub(t).toNumber()):e.tick_lower>=e.curr_tick?(c=u(e.tick_lower).add(t.mul(a)).toNumber(),d=u(e.tick_lower).add(t.mul(a+1)).toNumber()):a===4?(c=u(e.tick_lower).add(t.mul(a)).toNumber(),d=u(c).add(t.mul(2)).toNumber()):a>4?(c=u(e.tick_lower).add(t.mul(a+1)).toNumber(),d=u(c).add(t).toNumber()):(c=u(e.tick_lower).add(t.mul(a)).toNumber(),d=u(c).add(t).toNumber()),n=R.getInitializableTickIndex(c,e.tick_spacing),o=R.getInitializableTickIndex(d,e.tick_spacing),s.push({tick_lower:n,tick_upper:o,ratio:i[a],liquidity:"0"})}return s}static getCreateCurveLiquidityBins(e){const t=u(Math.floor(u(e.tick_upper).sub(e.tick_lower).div(e.div_width).toNumber())).abs(),s=[],i=e.ratios;for(let n=0;n<i.length;n++){let o,a;e.tick_upper<=e.curr_tick?(a=e.tick_upper,o=u(e.tick_upper).sub(t.mul(n+1)).toNumber()):e.tick_lower>=e.curr_tick?(o=e.tick_lower,a=u(o).add(t.mul(n+1)).toNumber()):(o=u(e.curr_tick).sub(t.mul(n+1)).toNumber(),a=u(e.curr_tick).add(t.mul(n+1)).toNumber()),s.push({tick_lower:R.getInitializableTickIndex(o,e.tick_spacing),tick_upper:R.getInitializableTickIndex(a,e.tick_spacing),ratio:i[n],liquidity:"0"})}return s}static calculateAddLiquidityInputs(e){const t=new P(R.tickIndexToSqrtPriceX64(e.curr_tick)),s=le.calculateCoinRatios(e.curr_tick,e.liquidity_bins),i=e.liquidity_bins.map((n,o)=>{const a=s[o],c=u(e.coin_amount).mul(e.fix_amount_a?a.coinRatioA:a.coinRatioB).toFixed(0).toString();try{return{...re.estLiquidityAndcoinAmountFromOneAmounts(n.tick_lower,n.tick_upper,new P(c),e.fix_amount_a,!0,e.slippage,t),...n}}catch{return{coinAmountA:new P(0),coinAmountB:new P(0),tokenMaxA:new P(0),tokenMaxB:new P(0),liquidityAmount:new P(0),fix_amount_a:!e.fix_amount_a,...n}}});return le.fixLiquidityInputs(t,e.slippage,i,!0)}static fixLiquidityInputs(e,t,s,i){const n=s.filter(a=>a.liquidityAmount.gt(Gt));if(n.length===0)return[];const o=n[0];return s.map(a=>{if(a.liquidityAmount.eq(Gt)){const c=u(o.liquidityAmount.toString()).mul(a.ratio).div(o.ratio).toFixed(0),d=R.tickIndexToSqrtPriceX64(a.tick_lower),l=R.tickIndexToSqrtPriceX64(a.tick_upper),_=re.getCoinAmountFromLiquidity(new P(c.toString()),e,d,l,!1);return{coinAmountA:_.coinA,coinAmountB:_.coinB,liquidityAmount:new P(c.toString()),fix_amount_a:a.fix_amount_a,...dt(_,lt.fromDecimal(u(t).mul(100)),i)}}return a})}static calculateCoinRatios(e,t){const s=new P(R.tickIndexToSqrtPriceX64(e)),i=[];let n=u(0),o=u(0);const a=t.map(l=>{const _=u(Zs(100,6).toString()).mul(l.ratio).toFixed(0).toString(),h=R.tickIndexToSqrtPriceX64(l.tick_lower),g=R.tickIndexToSqrtPriceX64(l.tick_upper),k=re.getCoinAmountFromLiquidity(new P(_),s,h,g,!0);return n=n.add(k.coinA.toString()),o=o.add(k.coinB.toString()),{...k,liquidity:_}}),c=[],d=[];return a.forEach((l,_)=>{const h={coinRatioA:n.eq(u(0))?0:u(l.coinA.toString()).div(n).toNumber(),coinRatioB:o.eq(u(0))?0:u(l.coinB.toString()).div(o).toNumber(),liquiditys:l.liquidity,tick_lower:t[_].tick_lower,tick_upper:t[_].tick_upper};i.push(h),c.push(n.eq(u(0))?0:u(l.coinA.toString()).div(n).toNumber()),d.push(o.eq(u(0))?0:u(l.coinB.toString()).div(o).toNumber())}),i}static calculateCloseMasterLiquidityInputs(e){const t=new P(R.tickIndexToSqrtPriceX64(e.curr_tick));return e.positions.map(i=>{const n=new P(i.liquidity),o=R.tickIndexToSqrtPriceX64(i.tick_lower_index),a=R.tickIndexToSqrtPriceX64(i.tick_upper_index),c=re.getCoinAmountFromLiquidity(n,t,o,a,!1),d=lt.fromDecimal(u(e.slippage).mul(100)),{tokenMaxA:l,tokenMaxB:_}=dt(c,d,!1);return{coinAmountA:c.coinA,coinAmountB:c.coinB,tokenMaxA:l,tokenMaxB:_,liquidityAmount:n,fix_amount_a:!1}})}static calculateRemoveMasterLiquidityInputs(e){const t=new P(R.tickIndexToSqrtPriceX64(e.curr_tick)),{fix_token:s}=e;if(s){const n=e.positions.map((c,d)=>({tick_lower:c.tick_lower_index,tick_upper:c.tick_upper_index,ratio:e.ratios[d]})),o=le.calculateCoinRatios(e.curr_tick,n),a=e.positions.map((c,d)=>{const l=o[d],_=u(s.coin_amount).mul(s.fix_amount_a?l.coinRatioA:l.coinRatioB).toFixed(0).toString();try{const h=re.estLiquidityAndcoinAmountFromOneAmounts(c.tick_lower_index,c.tick_upper_index,new P(_),s.fix_amount_a,!1,e.slippage,t);return{...h,tick_lower:c.tick_lower_index,tick_upper:c.tick_upper_index,liquidity:h.liquidityAmount.toString(),ratio:e.ratios[d]}}catch{return{coinAmountA:new P(0),coinAmountB:new P(0),tokenMaxA:new P(0),tokenMaxB:new P(0),liquidityAmount:new P(0),fix_amount_a:!s.fix_amount_a,tick_lower:c.tick_lower_index,tick_upper:c.tick_upper_index,liquidity:"0",ratio:e.ratios[d]}}});return le.fixLiquidityInputs(t,e.slippage,a,!1)}return e.positions.map((n,o)=>{const a=e.ratios[o];let c=u(e.liquidity).mul(a).toFixed(0);u(c).greaterThan(n.liquidity)&&(c=n.liquidity);const d=R.tickIndexToSqrtPriceX64(n.tick_lower_index),l=R.tickIndexToSqrtPriceX64(n.tick_upper_index),_=re.getCoinAmountFromLiquidity(new P(c),t,d,l,!1),h=lt.fromDecimal(u(e.slippage).mul(100)),{tokenMaxA:g,tokenMaxB:k}=dt(_,h,!1);return{coinAmountA:_.coinA,coinAmountB:_.coinB,tokenMaxA:g,tokenMaxB:k,liquidityAmount:new P(c),fix_amount_a:!1}})}static buildMasterPosition(e){return{coin_type_a:S(e.coin_type_a.fields.name).full_address,coin_type_b:S(e.coin_type_b.fields.name).full_address,description:e.description,id:e.id.id,index:e.index,liquidity:e.liquidity,name:e.name,pool:e.pool,tick_lower_index:Se(BigInt(e.tick_lower_index.fields.bits)),tick_upper_index:Se(BigInt(e.tick_upper_index.fields.bits)),url:e.url}}static buildMasterNFT(e){const t=x(e);if(t){const s={id:t.id.id,pool_id:t.pool_id,index:Number(t.index),strategy:Number(t.strategy),tick_lower_index:Se(BigInt(t.tick_lower_index)),tick_upper_index:Se(BigInt(t.tick_upper_index)),positions:[],...jt(e)};return s.positions=t.positions.map(i=>le.buildMasterPosition(i.fields)),s}}},_e=class{static generateNextTickRange(e,t,s){const i=e-t/2,n=e+t/2;return{new_tick_lower:_e.getValidTickIndex(i,s),new_tick_upper:_e.getValidTickIndex(n,s)}}static calculateDepositRatio(e,t,s){const i=R.sqrtPriceX64ToTickIndex(s);if(i<e)return{ratioA:new $(1),ratioB:new $(0)};if(i>t)return{ratioA:new $(0),ratioB:new $(1)};const n=new P(1e8),{coinAmountB:o}=re.estLiquidityAndcoinAmountFromOneAmounts(e,t,n,!0,!0,0,s),a=R.sqrtPriceX64ToPrice(s,0,0),c=u(n.toString()).mul(a),d=c.add(o.toString()),l=c.div(d),_=u(o.toString()).div(d);return{ratioA:l,ratioB:_}}static getValidTickIndex(e,t){if(e%t===0)return e;let s;if(e>0?s=e-e%t+t:e<0?s=e+Math.abs(e)%t-t:s=e,s%t!==0)throw new Error("Assertion failed: res % tickSpacing == 0");if(Math.abs(s)<Math.abs(e))throw new Error("Assertion failed: res.abs() >= tickIndex");return s}static get_lp_amount_by_liquidity(e,t){return e.total_supply==="0"?t:u(e.total_supply).mul(t).div(e.liquidity).toFixed(0,$.ROUND_DOWN).toString()}static get_share_liquidity_by_amount(e,t){return u(t).mul(e.liquidity).div(e.total_supply).toFixed(0,$.ROUND_DOWN).toString()}static get_protocol_fee_amount(e,t){return u(t).mul(e.protocol_fee_rate).div(po).toFixed(0,$.ROUND_CEIL)}static buildPosition(e){return{coin_type_a:S(e.coin_type_a.fields.name).full_address,coin_type_b:S(e.coin_type_b.fields.name).full_address,description:e.description,id:e.id.id,index:e.index,liquidity:e.liquidity,name:e.name,pool:e.pool,tick_lower_index:Se(BigInt(e.tick_lower_index.fields.bits)),tick_upper_index:Se(BigInt(e.tick_upper_index.fields.bits)),url:e.url}}static buildPool(e){const t=x(e),s=Ue(e);if(t){const i={id:t.id.id,pool_id:t.pool,protocol_fee_rate:t.protocol_fee_rate,is_pause:t.is_pause,harvest_assets:{harvest_assets_handle:t.harvest_assets.fields.id.id,size:Number(t.harvest_assets.fields.size)},positins:[],lp_token_type:S(s).type_arguments[0],total_supply:t.lp_token_treasury.fields.total_supply.fields.value,liquidity:t.liquidity,max_quota:t.max_quota,status:t.status===1?"STATUS_RUNNING":"STATUS_REBALANCING",quota_based_type:t.quota_based_type.fields.name};return i.positins=t.positions.map(n=>_e.buildPosition(n.fields)),i}}},mo=class{constructor(e){B(this,"_sdk");B(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e="all",t=!1){const{package_id:s}=this._sdk.sdkOptions.ido,i=`${s}_getPoolImmutables`,n=this.getCache(i,t),o={data:[],hasNextPage:!1},a=[];if(n!==void 0&&a.push(...n),a.length===0)try{const c=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${s}::oversubscribe_pool::CreatePoolEvent`},e);c.data.forEach(d=>{const l=d.parsedJson;if(l){const _=U.buildIdoPoolImmutables(l);a.push(_)}}),o.hasNextPage=c.hasNextPage,o.nextCursor=c.nextCursor,this.updateCache(i,a,O)}catch(c){console.log("getPoolImmutables",c)}return o.data=a,o}async getPools(e=[],t=!1){const s=[];let i=[];e.length>0?i=[...e]:(await this.getPoolImmutables("all",t)).data.forEach(a=>{i.push(a.pool_address)});const n=await this._sdk.ClmmSDK.fullClient.batchGetObjects(i,{showType:!0,showContent:!0});for(const o of n){const a=U.buildIdoPool(o);await U.calculatePoolUiPrice(this._sdk,a),s.push(a);const c=`${a.pool_address}_getPoolObject`;this.updateCache(c,a,O)}return s}async getPool(e,t=!0){const s=`${e}_getPoolObject`,i=this.getCache(s,t);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=U.buildIdoPool(n);return await U.calculatePoolUiPrice(this._sdk,o),this.updateCache(s,o),o}async getIdoConfigs(e=!1){var d;const{package_id:t}=this._sdk.sdkOptions.ido,s=`${t}_getInitEvent`,i=this.getCache(s,e);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showPreviousTransaction:!0}}),o=is(n),a=(d=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({Transaction:o}))==null?void 0:d.data,c={pools_id:"",admin_cap_id:"",package_version_id:""};return a.length>0&&(a.forEach(l=>{console.log("item: ",l);const _=l.parsedJson;if(_)switch(S(l.type).full_address){case`${t}::config::InitConfigEvent`:c.admin_cap_id=_.admin_cap_id,c.package_version_id=_.package_version_id;break;case`${t}::factory::InitFactoryEvent`:c.pools_id=_.pools_id;break}}),this.updateCache(s,c,O)),c}async getPurchaseInfo(e,t,s=!0){const i=`${e}_${t}_getPurchaseInfo`,n=this.getCache(i,s);if(n)return n;try{const o=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"address",value:t}}),a=U.buildPurchaseInfo(x(o));return this.updateCache(i,a,ye),a}catch{return}}async getLockNFT(e,t=!1){const s=`${e}_getLockNFT`,i=this.getCache(s,t);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(!n.error)return At(n)}async getLockNFTList(e){var n;const{clmm_pool:t}=this._sdk.ClmmSDK.sdkOptions,{ido:s}=this._sdk.sdkOptions,i=[];try{const o=(n=await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{filter:{StructType:`${s.package_id}::lock::LockedNFT<${t.package_id}::position::Position>`},options:{showContent:!0}}))==null?void 0:n.data;for(const a of o){const c=x(a);if(c){const d=c.nft.fields,l={locked_at:Number(c.locked_at),lock_duration:Number(c.lock_duration),lock_nft_id:c.id.id,type:c.nft.type,...d};l.end_lock_time=l.locked_at+l.lock_duration,l.coin_type_a=S(d.coin_type_a.fields.name).full_address,l.coin_type_b=S(d.coin_type_b.fields.name).full_address,l.id=d.id.id,l.tick_lower_index=Se(BigInt(d.tick_lower_index.fields.bits)),l.tick_upper_index=Se(BigInt(d.tick_upper_index.fields.bits)),i.push(l)}}return i}catch(o){return console.log("getLockNFTList:",o),[]}}async creatPool(e){const{ido:t}=this.sdk.sdkOptions;Ws(F(e.coin_type_sale),F(e.coin_type_raise))&&(e.price_min=u(1).div(e.price_max).toNumber(),e.price_max=u(1).div(e.price_min).toNumber());const i=W.priceRealToFix(Number(e.price),e.sale_decimals,e.raise_decimals),n=R.priceToSqrtPriceX64(u(e.price_min),e.sale_decimals,e.raise_decimals).toString(),o=R.priceToSqrtPriceX64(u(e.price_max),e.sale_decimals,e.raise_decimals).toString(),a=new C,c=u(e.total_supply).add(u(e.total_supply).mul(u(e.liquidity_injection_ratio))).toNumber(),d=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,e.coin_type_sale),l=X.buildCoinForAmount(a,d,BigInt(c),e.coin_type_sale,!1),_=[a.pure(m(t).admin_cap_id),a.pure(m(t).package_version_id),a.pure(m(t).pools_id),a.pure(F(e.owner)),a.pure(u(i).mul(nt).toString()),a.pure(e.total_supply),a.pure(e.complete_raise_limit),a.pure(e.min_purchase_amount),a.pure(e.max_purchase_amount),a.pure(e.start_time),a.pure(e.purchase_duration),a.pure(e.lock_up_duration),a.pure((e.liquidity_injection_ratio*qs).toString()),a.pure(n),a.pure(o),a.pure(e.tick_spacing.toString()),l.targetCoin,a.pure(e.protection_hard_cap.toString()),a.pure(v)],h=[e.coin_type_sale,e.coin_type_raise];return a.moveCall({target:`${t.published_at}::${uo}::create_oversubscribe_pool`,typeArguments:h,arguments:_}),a}async creatPurchasePayload(e){const{ido:t}=this.sdk.sdkOptions,s=new C,i=await this.getPurchaseInfo(e.purchase_handle,this._sdk.ClmmSDK.senderAddress,!1),n=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,e.coin_type_raise),o=X.buildCoinForAmount(s,n,BigInt(e.raise_amount),e.coin_type_raise,!1),a=[e.coin_type_sale,e.coin_type_raise];let c,d;return i?(d="purchase",c=[s.object(m(t).package_version_id),s.object(e.pool_address),s.object(i.purchase_certificate_id),s.pure(e.raise_amount.toString()),o.targetCoin,s.pure(v)]):(d="create_certificate_and_purchase",c=[s.object(m(t).package_version_id),s.object(e.pool_address),s.pure(e.raise_amount.toString()),o.targetCoin,s.pure(v)]),s.moveCall({target:`${t.published_at}::${Q}::${d}`,typeArguments:a,arguments:c}),s}async redeemPayload(e){const{ido:t}=this.sdk.sdkOptions,s=await this.getPurchaseInfo(e.purchase_handle,this._sdk.ClmmSDK.senderAddress,!1);if(s===void 0)throw Error("get purchase certificate fail");const i=new C,n=[e.coin_type_sale,e.coin_type_raise],o=[i.pure(m(t).package_version_id),i.pure(e.pool_address),i.pure(s.purchase_certificate_id),i.pure(v)];return i.moveCall({target:`${t.published_at}::${Q}::redeem`,typeArguments:n,arguments:o}),i}injectLiquidityPayload(e){const{ido:t}=this.sdk.sdkOptions,{clmm_pool:s}=this.sdk.ClmmSDK.sdkOptions,i=new C,n=[e.coin_type_sale,e.coin_type_raise],o=e.is_reverse?"inject_liquidity_with_reverse_clmm_pool":"inject_liquidity_with_forward_clmm_pool",a=[i.pure(m(t).package_version_id),i.pure(e.pool_address),i.pure(m(s).global_config_id),i.pure(e.clmm_pool_address),i.pure(v)];return i.moveCall({target:`${t.published_at}::${Q}::${o}`,typeArguments:n,arguments:a}),i}unPauseInjectLiquidity(e){const{ido:t}=this.sdk.sdkOptions,{integrate:s,clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions,n=new C;n.moveCall({target:`${s.published_at}::${Js}::unpause_pool`,typeArguments:[e.coin_type_a,e.coin_type_b],arguments:[n.object(m(i).global_config_id),n.object(e.clmm_pool_address)]});const o=[e.coin_type_sale,e.coin_type_raise],a=e.is_reverse?"inject_liquidity_with_reverse_clmm_pool":"inject_liquidity_with_forward_clmm_pool",c=[n.object(m(t).package_version_id),n.object(e.pool_address),n.object(m(i).global_config_id),n.object(e.clmm_pool_address),n.object(v)];return n.moveCall({target:`${t.published_at}::${Q}::${a}`,typeArguments:o,arguments:c}),n}async findClmmPoolForLiquidity(e){let t=null,s=!1;const i=await this.sdk.ClmmSDK.Pool.getPoolImmutables();for(const n of i){if(n.coinTypeA===e.coin_type_sale&&n.coinTypeB===e.coin_type_raise&&Number(n.tickSpacing)===e.tick_spacing){t=await this._sdk.ClmmSDK.Pool.getPool(n.poolAddress);break}if(n.coinTypeA===e.coin_type_raise&&n.coinTypeB===e.coin_type_sale&&Number(n.tickSpacing)===e.tick_spacing){t=await this._sdk.ClmmSDK.Pool.getPool(n.poolAddress),s=!0;break}}return t&&(u(t.current_sqrt_price).lessThanOrEqualTo(e.current_sqrt_price_min)||u(t.current_sqrt_price).greaterThanOrEqualTo(e.current_sqrt_price_max))?(console.log("clmmPool: ",t.poolAddress),{is_reverse:s,clmmPool:null}):{is_reverse:s,clmmPool:t}}withdrawPayload(e){const{ido:t}=this.sdk.sdkOptions,s=new C,i=[e.coin_type_sale,e.coin_type_raise],n=[s.object(m(t).package_version_id),s.object(e.pool_address),s.object(v)];return s.moveCall({target:`${t.published_at}::${Q}::withdraw`,typeArguments:i,arguments:n}),s}updateWhitelistCapPayload(e){const{ido:t}=this.sdk.sdkOptions,s=new C,i=[e.coin_type_sale,e.coin_type_raise];return e.add_whites&&e.add_whites.addresses.length>0&&s.moveCall({target:`${t.published_at}::${Q}::add_white_listed_addresses`,typeArguments:i,arguments:[s.object(m(t).admin_cap_id),s.object(m(t).package_version_id),s.object(e.pool_address),s.makeMoveVec({type:"address",objects:e.add_whites.addresses.map(n=>s.pure(ne(n),"address"))}),s.pure(e.add_whites.protection_limit),s.object(v)]}),e.remove_whites&&e.remove_whites.length>0&&s.moveCall({target:`${t.published_at}::${Q}::remove_white_listed_addresses`,typeArguments:i,arguments:[s.object(m(t).admin_cap_id),s.object(m(t).package_version_id),s.object(e.pool_address),s.makeMoveVec({type:"address",objects:e.remove_whites.map(n=>s.pure(ne(n),"address"))}),s.object(v)]}),e.update_whites&&e.update_whites.forEach(n=>{s.moveCall({target:`${t.published_at}::${Q}::update_white_listed_address`,typeArguments:i,arguments:[s.object(m(t).admin_cap_id),s.object(m(t).package_version_id),s.object(e.pool_address),s.object(n.address),s.pure(n.protection_limit),s.object(v)]})}),s}creatCancelPoolPayload(e){const{ido:t}=this.sdk.sdkOptions,s=new C,i=[e.coin_type_sale,e.coin_type_raise],n=[s.pure(m(t).admin_cap_id),s.pure(m(t).package_version_id),s.pure(e.pool_address),s.pure(v)];return s.moveCall({target:`${t.published_at}::${Q}::cancel`,typeArguments:i,arguments:n}),s}updatePoolOwnerPayload(e,t){const{ido:s}=this.sdk.sdkOptions;t=t===void 0?new C:t;const i=[e.coin_type_sale,e.coin_type_raise],n=[t.object(m(s).admin_cap_id),t.object(m(s).package_version_id),t.object(e.pool_address),t.object(e.new_owner),t.object(v)];return t.moveCall({target:`${s.published_at}::${Q}::update_pool_owner`,typeArguments:i,arguments:n}),t}updatePoolDuractionPayload(e,t){const{ido:s}=this.sdk.sdkOptions;t=t===void 0?new C:t;const i=[e.coin_type_sale,e.coin_type_raise],n=[t.object(m(s).admin_cap_id),t.object(m(s).package_version_id),t.object(e.pool_address),t.pure(e.start_time),t.pure(e.purchase_duration),t.pure(e.lock_duration),t.object(v)];return t.moveCall({target:`${s.published_at}::${Q}::update_pool_duration`,typeArguments:i,arguments:n}),t}updateProtectionHardCapPayload(e,t){const{ido:s}=this.sdk.sdkOptions;t=t===void 0?new C:t;const i=[e.coin_type_sale,e.coin_type_raise],n=[t.object(m(s).admin_cap_id),t.object(m(s).package_version_id),t.object(e.pool_address),t.pure(e.protection_hard_cap),t.object(v)];return t.moveCall({target:`${s.published_at}::${Q}::update_protection_hard_cap`,typeArguments:i,arguments:n}),t}unlockNftPayload(e){const{ido:t}=this.sdk.sdkOptions,s=new C,i=[e.nft_type],n=[s.pure(e.lock_nft_id),s.pure(v)];return s.moveCall({target:`${t.published_at}::lock::unlock_nft`,typeArguments:i,arguments:n}),s}async isAdminCap(e){const{ido:t}=this._sdk.sdkOptions,s=`${t.package_id}_${e}_isAdminCap`,i=this.getCache(s);if(i)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:m(t).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(n);const o=Ue(n),a=kt(n);let c=!1;return a&&o&&S(o).source_address===`${t.package_id}::config::AdminCap`&&(c=F(a.AddressOwner)===F(e)),this.updateCache(s,c,O),c}async getWhiteProtectionLimit(e,t,s=!0){const i=`${e}_${t}_getWhiteProtectionLimit`,n=this._sdk.getCache(i,s);if(n)return n;try{const o=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"address",value:t}});if(o&&o.data){const a=x(o);return this._sdk.updateCache(i,a.value),a.value}return}catch{return}}async getWhiteList(e,t){var i;const s={type:"address",value:t};try{const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:s}),o=x(n);if(console.log(o),o)return(i=o==null?void 0:o.value)==null?void 0:i.fields}catch{}return{safe_limit_amount:"0",safe_purchased_amount:"0"}}async getAdminAddress(){const{ido:e}=this._sdk.sdkOptions,t=`${m(e).admin_cap_id}_getAdminAddress`,s=this.getCache(t);if(s)return s;const i=await this._sdk.ClmmSDK.fullClient.getObject({id:m(e).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(i);const n=Ue(i),o=kt(i);if(o&&n&&S(n).source_address===`${e.package_id}::config::AdminCap`){const c=F(o.AddressOwner);return this.updateCache(t,c,O),c}return""}updateCache(e,t,s=O){let i=this._cache[e];i?(i.overdueTime=V(s),i.value=t):i=new ke(t,V(s)),this._cache[e]=i}getCache(e,t=!1){const s=this._cache[e];if(!t&&(s!=null&&s.isValid()))return s.value;delete this._cache[e]}},ho=class{constructor(e){B(this,"_sdk");B(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getOwnerVeNFT(e,t=!0){const{xtoken:s}=this.sdk.sdkOptions,i=`${e}_getLockUpManagerEvent`,n=this.getCache(i,t);if(n!==void 0)return n;let o;const a=`${s.package_id}::xtoken::VeNFT`;return(await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0,showDisplay:!0},filter:{StructType:a}})).data.forEach(d=>{const l=S(Te(d)).source_address;if(l===a&&d.data&&d.data.content){const{fields:_}=d.data.content;o={...jt(d),id:_.id.id,index:_.index,type:l,xtoken_balance:_.xtoken_balance},this.updateCache(i,o,O)}}),o}async getOwnerLockTokens(e){const{xtoken:t}=this.sdk.sdkOptions,s=[],i=`${t.package_id}::lock_coin::LockedCoin<${this.buileTokenCoinType()}>`,n=await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0},filter:{StructType:i}});for(const o of n.data)if(S(Te(o)).source_address===i&&o.data){const c=Oe.buildLockToken(o.data.content),d=await this.getLockXToken(c.id);d&&(c.xtoken_amount=d.xtoken_amount),s.push(c)}return s}async getLockToken(e){var s;const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0}});if((s=t.data)!=null&&s.content){const i=Oe.buildLockToken(t.data.content),n=await this.getLockXToken(i.id);return n&&(i.xtoken_amount=n.xtoken_amount),i}}async getOwnerTokenCoins(e){return await this._sdk.ClmmSDK.getOwnerCoinAssets(e,this.buileTokenCoinType())}mintVeNFTPayload(){const{xtoken:e}=this.sdk.sdkOptions,t=new C;return t.moveCall({target:`${e.published_at}::${Re}::mint_venft`,typeArguments:[],arguments:[t.pure(m(e).xtoken_manager_id)]}),t}async convertPayload(e){const{xtoken:t}=this.sdk.sdkOptions,s=new C,i=this.buileTokenCoinType(),n=await X.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,s,BigInt(e.amount),i);return e.venft_id===void 0?s.moveCall({target:`${t.published_at}::${Re}::mint_and_convert`,typeArguments:[],arguments:[s.object(m(t).lock_manager_id),s.object(m(t).xtoken_manager_id),n,s.pure(e.amount)]}):s.moveCall({target:`${t.published_at}::${Re}::convert`,typeArguments:[],arguments:[s.object(m(t).lock_manager_id),s.object(m(t).xtoken_manager_id),n,s.pure(e.amount),s.pure(e.venft_id)]}),s}redeemLockPayload(e){const{xtoken:t}=this.sdk.sdkOptions,s=new C;return s.moveCall({target:`${t.published_at}::${Re}::redeem_lock`,typeArguments:[],arguments:[s.pure(m(t).lock_manager_id),s.pure(m(t).xtoken_manager_id),s.pure(e.venft_id),s.pure(e.amount),s.pure(e.lock_day),s.pure(v)]}),s}redeemPayload(e){const{xtoken:t}=this.sdk.sdkOptions,s=new C;return s.moveCall({target:`${t.published_at}::${Re}::redeem`,typeArguments:[],arguments:[s.pure(m(t).lock_manager_id),s.pure(m(t).xtoken_manager_id),s.pure(e.venft_id),s.pure(e.lock_id),s.pure(v)]}),s}redeemDividendPayload(e,t){const{xtoken_dividends:s}=this.sdk.sdkOptions,i=new C;return t.forEach(n=>{i.moveCall({target:`${s.published_at}::${ft}::redeem`,typeArguments:[n],arguments:[i.object(m(s).dividend_manager_id),i.object(e)]})}),i}redeemDividendV2Payload(e,t,s){const{xtoken_dividends:i}=this.sdk.sdkOptions;let n=new C;return t.filter(a=>s.includes(a)).length>0&&(n=this.redeemDividendXTokenPayload(e,n)),t.forEach(a=>{s.includes(a)||n.moveCall({target:`${i.published_at}::${ft}::redeem_v2`,typeArguments:[a],arguments:[n.object(m(i).dividend_manager_id),n.object(e),n.object(v)]})}),n}redeemDividendXTokenPayload(e,t){const{xtoken_dividends:s,xtoken:i}=this.sdk.sdkOptions,{xtoken_manager_id:n,lock_manager_id:o}=m(i),{dividend_manager_id:a}=m(s);return t=t===void 0?new C:t,t.moveCall({target:`${s.published_at}::${ft}::redeem_xtoken`,typeArguments:[],arguments:[t.object(o),t.object(n),t.object(a),t.object(e),t.object(v)]}),t}buileTokenCoinType(){return`${this.sdk.sdkOptions.token_faucet.package_id}::token::TOKEN`}buileXTokenCoinType(e=this._sdk.sdkOptions.xtoken.package_id,t="xtoken",s="XTOKEN"){return`${e}::${t}::${s}`}cancelRedeemPayload(e){const{xtoken:t}=this.sdk.sdkOptions,s=new C;return s.moveCall({target:`${t.published_at}::${Re}::cancel_redeem_lock`,typeArguments:[],arguments:[s.pure(m(t).lock_manager_id),s.pure(m(t).xtoken_manager_id),s.pure(e.venft_id),s.pure(e.lock_id),s.pure(v)]}),s}async getInitConfigs(){var a,c;const{package_id:e}=this.sdk.sdkOptions.xtoken,t=`${e}_getInitFactoryEvent`,s=this.getCache(t);if(s!==void 0)return s;const i=(a=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::xtoken::InitEvent`}))==null?void 0:a.data,n={xtoken_manager_id:"",lock_manager_id:"",lock_handle_id:""};i.length>0&&i.forEach(d=>{const l=d.parsedJson;l&&(n.xtoken_manager_id=l.xtoken_manager)});const o=(c=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::locking::InitializeEvent`}))==null?void 0:c.data;return o.length>0&&o.forEach(d=>{const l=d.parsedJson;l&&(n.lock_manager_id=l.lock_manager)}),n.lock_handle_id=(await this.getLockUpManager(n.lock_manager_id)).lock_infos.lock_handle_id,this.updateCache(t,n,O),n}async getLockUpManager(e=m(this.sdk.sdkOptions.xtoken).lock_manager_id,t=!1){const s=`${e}_getLockUpManagerEvent`,i=this.getCache(s,t);if(i!==void 0)return i;const n=await this.sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),o=Oe.buildLockUpManager(x(n));return this.updateCache(s,o,O),o}async getLockInfoHandle(e){const t=`${e}_getLockInfoHandle`,s=this.getCache(t);if(s!==void 0)return s;let i="";const n=await this.sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),o=x(n);return o&&(i=o.lock_infos.fields.id.id,this.updateCache(t,i,O)),i}async getDividendConfigs(){var o;const{package_id:e}=this.sdk.sdkOptions.xtoken_dividends,t=`${e}_getDividendManagerEvent`,s=this.getCache(t);if(s!==void 0)return s;const i=(o=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${e}::dividend::InitEvent`}))==null?void 0:o.data,n={dividend_manager_id:"",dividend_admin_id:"",dividend_settle_id:""};return i.length>0&&i.forEach(a=>{const c=a.parsedJson;c&&(n.dividend_manager_id=c.manager_id,n.dividend_admin_id=c.admin_id,n.dividend_settle_id=c.settle_id,this.updateCache(t,n,O))}),n}async getDividendManager(e=!1){const{dividend_manager_id:t}=m(this.sdk.sdkOptions.xtoken_dividends),s=`${t}_getDividendManager`,i=this.getCache(s,e);if(i!==void 0)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=x(n),a=Oe.buildDividendManager(o);return this.updateCache(s,a,O),a}async getXcetusManager(e=!0){const{xtoken_manager_id:t}=m(this.sdk.sdkOptions.xtoken),s=`${t}_getXcetusManager`,i=this.getCache(s,e);if(i)return i;const n=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=x(n),a={id:o.id.id,index:Number(o.index),has_venft:{handle:o.has_venft.fields.id.id,size:o.has_venft.fields.size},nfts:{handle:o.nfts.fields.id.id,size:o.nfts.fields.size},total_locked:o.total_locked,treasury:o.treasury.fields.total_supply.fields.value};return this.updateCache(s,a),a}async getVeNFTDividendInfo(e,t){try{const s=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),i=x(s);return Oe.buildVeNFTDividendInfo(i)}catch{return}}async redeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const s=await this.getLockUpManager(),i=u(ee).mul(u(s.max_lock_day).sub(u(t))).mul(u(s.max_percent_numerator).sub(u(s.min_percent_numerator))).div(u(s.max_lock_day).sub(u(s.min_lock_day))),n=u(ee).mul(u(s.max_percent_numerator)).sub(i).div(u(ct)).div(ee);return{amountOut:u(n).mul(u(e)).round().toString(),percent:n.toString()}}async reverseRedeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const s=await this.getLockUpManager(),i=u(ee).mul(u(s.max_lock_day).sub(u(t))).mul(u(s.max_percent_numerator).sub(u(s.min_percent_numerator))).div(u(s.max_lock_day).sub(u(s.min_lock_day))),n=u(ee).mul(u(s.max_percent_numerator)).sub(i).div(u(ct)).div(ee);return{amountOut:u(e).div(n).toFixed(0,$.ROUND_UP),percent:n.toString()}}async getLockXToken(e){const{lock_handle_id:t}=m(this._sdk.sdkOptions.xtoken),s=`${e}_getXTokenAmount`,i=this.getCache(s);if(i)return i;try{const n=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:t,name:{type:"0x2::object::ID",value:e}}),o=x(n);if(o){const a=o.value.fields.value.fields;return this.updateCache(s,a,O),a}}catch{}}async getVeNftAmount(e,t){try{const s=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),i=x(s);if(i){const{lock_amount:n,xtoken_amount:o}=i.value.fields.value.fields;return{lock_amount:n,xtoken_amount:o}}}catch{}return{lock_amount:"0",xtoken_amount:"0"}}async getPhaseDividendInfo(e,t=!1){const i=(await this.getDividendManager()).dividends.id,n=`${i}_${e}_getPhaseDividendInfo`,o=this._sdk.getCache(n,t);if(o)return o;try{const a=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:i,name:{type:"u64",value:e}}),c=x(a),d=c.value.fields.value.fields,l=d.redeemed_num.fields.contents.map(k=>({name:k.fields.key.fields.name,value:k.fields.value})),_=d.bonus_types.map(k=>k.fields.name),h=d.bonus.fields.contents.map(k=>({name:k.fields.key.fields.name,value:k.fields.value})),g={id:Ve(a),phase:c.name,settled_num:d.settled_num,register_time:d.register_time,redeemed_num:l,is_settled:d.is_settled,bonus_types:_,bonus:h,phase_end_time:""};return this.updateCache(n,g),g}catch{}}updateCache(e,t,s=ye){let i=this._cache[e];i?(i.overdueTime=V(s),i.value=t):i=new ke(t,V(s)),this._cache[e]=i}getCache(e,t=!1){const s=this._cache[e];if(!t&&(s!=null&&s.isValid()))return s.value;delete this._cache[e]}},go=class{constructor(e){B(this,"_sdk");B(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async addMasterLiquidity(e){var I,D;const{liquidity_stratefy:t}=this._sdk.sdkOptions,{clmm_pool:s}=this._sdk.ClmmSDK.sdkOptions,i=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress);let n=u(0),o=u(0);const a=[],c=[],d=[],l=[],_=[];e.liquidity_bins.forEach((w,K)=>{const ue=e.amounts_a[K],J=e.amounts_b[K],oe=e.bins_fix_amount_a[K];n=n.add(ue),o=o.add(J),a.push(ue),c.push(J),d.push(He(BigInt(w.tick_lower)).toString()),l.push(He(BigInt(w.tick_upper)).toString()),_.push(oe)});const h=[e.coinTypeA,e.coinTypeB],g=new C,k=(I=X.buildAddLiquidityFixTokenCoinInput(g,!e.fix_amount_a,n.toString(),e.slippage,e.coinTypeA,i,!1))==null?void 0:I.targetCoin,T=(D=X.buildAddLiquidityFixTokenCoinInput(g,e.fix_amount_a,o.toString(),e.slippage,e.coinTypeB,i,!1))==null?void 0:D.targetCoin;return lo(e)?g.moveCall({target:`${t.published_at}::router::increase_liquidity`,typeArguments:h,arguments:[g.object(m(t).master_manger_id),g.object(e.master_address),g.object(m(s).global_config_id),g.object(e.pool_address),k,T,g.makeMoveVec({type:"u64",objects:a.map(w=>g.pure(w,"u64"))}),g.makeMoveVec({type:"u64",objects:c.map(w=>g.pure(w,"u64"))}),g.makeMoveVec({type:"bool",objects:_.map(w=>g.pure(w,"bool"))}),g.object(v)]}):g.moveCall({target:`${t.published_at}::router::create_master_liquidity`,typeArguments:h,arguments:[g.object(m(t).master_manger_id),g.object(m(s).global_config_id),g.object(e.pool_address),k,T,g.makeMoveVec({type:"u32",objects:d.map(w=>g.pure(w,"u32"))}),g.makeMoveVec({type:"u32",objects:l.map(w=>g.pure(w,"u32"))}),g.makeMoveVec({type:"u64",objects:a.map(w=>g.pure(w,"u64"))}),g.makeMoveVec({type:"u64",objects:c.map(w=>g.pure(w,"u64"))}),g.makeMoveVec({type:"bool",objects:_.map(w=>g.pure(w,"bool"))}),g.pure(e.strategy),g.pure(He(BigInt(e.tick_lower)).toString()),g.pure(He(BigInt(e.tick_upper)).toString()),g.object(v)]}),g}buildMasterNFTType(){return`${this._sdk.sdkOptions.liquidity_stratefy.package_id}::master_liquidity::MasterLiquidity`}async getMasterNFTList(e,t=[]){const s=[],i=await this._sdk.ClmmSDK.fullClient.getOwnedObjectsByPage(e,{options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0},filter:{Package:this._sdk.sdkOptions.liquidity_stratefy.package_id}}),n=t.length>0;for(const o of i.data)if(S(o.data.type).full_address===this.buildMasterNFTType()){const c=le.buildMasterNFT(o);if(c){const d=`${c.id}_masterNFT`;this.updateCache(d,c,O),n?t.includes(c.pool_id)&&s.push(c):s.push(c)}}return s}async getMasterNFT(e,t=!1){const s="$masterId}_masterNFT",i=this.getCache(s,t);if(i)return i;try{const n=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(S(n.data.type).full_address===this.buildMasterNFTType()){const a=le.buildMasterNFT(n);return a&&this.updateCache(s,a,O),a}}catch(n){console.log(n)}}async fetchMasterPositionInfos(e){var c;const t={},{clmm_pool:s,integrate:i,simulationAccount:n}=this.sdk.ClmmSDK.sdkOptions,o=new C;return e.forEach(d=>{d.position_ids.forEach(l=>{const _=[d.coinTypeA,d.coinTypeB],h=[o.object(m(s).global_config_id),o.object(d.pool_id),o.object(l)];o.moveCall({target:`${i.published_at}::${Le}::fetch_position_fees`,arguments:h,typeArguments:_}),o.moveCall({target:`${i.published_at}::${Le}::fetch_position_rewards`,arguments:[...h,o.object(v)],typeArguments:_})})}),(c=(await this.sdk.ClmmSDK.fullClient.devInspectTransactionBlock({transactionBlock:o,sender:n.address})).events)==null||c.forEach(d=>{const{parsedJson:l}=d,{position_id:_}=l;let h=t[_];switch(h===void 0&&(h={position_id:_,feeOwedA:"0",feeOwedB:"0",rewarders:[]},t[_]=h),S(d.type).name){case"FetchPositionFeesEvent":h.feeOwedA=l.fee_owned_a,h.feeOwedB=l.fee_owned_b;break;case"FetchPositionRewardsEvent":h.rewarders=l.data;break}}),t}async getLiquidityStrategyConfigs(e=!1){const{package_id:t}=this._sdk.sdkOptions.liquidity_stratefy,s=`${t}_getLiquidityStrategyConfigst`,i=this.getCache(s,e);if(i!==void 0)return i;const n=(await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${t}::master_liquidity::MasterLiquidityManagerCreatedEvent`})).data,o={master_manger_id:"",master_liquidity_handle:""};if(n.length>0){for(const a of n){const c=a.parsedJson;o.master_manger_id=c.id;const d=await this._sdk.ClmmSDK.fullClient.getObject({id:c.id,options:{showContent:!0}}),l=x(d);o.master_liquidity_handle=l.position_maps.fields.id.id;break}this.updateCache(s,o,O)}return o}removeMasterLiquidity(e){const{clmm_pool:t}=this.sdk.ClmmSDK.sdkOptions,{liquidity_stratefy:s}=this.sdk.sdkOptions,i=new C,n=[e.coinTypeA,e.coinTypeB];this.collectReward({coinTypeA:e.coinTypeA,coinTypeB:e.coinTypeB,collect_fee:!1,rewarder_coin_types:e.rewarder_coin_types,master_address:e.master_address,pool_address:e.pool_address},i);const o=[i.object(m(s).master_manger_id),i.object(e.pool_address),i.object(e.master_address),i.object(m(t).global_config_id),i.makeMoveVec({type:"u128",objects:e.delta_liquidities.map(a=>i.pure(a,"u128"))}),i.makeMoveVec({type:"u64",objects:e.min_amounts_a.map(a=>i.pure(a,"u64"))}),i.makeMoveVec({type:"u64",objects:e.min_amounts_b.map(a=>i.pure(a,"u64"))}),i.object(v)];return i.moveCall({target:`${s.published_at}::${tt}::remove_liquidity`,typeArguments:n,arguments:o}),i}closeMasterLiquidity(e){const{clmm_pool:t}=this.sdk.ClmmSDK.sdkOptions,{liquidity_stratefy:s}=this.sdk.sdkOptions,i=new C,n=[e.coinTypeA,e.coinTypeB];return this.collectReward({coinTypeA:e.coinTypeA,coinTypeB:e.coinTypeB,collect_fee:!1,rewarder_coin_types:e.rewarder_coin_types,master_address:e.master_address,pool_address:e.pool_address},i),i.moveCall({target:`${s.published_at}::${tt}::close_master_liquidity`,typeArguments:n,arguments:[i.object(m(s).master_manger_id),i.object(e.master_address),i.object(m(t).global_config_id),i.object(e.pool_address),i.makeMoveVec({type:"u64",objects:e.min_amounts_a.map(o=>i.pure(o,"u64"))}),i.makeMoveVec({type:"u64",objects:e.min_amounts_b.map(o=>i.pure(o,"u64"))}),i.object(v)]}),i}collectFee(e,t){const{clmm_pool:s}=this.sdk.ClmmSDK.sdkOptions,{liquidity_stratefy:i}=this.sdk.sdkOptions;t=t===void 0?new C:t;const n=[e.coinTypeA,e.coinTypeB],o=[t.object(m(i).master_manger_id),t.object(e.master_address),t.object(m(s).global_config_id),t.object(e.pool_address)];return t.moveCall({target:`${i.published_at}::${tt}::collect_fee`,typeArguments:n,arguments:o}),t}collectReward(e,t){const{clmm_pool:s}=this.sdk.ClmmSDK.sdkOptions,{liquidity_stratefy:i}=this.sdk.sdkOptions;return t=t===void 0?new C:t,e.collect_fee&&this.collectFee({...e},t),e.rewarder_coin_types.forEach(n=>{const o=[e.coinTypeA,e.coinTypeB,n];if(t){const a=[t.object(m(i).master_manger_id),t.object(e.master_address),t.object(m(s).global_config_id),t.object(e.pool_address),t.object(m(s).global_vault_id),t.object(v)];t.moveCall({target:`${i.published_at}::${tt}::collect_reward`,typeArguments:o,arguments:a})}}),t}updateCache(e,t,s=ye){let i=this._cache[e];i?(i.overdueTime=V(s),i.value=t):i=new ke(t,V(s)),this._cache[e]=i}getCache(e,t=!1){const s=this._cache[e],i=s==null?void 0:s.isValid();if(!t&&i)return s.value;i||delete this._cache[e]}},fo=class{constructor(e){B(this,"_sdk");B(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}buildCoinInput(e,t,s,i,n){const{selectedCoins:o,remainingCoins:a}=Ae.selectCoinAssetGreaterThanOrEqual(t,BigInt(i)),c=Ae.calculateTotalBalance(o);if(c<BigInt(i))throw new Error(`The amount(${c}) is Insufficient balance for ${s} , expect ${i} `);const d=c-BigInt(i);let l;if(Ae.isSuiCoin(s))l=e.splitCoins(e.gas,[e.pure(i)]);else{const[_,...h]=o.map(g=>g.coinObjectId);l=e.object(_),h.length>0?n?e.mergeCoins(l,[...h.map(g=>e.object(g)),n]):e.mergeCoins(l,[...h.map(g=>e.object(g))]):n&&e.mergeCoins(l,[n])}return{selectedUnusedAmount:d,coinInput:l,remainingCoins:a}}async deposit(e){var d,l;console.log("1110 deposit 参数: ",{params:e});const{vaults:t}=this._sdk.sdkOptions,{clmm_pool:s}=this._sdk.ClmmSDK.sdkOptions,i=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress),n=new C;let o,a;if(e.swapParams){const _=await this.handleDepositSwap(e,n,i);o=_.primaryCoinAInputs,a=_.primaryCoinBInputs}else o=(d=X.buildAddLiquidityFixTokenCoinInput(n,!e.fix_amount_a,e.amount_a,e.slippage,e.coinTypeA,i,!1))==null?void 0:d.targetCoin,a=(l=X.buildAddLiquidityFixTokenCoinInput(n,e.fix_amount_a,e.amount_b,e.slippage,e.coinTypeB,i,!1))==null?void 0:l.targetCoin;const c=e.rewarder_coin_types?e.rewarder_coin_types.length:0;if(c>0){const _=["deposit_with_one","deposit_with_two","deposit_with_three"];n.moveCall({target:`${t.published_at}::${yt}::${_[c-1]}`,typeArguments:[e.coinTypeA,e.coinTypeB,...e.rewarder_coin_types,e.lp_token_type],arguments:[n.object(m(t).vaults_manager_id),n.object(e.vault_id),n.object(m(s).global_config_id),n.object(e.clmm_pool),n.object(m(s).global_vault_id),o,a,n.pure(e.amount_a),n.pure(e.amount_b),n.pure(e.fix_amount_a),n.object(v)]})}else n.moveCall({target:`${t.published_at}::${yt}::deposit`,typeArguments:[e.coinTypeA,e.coinTypeB,e.lp_token_type],arguments:[n.object(m(t).vaults_manager_id),n.object(e.vault_id),n.object(m(s).global_config_id),n.object(e.clmm_pool),o,a,n.pure(e.amount_a),n.pure(e.amount_b),n.pure(e.fix_amount_a),n.object(v)]});return n}async handleDepositSwap(e,t,s){const{clmm_pool:i,integrate:n}=this._sdk.ClmmSDK.sdkOptions,{swap_amount:o,a2b:a,route_obj:c}=e.swapParams,d=a?e.coinTypeA:e.coinTypeB,l=X.buildCoinForAmount(t,s,BigInt(o),d,!1),_=BigInt(l.tragetCoinAmount)-BigInt(o),h=X.buildCoinForAmount(t,s,0n,a?e.coinTypeB:e.coinTypeA,!1);let g=[];if(c){const w=await X.buildAggregatorSwapReturnCoins(this._sdk.ClmmSDK,c,l,h,"",e.slippage,t);g=a?[w.fromCoin,w.toCoin]:[w.toCoin,w.fromCoin],(h.isMintZeroCoin||h.originalSplitedCoin===void 0)&&t.transferObjects([h.targetCoin],t.pure(this._sdk.ClmmSDK.senderAddress))}else{const w=Ut.getDefaultSqrtPriceLimit(a).toString();g=t.moveCall({target:`${n.published_at}::${Vt}::swap`,typeArguments:[e.coinTypeA,e.coinTypeB],arguments:[t.object(m(i).global_config_id),t.object(e.clmm_pool),a?l.targetCoin:h.targetCoin,a?h.targetCoin:l.targetCoin,t.pure(a),t.pure(!0),t.pure(o),t.pure(w),t.pure(!1),t.object(v)]})}let k,T;const I=g[0],D=g[1];if(a){const w=BigInt(e.amount_a)-_;Ae.isSuiCoin(d)?(t.transferObjects([I],t.pure(this._sdk.ClmmSDK.senderAddress)),k=t.splitCoins(t.gas,[t.pure(e.amount_a)])):w>0n?k=this.buildCoinInput(t,l.remainCoins,d,w,I).coinInput:k=I,T=D}else{k=I;const w=BigInt(e.amount_b)-_;Ae.isSuiCoin(d)?(t.transferObjects([D],t.pure(this._sdk.ClmmSDK.senderAddress)),T=t.splitCoins(t.gas,[t.pure(e.amount_b)])):w>0n?T=this.buildCoinInput(t,l.remainCoins,d,w,D).coinInput:T=D}return{primaryCoinAInputs:k,primaryCoinBInputs:T}}async remove(e){console.log({params:e});const{vaults:t}=this.sdk.sdkOptions,{clmm_pool:s,integrate:i}=this._sdk.ClmmSDK.sdkOptions,n=new C,o=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,e.lp_token_type),a=X.buildCoinForAmount(n,o,BigInt(e.lp_token_amount),e.lp_token_type,!1).targetCoin,c=[e.coinTypeA,e.coinTypeB,e.lp_token_type],d=e.rewarder_coin_types.length;if(d>0){const l=["remove_with_one","remove_with_two","remove_with_three"];n.moveCall({target:`${t.published_at}::${yt}::${l[d-1]}`,typeArguments:[e.coinTypeA,e.coinTypeB,...e.rewarder_coin_types,e.lp_token_type],arguments:[n.object(m(t).vaults_manager_id),n.object(e.vault_id),n.object(m(s).global_config_id),n.object(e.clmm_pool),n.object(m(s).global_vault_id),a,n.pure(e.lp_token_amount),n.pure(e.min_amount_a),n.pure(e.min_amount_b),n.object(v)]})}else{const l=n.moveCall({target:`${t.published_at}::${_o}::remove`,typeArguments:c,arguments:[n.object(m(t).vaults_manager_id),n.object(e.vault_id),n.object(m(s).global_config_id),n.object(e.clmm_pool),a,n.pure(e.lp_token_amount),n.pure(e.min_amount_a),n.pure(e.min_amount_b),n.object(v)]}),_=l[0],h=l[1];if(e.swapParams){const{a2b:g,swap_amount:k,route_obj:T}=e.swapParams;if(T){const I={targetCoin:g?_:h,remainCoins:[],isMintZeroCoin:!1,tragetCoinAmount:""},D={targetCoin:g?h:_,remainCoins:[],isMintZeroCoin:!1,tragetCoinAmount:""};n.transferObjects([g?h:_],n.pure(this._sdk.ClmmSDK.senderAddress));const w=await X.buildAggregatorSwapReturnCoins(this._sdk.ClmmSDK,T,I,D,"",e.slippage,n),K=g?[w.fromCoin,w.toCoin]:[w.toCoin,w.fromCoin];n.transferObjects([K[0],K[1]],n.pure(this._sdk.ClmmSDK.senderAddress))}else{const I=Ut.getDefaultSqrtPriceLimit(g).toString(),D=n.moveCall({target:`${i.published_at}::${Vt}::swap`,typeArguments:[e.coinTypeA,e.coinTypeB],arguments:[n.object(m(s).global_config_id),n.object(e.clmm_pool),_,h,n.pure(g),n.pure(!0),n.pure(k),n.pure(I),n.pure(!0),n.object(v)]});n.transferObjects([D[0],D[1]],n.pure(this._sdk.ClmmSDK.senderAddress))}}else n.transferObjects([_,h],n.pure(this._sdk.ClmmSDK.senderAddress))}return n}async getVaultList(e="all"){const{vaults:t}=this._sdk.sdkOptions,s=await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${t.package_id}::vaults::CreateEvent`},e),i=s.data.map(a=>a.parsedJson.id),n=await this._sdk.ClmmSDK.fullClient.batchGetObjects(i,{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}),o=[];return n.forEach(a=>{const c=_e.buildPool(a);c&&(this.savePoolToCache(c),o.push(c))}),s.data=o,s}savePoolToCache(e){const t=`${e.id}_mirrorPool`;this.updateCache(t,e,O)}readPoolFromCache(e,t=!1){const s=`${e}_mirrorPool`;return this.getCache(s,t)}async calculateMaxAvailable(e){var I;const{integrate:t,simulationAccount:s}=this.sdk.ClmmSDK.sdkOptions,i=new C,n=R.tickIndexToSqrtPriceX64(e.lowerTick),o=R.tickIndexToSqrtPriceX64(e.upperTick),a=new P(e.curSqrtPrice),c=re.getCoinAmountFromLiquidity(new P(e.input_amount),a,n,o,!1),d=[e.coinTypeA,e.coinTypeB];i.moveCall({target:`${t.published_at}::${Le}::calculate_swap_result`,arguments:[i.object(e.clmm_pool),i.pure(!0),i.pure(!0),i.pure(c.coinA.toString())],typeArguments:d}),i.moveCall({target:`${t.published_at}::${Le}::calculate_swap_result`,arguments:[i.object(e.clmm_pool),i.pure(!1),i.pure(!0),i.pure(c.coinB.toString())],typeArguments:d});const _=(I=(await this.sdk.ClmmSDK.fullClient.devInspectTransactionBlock({transactionBlock:i,sender:s.address})).events)==null?void 0:I.filter(D=>S(D.type).name==="CalculatedSwapResultEvent");if(_.length===0)return null;const h=_[0].parsedJson.data,g=_[1].parsedJson.data,k=u(c.coinB.toString()).add(h.amount_out),T=u(c.coinA.toString()).add(g.amount_out);return{maxAmountB:k,maxAmountA:T}}async calculateRemoveSwapAmount(e){const{ratioA:t,ratioB:s}=_e.calculateDepositRatio(e.lowerTick,e.upperTick,new P(e.curSqrtPrice)),i=u(e.receive_amount).mul(e.fix_amount_a?t:s),n=u(e.receive_amount).sub(i);console.log({receiveAmount:i,otherReceiveAmount:n});const o=re.estLiquidityAndcoinAmountFromOneAmounts(e.lowerTick,e.upperTick,new P(i.toFixed(0)),e.fix_amount_a,!1,.2,new P(e.curSqrtPrice)),a=e.fix_amount_a?o.coinAmountB.toString():o.coinAmountA.toString();console.log({otherSideAmount:a});const c=!e.fix_amount_a,d=await this.clmmPreSwap(e.clmm_pool,e.curSqrtPrice,c,u(a),e.coinTypeA,e.coinTypeB,!0,e.use_route);console.log({data:d});const l=d.amount_in&&d.fee_amount?new P(d.amount_in).add(new P(d.fee_amount)).toString():d.amount_in,_=d.amount_out,{is_exceed:h}=d;return{swapInAmount:l,swapOutAmount:_,liquidity:o.liquidityAmount.toString(),is_exceed:h,routeObj:d.route_obj}}async calculateDepositSwapAmount(e,t=!1){const s=R.sqrtPriceX64ToTickIndex(new P(e.curSqrtPrice));console.log("1110 calculateDepositSwapAmount params: ",{...e,currentTick:s,adjustBestAmount:t});const{ratioA:i,ratioB:n}=_e.calculateDepositRatio(e.lowerTick,e.upperTick,new P(e.curSqrtPrice)),o=u(e.input_amount).mul(e.fix_amount_a?i:n);let a=u(e.input_amount).sub(o);console.log("1110 ",{fixAmount:o,swapAmount:a});const c=e.fix_amount_a;if(a.toFixed(0)==="0")return null;const d=s<e.lowerTick||s>e.upperTick,l={clmm_pool:e.clmm_pool,curSqrtPrice:e.curSqrtPrice,a2b:c,amount_a:c?new $(e.input_amount):new $(0),amount_b:c?new $(0):new $(e.input_amount),amount_left:c?new $(a.toFixed(0)):new $(0),amount_right:c?new $(e.input_amount):new $(a.toFixed(0)),lowerTick:e.lowerTick,upperTick:e.upperTick,tick_spacing:2,coinTypeA:e.coinTypeA,coinTypeB:e.coinTypeB,useRoute:e.use_route};let _=t?await this.calculateRebalance(l):await this.clmmPreSwap(e.clmm_pool,e.curSqrtPrice,c,a,e.coinTypeA,e.coinTypeB,!0,e.use_route),h=_.after_sqrt_price;const g=R.sqrtPriceX64ToTickIndex(new P(h));console.log("1110 首次计算 结果: ",{..._,currentTick:g},null,2);const k=g<e.lowerTick||g>e.upperTick;if(d!==k&&!t&&g<=e.upperTick){console.log("1110 区间发生变化, 再次进行swap: ");const{ratioA:J,ratioB:oe}=_e.calculateDepositRatio(e.lowerTick,e.upperTick,new P(h));console.log("1110 ",{newAfterRatioA:J,newAfterRatioB:oe}),a=u(e.input_amount).sub(u(e.input_amount).mul(e.fix_amount_a?J:oe)),l.amount_left=c?new $(a.toFixed(0)):new $(0),l.amount_right=c?new $(e.input_amount):new $(a.toFixed(0)),_=await this.calculateRebalance(l),h=_.after_sqrt_price;const Ee=R.sqrtPriceX64ToTickIndex(new P(h));console.log("1110 再次计算变化后: ",{lowerTick:e.lowerTick,upperTick:e.upperTick,currentTick:Ee,afterSqrtPrice:h})}const{ratioA:T,ratioB:I}=_e.calculateDepositRatio(e.lowerTick,e.upperTick,new P(h));console.log("1110 1",{afterRatioA:T,afterRatioB:I});let D=I.div(T).sub(n.div(i)).greaterThan("0");const w=_.amount_in&&_.fee_amount?new P(_.amount_in).add(new P(_.fee_amount)).toString():_.amount_in,K=_.amount_out,{is_exceed:ue}=_;if(g<e.lowerTick)D=!0;else if(g>e.upperTick)D=!1;else{const J=D===c?new P(u(e.input_amount).sub(w).toString()):new P(K),oe=re.estLiquidityAndcoinAmountFromOneAmounts(e.lowerTick,e.upperTick,J,D,!0,0,new P(h)),Ee=oe.coinAmountA,Je=oe.coinAmountB,Me=u(e.fix_amount_a?Ee.toString():Je.toString()).add(w);console.log("1110 实际消耗:",{preAmountTotal:Me,fixAmountA:D}),Me.greaterThan(e.input_amount)&&(D=!D)}return{swapInAmount:w,swapOutAmount:K,afterSqrtPrice:h,is_exceed:ue,fixAmountA:D,routeObj:_.route_obj}}async calculateRebalance(e){const{clmm_pool:t,a2b:s,curSqrtPrice:i,amount_a:n,amount_b:o,lowerTick:a,upperTick:c,amount_left:d,amount_right:l,coinTypeA:_,coinTypeB:h,useRoute:g}=e,k=async(T,I,D)=>{const w=T.plus(I).div(2),K=await this.clmmPreSwap(t,i,s,w,_,h,!0,g);if(K.after_sqrt_price||(K.after_sqrt_price=e.curSqrtPrice),K.is_exceed)return I=w,k(T,I,D+1);const ue=s?n.sub(K.amount_in):n.add(K.amount_out),J=s?o.add(K.amount_out):o.sub(K.amount_in),oe=R.sqrtPriceX64ToTickIndex(new P(K.after_sqrt_price)),Ee=re.estLiquidityAndcoinAmountFromOneAmounts(a,c,new P(ue.toString()),!0,!0,1,new P(K.after_sqrt_price)),Je=new $(Ee.coinAmountA.toString()),Me=new $(Ee.coinAmountB.toString());if(console.log("1110 swap递归计算 ",{preRes:K,left:T,right:I,mid:w,afterPoolTickIndex:oe,afterA:ue,afterB:J,usedA:Je,usedB:Me,count:D}),Je.toString()!==ue.toString())throw new Error("usedA does not match afterA");if(J.lessThan(Me))s?T=w:I=w;else{s?I=w:T=w;const ut=J.sub(Me),Ft=J.mul(.01);if(console.log("1110 剩余未使用amount ",{remainingB:ut,maxRemainingB:Ft,count:D}),Ft.sub(ut).greaterThanOrEqualTo(0))return console.log("break"),{...K,remainingB:ut}}return T.greaterThan(I)||I.sub(T).lessThan(10)?null:k(T,I,D+1)};return d.greaterThanOrEqualTo(l)?k(new $(0),d,0):k(d,l,0)}async clmmPreSwap(e,t,s,i,n,o,a,c){var I;if(c){const D=await this._sdk.ClmmSDK.RouterV2.getBestRouter(s?n:o,s?o:n,Number(i.toFixed(0)),a,1,"0"),{result:w}=D;let K=t;return w.splitPaths.forEach(ue=>{const J=ue.basePaths.find(oe=>oe.poolAddress.toLowerCase()===e.toLowerCase());J&&(K=J.afterSqrtPrice.toString())}),{amount_in:w.inputAmount.toString(),amount_out:w.outputAmount.toString(),after_sqrt_price:K,is_exceed:w.isExceed,route_obj:w}}const{integrate:d,simulationAccount:l}=this.sdk.ClmmSDK.sdkOptions,_=new C,h=[n,o],g=[_.pure(e),_.pure(s),_.pure(a),_.pure(i.toFixed(0))];_.moveCall({target:`${d.published_at}::${Le}::calculate_swap_result`,arguments:g,typeArguments:h});const T=(I=(await this.sdk.ClmmSDK.fullClient.devInspectTransactionBlock({transactionBlock:_,sender:l.address})).events)==null?void 0:I.filter(D=>S(D.type).name==="CalculatedSwapResultEvent");return T.length===0?null:T[0].parsedJson.data}async getVault(e,t=!1){const s=this.readPoolFromCache(e,t);if(s)return s;try{const i=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}}),n=_e.buildPool(i);if(n)return this.savePoolToCache(n),n}catch(i){console.log(i)}}async getVaultsConfigs(e=!1){const{package_id:t}=this._sdk.sdkOptions.vaults,s=`${t}_getMirrorPoolConfigs`,i=this.getCache(s,e);if(i!==void 0)return i;const n=(await this._sdk.ClmmSDK.fullClient.queryEventsByPage({MoveEventType:`${t}::vaults::InitEvent`})).data,o={admin_cap_id:"",vaults_manager_id:"",vaults_pool_handle:""};if(n.length>0){for(const a of n){const c=a.parsedJson;o.admin_cap_id=c.admin_cap_id,o.vaults_manager_id=c.manager_id;const d=await this._sdk.ClmmSDK.fullClient.getObject({id:o.vaults_manager_id,options:{showContent:!0}}),l=x(d);o.vaults_pool_handle=l.vault_to_pool_maps.fields.id.id;break}this.updateCache(s,o,O)}return o}updateCache(e,t,s=ye){let i=this._cache[e];i?(i.overdueTime=V(s),i.value=t):i=new ke(t,V(s)),this._cache[e]=i}getCache(e,t=!1){const s=this._cache[e],i=s==null?void 0:s.isValid();if(!t&&i)return s.value;i||delete this._cache[e]}},Co=class{constructor(e,t){B(this,"_cache",{});B(this,"_sdkOptions");B(this,"_launchpad");B(this,"_ido");B(this,"_xcetusModule");B(this,"_xtokenModule");B(this,"_boosterModule");B(this,"_makerModule");B(this,"_clmmSDK");B(this,"_liquidityStrategy");B(this,"_vaults");this._sdkOptions=e,this._clmmSDK=t,this._launchpad=new ao(this),this._ido=new mo(this),this._xcetusModule=new co(this),this._xtokenModule=new ho(this),this._boosterModule=new oo(this),this._makerModule=new ro(this),this._vaults=new fo(this),this._liquidityStrategy=new go(this),Gs(this._sdkOptions)}get ClmmSDK(){return this._clmmSDK}get sdkOptions(){return this._sdkOptions}get Launchpad(){return this._launchpad}get Ido(){return this._ido}get XToken(){return this._xtokenModule}get XCetusModule(){return this._xcetusModule}get BoosterModule(){return this._boosterModule}get MakerModule(){return this._makerModule}get LiquidityStrategy(){return this._liquidityStrategy}get Vaults(){return this._vaults}updateCache(e,t,s=O){let i=this._cache[e];i?(i.overdueTime=V(s),i.value=t):i=new ke(t,V(s)),this._cache[e]=i}getCache(e,t=!1){const s=this._cache[e];if(!t&&(s!=null&&s.isValid()))return s.value;delete this._cache[e]}};export{Co as C,U as I,_e as V,je as X,vo as a};
