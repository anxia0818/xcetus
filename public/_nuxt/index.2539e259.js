var Ye=Object.defineProperty;var et=(e,t,n)=>t in e?Ye(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var S=(e,t,n)=>(et(e,typeof t!="symbol"?t+"":t,n),n);import{T as y,d as ee,t as tt,h as T,o as H,p as Ce,q as nt,s as it,g as ze,f as z,k as Ie,j as he}from"./sha256.1f7a269f.js";import{f as _}from"./pool.50d9f7a5.js";import{D as $}from"./decimal.0e8aa3f1.js";var st=Object.defineProperty,ot=(e,t,n)=>t in e?st(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,at=(e,t,n)=>(ot(e,typeof t!="symbol"?t+"":t,n),n),ie=5*60*1e3,C=24*60*60*1e3;function B(e){return Date.parse(new Date().toString())+e}var oe=class{constructor(e,t=0){S(this,"overdueTime");S(this,"value");this.overdueTime=t,this.value=e}isValid(){return this.value===null?!1:this.overdueTime===0?!0:!(Date.parse(new Date().toString())>this.overdueTime)}};$.config({precision:64,rounding:$.ROUND_DOWN,toExpNeg:-64,toExpPos:64});var q=$,K=class extends Error{constructor(t,n){super(t);S(this,"message");S(this,"errorCode");this.message=t,this.errorCode=n}static isClmmpoolsErrorCode(t,n){return t instanceof K&&t.errorCode===n}},N=new _(0),pe=new _(1),De=new _(2);De.pow(new _(128));var Ne=De.pow(new _(64)).sub(pe),rt=De.pow(new _(128)).sub(pe),V=class{static toX64_BN(e){return e.mul(new _(2).pow(new _(64)))}static toX64_Decimal(e){return e.mul(q.pow(2,64))}static toX64(e){return new _(e.mul(q.pow(2,64)).floor().toFixed())}static fromX64(e){return new q(e.toString()).mul(q.pow(2,-64))}static fromX64_Decimal(e){return e.mul(q.pow(2,-64))}static fromX64_BN(e){return e.div(new _(2).pow(new _(64)))}static shiftRightRoundUp(e){let t=e.shrn(64);return e.mod(Ne).gt(N)&&(t=t.add(pe)),t}static divRoundUp(e,t){return e.mod(t).eq(N)?e.div(t):e.div(t).add(new _(1))}static subUnderflowU128(e,t){return e.lt(t)?e.sub(t).add(rt):e.sub(t)}static checkUnsignedSub(e,t){const n=e.sub(t);if(n.isNeg())throw new K("Unsigned integer sub overflow","UnsignedIntegerOverflow");return n}static checkMul(e,t,n){const i=e.mul(t);if(this.isOverflow(i,n))throw new K("Multiplication overflow","MultiplicationOverflow");return i}static checkMulDivFloor(e,t,n,i){if(n.eq(N))throw new K("Devide by zero","DivideByZero");const s=e.mul(t).div(n);if(this.isOverflow(s,i))throw new K("Multiplication div overflow","MulDivOverflow");return s}static checkMulDivCeil(e,t,n,i){if(n.eq(N))throw new K("Devide by zero","DivideByZero");const s=e.mul(t).add(n.sub(pe)).div(n);if(this.isOverflow(s,i))throw new K("Multiplication div overflow","MulDivOverflow");return s}static checkMulDivRound(e,t,n,i){if(n.eq(N))throw new K("Devide by zero","DivideByZero");const s=e.mul(t.add(n.shrn(1))).div(n);if(this.isOverflow(s,i))throw new K("Multiplication div overflow","MulDivOverflow");return s}static checkMulShiftRight(e,t,n,i){const s=e.mul(t).div(new _(2).pow(new _(n)));if(this.isOverflow(s,i))throw new K("Multiplication shift right overflow","MulShiftRightOverflow");return s}static checkMulShiftRight64RoundUpIf(e,t,n,i){const s=e.mul(t),a=i&&s.and(Ne).gt(N)?s.shrn(64).add(pe):s.shrn(64);if(this.isOverflow(a,n))throw new K("Multiplication shift right overflow","MulShiftRightOverflow");return a}static checkMulShiftLeft(e,t,n,i){const s=e.mul(t).shln(n);if(this.isOverflow(s,i))throw new K("Multiplication shift left overflow","MulShiftLeftOverflow");return s}static checkDivRoundUpIf(e,t,n){if(t.eq(N))throw new K("Devide by zero","DivideByZero");return n?this.divRoundUp(e,t):e.div(t)}static isOverflow(e,t){return e.gte(De.pow(new _(t)))}},Ge="79226673515401279992447579055",We="4295048016",Be=new _(1e6),g="0x0000000000000000000000000000000000000000000000000000000000000006",$e="pool_script",le="router",ct="utils",dt="PoolLiquidityCoin",Fe="custodian_v2",ut="clob_v2",lt="endpoints_v2",Ve=(e=>(e.Deleted="Deleted",e.Exists="Exists",e.NotExists="NotExists",e))(Ve||{});function p(e){if(e.config===void 0)throw Error(`package: ${e.package_id}  not config in sdk SdkOptions`);return e.config}var _t=14,pt="59543866431248",mt="184467440737095516",ht="15793534762490258745";function ft(e,t,n){const i=e.toTwos(n).shln(t);return i.imaskn(n+1),i.fromTwos(n)}function v(e,t,n){const i=e.toTwos(n).shrn(t);return i.imaskn(n-t+1),i.fromTwos(n-t)}function gt(e){let t;return e&1?t=new _("79232123823359799118286999567"):t=new _("79228162514264337593543950336"),e&2&&(t=v(t.mul(new _("79236085330515764027303304731")),96,256)),e&4&&(t=v(t.mul(new _("79244008939048815603706035061")),96,256)),e&8&&(t=v(t.mul(new _("79259858533276714757314932305")),96,256)),e&16&&(t=v(t.mul(new _("79291567232598584799939703904")),96,256)),e&32&&(t=v(t.mul(new _("79355022692464371645785046466")),96,256)),e&64&&(t=v(t.mul(new _("79482085999252804386437311141")),96,256)),e&128&&(t=v(t.mul(new _("79736823300114093921829183326")),96,256)),e&256&&(t=v(t.mul(new _("80248749790819932309965073892")),96,256)),e&512&&(t=v(t.mul(new _("81282483887344747381513967011")),96,256)),e&1024&&(t=v(t.mul(new _("83390072131320151908154831281")),96,256)),e&2048&&(t=v(t.mul(new _("87770609709833776024991924138")),96,256)),e&4096&&(t=v(t.mul(new _("97234110755111693312479820773")),96,256)),e&8192&&(t=v(t.mul(new _("119332217159966728226237229890")),96,256)),e&16384&&(t=v(t.mul(new _("179736315981702064433883588727")),96,256)),e&32768&&(t=v(t.mul(new _("407748233172238350107850275304")),96,256)),e&65536&&(t=v(t.mul(new _("2098478828474011932436660412517")),96,256)),e&131072&&(t=v(t.mul(new _("55581415166113811149459800483533")),96,256)),e&262144&&(t=v(t.mul(new _("38992368544603139932233054999993551")),96,256)),v(t,32,256)}function bt(e){const t=Math.abs(e);let n;return t&1?n=new _("18445821805675392311"):n=new _("18446744073709551616"),t&2&&(n=v(n.mul(new _("18444899583751176498")),64,256)),t&4&&(n=v(n.mul(new _("18443055278223354162")),64,256)),t&8&&(n=v(n.mul(new _("18439367220385604838")),64,256)),t&16&&(n=v(n.mul(new _("18431993317065449817")),64,256)),t&32&&(n=v(n.mul(new _("18417254355718160513")),64,256)),t&64&&(n=v(n.mul(new _("18387811781193591352")),64,256)),t&128&&(n=v(n.mul(new _("18329067761203520168")),64,256)),t&256&&(n=v(n.mul(new _("18212142134806087854")),64,256)),t&512&&(n=v(n.mul(new _("17980523815641551639")),64,256)),t&1024&&(n=v(n.mul(new _("17526086738831147013")),64,256)),t&2048&&(n=v(n.mul(new _("16651378430235024244")),64,256)),t&4096&&(n=v(n.mul(new _("15030750278693429944")),64,256)),t&8192&&(n=v(n.mul(new _("12247334978882834399")),64,256)),t&16384&&(n=v(n.mul(new _("8131365268884726200")),64,256)),t&32768&&(n=v(n.mul(new _("3584323654723342297")),64,256)),t&65536&&(n=v(n.mul(new _("696457651847595233")),64,256)),t&131072&&(n=v(n.mul(new _("26294789957452057")),64,256)),t&262144&&(n=v(n.mul(new _("37481735321082")),64,256)),n}var j=class{static priceToSqrtPriceX64(e,t,n){return V.toX64(e.mul(q.pow(10,n-t)).sqrt())}static sqrtPriceX64ToPrice(e,t,n){return V.fromX64(e).pow(2).mul(q.pow(10,t-n))}static tickIndexToSqrtPriceX64(e){return e>0?new _(gt(e)):new _(bt(e))}static sqrtPriceX64ToTickIndex(e){if(e.gt(new _(Ge))||e.lt(new _(We)))throw new Error("Provided sqrtPrice is not within the supported sqrtPrice range.");const t=e.bitLength()-1,n=new _(t-64),i=ft(n,32,128);let s=new _("8000000000000000","hex"),o=0,a=new _(0),r=t>=64?e.shrn(t-63):e.shln(63-t);for(;s.gt(new _(0))&&o<_t;){r=r.mul(r);const w=r.shrn(127);r=r.shrn(63+w.toNumber()),a=a.add(s.mul(w)),s=s.shrn(1),o+=1}const c=a.shrn(32),l=i.add(c).mul(new _(pt)),m=v(l.sub(new _(mt)),64,128).toNumber(),f=v(l.add(new _(ht)),64,128).toNumber();return m===f?m:j.tickIndexToSqrtPriceX64(f).lte(e)?f:m}static tickIndexToPrice(e,t,n){return j.sqrtPriceX64ToPrice(j.tickIndexToSqrtPriceX64(e),t,n)}static priceToTickIndex(e,t,n){return j.sqrtPriceX64ToTickIndex(j.priceToSqrtPriceX64(e,t,n))}static priceToInitializableTickIndex(e,t,n,i){return j.getInitializableTickIndex(j.priceToTickIndex(e,t,n),i)}static getInitializableTickIndex(e,t){return e-e%t}static getNextInitializableTickIndex(e,t){return j.getInitializableTickIndex(e,t)+t}static getPrevInitializableTickIndex(e,t){return j.getInitializableTickIndex(e,t)-t}};new _(365);new _(24);new _(3600);new _(.5);var _e=class{static getDefaultSqrtPriceLimit(e){return new _(e?We:Ge)}static getDefaultOtherAmountThreshold(e){return e?N:Ne}};function be(e,t,n){const i=_.min(e,t),s=_.max(e,t),o=V.fromX64_BN(n.mul(s).mul(i)),a=s.sub(i);return o.div(a)}function ye(e,t,n){const i=_.min(e,t),o=_.max(e,t).sub(i);return n.shln(64).div(o)}var we=class{static updateFeeRate(e,t,n,i,s){const o=V.checkMulDivCeil(t,new _(i),Be,64),a=n===0?N:V.checkMulDivFloor(t,new _(n),Be,64),r=t.mul(o).mul(a);if(s?e.feeProtocolCoinA=e.feeProtocolCoinA.add(o):e.feeProtocolCoinB=e.feeProtocolCoinB.add(o),r.eq(N)||e.liquidity.eq(N))return{refFee:a,clmm:e};const c=r.shln(64).div(e.liquidity);return s?e.feeGrowthGlobalA=e.feeGrowthGlobalA.add(c):e.feeGrowthGlobalB=e.feeGrowthGlobalB.add(c),{refFee:a,clmm:e}}static getCoinAmountFromLiquidity(e,t,n,i,s){const o=new q(e.toString()),a=new q(t.toString()),r=new q(n.toString()),c=new q(i.toString());let d,l;return t.lt(n)?(d=V.toX64_Decimal(o).mul(c.sub(r)).div(r.mul(c)),l=new q(0)):t.lt(i)?(d=V.toX64_Decimal(o).mul(c.sub(a)).div(a.mul(c)),l=V.fromX64_Decimal(o.mul(a.sub(r)))):(d=new q(0),l=V.fromX64_Decimal(o.mul(c.sub(r)))),s?{coinA:new _(d.ceil().toString()),coinB:new _(l.ceil().toString())}:{coinA:new _(d.floor().toString()),coinB:new _(l.floor().toString())}}static estLiquidityAndcoinAmountFromOneAmounts(e,t,n,i,s,o,a){const r=j.sqrtPriceX64ToTickIndex(a),c=j.tickIndexToSqrtPriceX64(e),d=j.tickIndexToSqrtPriceX64(t);let l;if(r<e){if(!i)throw new Error("lower tick cannot calculate liquidity by coinB");l=be(c,d,n)}else if(r>t){if(i)throw new Error("upper tick cannot calculate liquidity by coinA");l=ye(d,c,n)}else i?l=be(a,d,n):l=ye(a,c,n);const m=we.getCoinAmountFromLiquidity(l,a,c,d,s),f=u(m.coinA.toString()).mul(1+o).toNumber(),h=u(m.coinB.toString()).mul(1+o).toNumber();return{tokenMaxA:s?new _(Math.ceil(f)):new _(Math.floor(f)),tokenMaxB:s?new _(Math.ceil(h)):new _(Math.floor(h)),liquidityAmount:l}}static estimateLiquidityFromcoinAmounts(e,t,n,i){if(t>n)throw new Error("lower tick cannot be greater than lower tick");const s=j.sqrtPriceX64ToTickIndex(e),o=j.tickIndexToSqrtPriceX64(t),a=j.tickIndexToSqrtPriceX64(n);if(s<t)return be(o,a,i.coinA);if(s>=n)return ye(a,o,i.coinB);const r=be(e,a,i.coinA),c=ye(e,o,i.coinB);return _.min(r,c)}static estCoinAmountsFromTotalAmount(e,t,n,i,s,o,a,r){const{ratioA:c,ratioB:d}=we.calculateDepositRatioFixTokenA(e,t,n,i,s);console.log({ratioA:c,ratioB:d});const l=u(o).mul(c).div(a),m=u(o).mul(d).div(r);return{amountA:l,amountB:m}}static calculateDepositRatioFixTokenA(e,t,n,i,s){const o=new _(Dt(1,n)),{tokenMaxB:a}=we.estLiquidityAndcoinAmountFromOneAmounts(e,t,o,!0,!0,0,s),r=j.sqrtPriceX64ToPrice(s,n,i),c=u(o.toString()).mul(r),d=c.add(a.toString()),l=c.div(d),m=u(a.toString()).div(d);return{ratioA:l,ratioB:m}}},yt=0,Je=1,kt=2;function Ke(e,t){return e===t?yt:e<t?Je:kt}function wt(e,t){let n=0;const i=e.length<=t.length?e.length:t.length,s=Ke(e.length,t.length);for(;n<i;){const o=Ke(e.charCodeAt(n),t.charCodeAt(n));if(n+=1,o!==0)return o}return s}function vt(e,t){return wt(e,t)===Je}function Ee(e,...t){const n=Array.isArray(t[t.length-1])?t.pop():[];let s=[e,...t].filter(Boolean).join("::");return n&&n.length&&(s+=`<${n.join(", ")}>`),s}function b(e){var t;try{let n=e.replace(/\s/g,"");const i=n.match(/(<.+>)$/),s=(t=i==null?void 0:i[0])==null?void 0:t.match(/(\w+::\w+::\w+)(?:<.*?>(?!>))?/g);if(s){n=n.slice(0,n.indexOf("<"));const c={...b(n),type_arguments:s.map(d=>b(d).source_address)};return c.type_arguments=c.type_arguments.map(d=>O.isSuiCoin(d)?d:b(d).source_address),c.source_address=Ee(c.full_address,c.type_arguments),c}const o=n.split("::"),a={full_address:n,address:o[2]==="SUI"?"0x2":ee(o[0]),module:o[1],name:o[2],type_arguments:[],source_address:""};return a.full_address=`${a.address}::${a.module}::${a.name}`,a.source_address=Ee(a.full_address,a.type_arguments),a}catch{return{full_address:e,address:"",module:"",name:"",type_arguments:[],source_address:e}}}function Pe(e){return b(e).source_address}function Ct(e){return e.toLowerCase().startsWith("0x")?ee(e):e}function He(e){for(const t in e){const n=typeof e[t];if(n==="object")He(e[t]);else if(n==="string"){const i=e[t];e[t]=Ct(i)}}}var It="0x2::coin::Coin",Pt=/^0x2::coin::Coin<(.+)>$/,Tt="0x2::sui::SUI",O=class{static getCoinTypeArg(e){const t=e.type.match(Pt);return t?t[1]:null}static isSUI(e){const t=O.getCoinTypeArg(e);return t?O.getCoinSymbol(t)==="SUI":!1}static getCoinSymbol(e){return e.substring(e.lastIndexOf(":")+1)}static getBalance(e){return BigInt(e.fields.balance)}static totalBalance(e,t){let n=BigInt(0);return e.forEach(i=>{t===i.coinAddress&&(n+=BigInt(i.balance))}),n}static getID(e){return e.fields.id.id}static getCoinTypeFromArg(e){return`${It}<${e}>`}static getFaucetCoins(e){const{events:t}=e,n=[];return t==null||t.forEach(i=>{const{type:s}=i;if(b(s).name==="InitEvent"){const o=i.parsedJson;n.push({transactionModule:i.transactionModule,suplyID:o.suplyID,decimals:o.decimals})}}),n}static getCoinAssets(e,t){const n=[];return t.forEach(i=>{Pe(i.coinAddress)===Pe(e)&&n.push(i)}),n}static isSuiCoin(e){return b(e).full_address===Tt}static selectCoinObjectIdGreaterThanOrEqual(e,t,n=[]){const i=O.selectCoinAssetGreaterThanOrEqual(e,t,n).selectedCoins.map(o=>o.coinObjectId),s=O.selectCoinAssetGreaterThanOrEqual(e,t,n).remainingCoins;return{objectArray:i,remainCoins:s}}static selectCoinAssetGreaterThanOrEqual(e,t,n=[]){const i=O.sortByBalance(e.filter(c=>!n.includes(c.coinObjectId))),s=O.calculateTotalBalance(i);if(s<t)return{selectedCoins:[],remainingCoins:i};if(s===t)return{selectedCoins:i,remainingCoins:[]};let o=BigInt(0);const a=[],r=[...i];for(;o<s;){const c=t-o,d=r.findIndex(m=>m.balance>=c);if(d!==-1){a.push(r[d]),r.splice(d,1);break}const l=r.pop();l.balance>0&&(a.push(l),o+=l.balance)}return{selectedCoins:O.sortByBalance(a),remainingCoins:O.sortByBalance(r)}}static sortByBalance(e){return e.sort((t,n)=>t.balance<n.balance?-1:t.balance>n.balance?1:0)}static sortByBalanceDes(e){return e.sort((t,n)=>t.balance>n.balance?-1:t.balance<n.balance?0:1)}static calculateTotalBalance(e){return e.reduce((t,n)=>t+n.balance,BigInt(0))}};function At(e,{numerator:t,denominator:n},i){return i?e.mul(n.add(t)).div(n):e.mul(n).div(n.add(t))}function u(e){return $.isDecimal(e)?e:new $(e===void 0?0:e)}function St(e){return u(10).pow(u(e).abs())}function Dt(e,t){const n=St(u(t));return Number(u(e).mul(n))}function ke(e,t=32){return BigInt.asUintN(t,BigInt(e)).toString()}function Te(e,t=32){return Number(BigInt.asIntN(t,BigInt(e)))}function Me(e){const t=tt(e).data,n={creator:"",description:"",image_url:"",link:"",name:"",project_url:""};return t&&(n.creator=t.creator,n.description=t.description,n.image_url=t.image_url,n.link=t.link,n.name=t.name,n.project_url=t.project_url),n}function Le(e){let t={creator:"",description:"",image_url:"",link:"",name:"",project_url:""},n={...t,pos_object_id:"",owner:"",type:"",coin_type_a:"",coin_type_b:"",liquidity:"",tick_lower_index:0,tick_upper_index:0,index:0,pool:"",reward_amount_owed_0:"0",reward_amount_owed_1:"0",reward_amount_owed_2:"0",reward_growth_inside_0:"0",reward_growth_inside_1:"0",reward_growth_inside_2:"0",fee_growth_inside_a:"0",fee_owed_a:"0",fee_growth_inside_b:"0",fee_owed_b:"0",position_status:"Exists"},i=T(e);if(i){const a=H(e),r=Ce(e);"nft"in i?(i=i.nft.fields,t.description=i.description,t.name=i.name,t.link=i.url):t=Me(e),n={...t,pos_object_id:i.id.id,owner:r.AddressOwner,type:a,coin_type_a:i.coin_type_a.fields.name,coin_type_b:i.coin_type_b.fields.name,liquidity:i.liquidity,tick_lower_index:Te(BigInt(i.tick_lower_index.fields.bits)),tick_upper_index:Te(BigInt(i.tick_upper_index.fields.bits)),index:i.index,pool:i.pool,reward_amount_owed_0:"0",reward_amount_owed_1:"0",reward_amount_owed_2:"0",reward_growth_inside_0:"0",reward_growth_inside_1:"0",reward_growth_inside_2:"0",fee_growth_inside_a:"0",fee_owed_a:"0",fee_growth_inside_b:"0",fee_owed_b:"0",position_status:"Exists"}}const s=nt(e);s&&(n.pos_object_id=s.objectId,n.position_status="Deleted");const o=it(e);return o&&(n.pos_object_id=o,n.position_status="NotExists"),n}async function M(e,t,n="all"){let i=[],s=!0;const o=n==="all";let a=o?null:n.cursor;do{const r=await e.fullClient.queryEvents({query:t,cursor:a,limit:o?null:n.limit});r.data?(i=[...i,...r.data],s=r.hasNextPage,a=r.nextCursor):s=!1}while(o&&s);return{data:i,nextCursor:a,hasNextPage:s}}async function se(e,t,n,i="all"){let s=[],o=!0;const a=i==="all";let r=a?null:i.cursor;do{const c=await e.fullClient.getOwnedObjects({owner:t,...n,cursor:r,limit:a?null:i.limit});c.data?(s=[...s,...c.data],o=c.hasNextPage,r=c.nextCursor):o=!1}while(a&&o);return{data:s,nextCursor:r,hasNextPage:o}}async function Ae(e,t,n="all"){let i=[],s=!0;const o=n==="all";let a=o?null:n.cursor;do{const r=await e.fullClient.getDynamicFields({parentId:t,cursor:a,limit:o?null:n.limit});r.data?(i=[...i,...r.data],s=r.hasNextPage,a=r.nextCursor):s=!1}while(o&&s);return{data:i,nextCursor:a,hasNextPage:s}}async function J(e,t,n,i=50){let s=[];try{for(let o=0;o<Math.ceil(t.length/i);o++){const a=await e.fullClient.multiGetObjects({ids:t.slice(o*i,i*(o+1)),options:n});s=[...s,...a]}}catch(o){console.log(o)}return s}function Ot(e){const t=O.isSuiCoin(e.coinTypeA),n=O.isSuiCoin(e.coinTypeB);return{isAdjustCoinA:t,isAdjustCoinB:n}}var D=class{static async adjustTransactionForGas(e,t,n,i){i.setSender(e.senderAddress);const s=O.selectCoinAssetGreaterThanOrEqual(t,n).selectedCoins;if(s.length===0)throw new Error("Insufficient balance");const o=O.calculateTotalBalance(t);if(o-n>1e9)return{fixAmount:n};const a=await D.calculationTxGas(e.fullClient,i);if(O.selectCoinAssetGreaterThanOrEqual(t,BigInt(a),s.map(c=>c.coinObjectId)).selectedCoins.length===0){const c=BigInt(a)+BigInt(500);if(o-n<c){if(n-=c,n<0)throw new Error("gas Insufficient balance");const d=new y,l=d.splitCoins(d.gas,[d.pure(n)]);return d.setGasBudget(c),{fixAmount:n,fixCoinInput:d.makeMoveVec({objects:[l]}),newTx:d}}}return{fixAmount:n}}static async buildAddLiquidityFixTokenForGas(e,t,n,i){var m,f;let s=await D.buildAddLiquidityFixToken(e,t,n);const{isAdjustCoinA:o}=Ot(n),a=o?n.amount_a:n.amount_b,r=await D.adjustTransactionForGas(e,O.getCoinAssets(o?n.coinTypeA:n.coinTypeB,t),BigInt(a),s),{fixAmount:c}=r,{fixCoinInput:d}=r,{newTx:l}=r;if(d!==void 0&&l!==void 0){let h,w;if(o)n.amount_a=Number(c),h=d,w=(m=D.buildCoinInputForAmount(l,t,BigInt(n.amount_b),n.coinTypeB))==null?void 0:m.transactionArgument;else return n.amount_b=Number(c),h=(f=D.buildCoinInputForAmount(l,t,BigInt(n.amount_a),n.coinTypeA))==null?void 0:f.transactionArgument,w=d,n=D.fixAddLiquidityFixTokenParams(n,i.slippage,i.curSqrtPrice),s=D.buildAddLiquidityFixTokenArgs(l,e,n,h,w),s}return s}static async buildAddLiquidityFixToken(e,t,n){var a,r;if(e.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");let i=new y;const s=(a=D.buildCoinInputForAmount(i,t,BigInt(n.amount_a),n.coinTypeA))==null?void 0:a.transactionArgument,o=(r=D.buildCoinInputForAmount(i,t,BigInt(n.amount_b),n.coinTypeB))==null?void 0:r.transactionArgument;return i=D.buildAddLiquidityFixTokenArgs(i,e,n,s,o),i}static fixAddLiquidityFixTokenParams(e,t,n){const i=e.fix_amount_a?e.amount_a:e.amount_b,s=we.estLiquidityAndcoinAmountFromOneAmounts(Number(e.tick_lower),Number(e.tick_upper),new _(i),e.fix_amount_a,!0,t,n);return e.amount_a=e.fix_amount_a?e.amount_a:s.tokenMaxA.toNumber(),e.amount_b=e.fix_amount_a?s.tokenMaxB.toNumber():e.amount_b,e}static buildAddLiquidityFixTokenArgs(e,t,n,i,s){const o=[n.coinTypeA,n.coinTypeB];let a="add_liquidity_fix_coin_with_all";const{clmm_pool:r,integrate:c}=t.sdkOptions,d=[];i&&d.push({coinInput:i,coinAmount:n.amount_a.toString()}),s&&d.push({coinInput:s,coinAmount:n.amount_b.toString()}),n.is_open||t.Rewarder.collectRewarderTransactionPayload({pool_id:n.pool_id,pos_id:n.pos_id,coinTypeA:n.coinTypeA,coinTypeB:n.coinTypeB,collect_fee:n.collect_fee,rewarder_coin_types:n.rewarder_coin_types},e);const l=d.length===2;l?a=n.is_open?"open_position_with_liquidity_with_all":"add_liquidity_fix_coin_with_all":a=n.is_open?i!==void 0?"open_position_with_liquidity_only_a":"open_position_with_liquidity_only_b":i!==void 0?"add_liquidity_fix_coin_only_a":"add_liquidity_fix_coin_only_b";const m=p(r),f=n.is_open?l?[e.object(m.global_config_id),e.object(n.pool_id),e.pure(ke(BigInt(n.tick_lower)).toString()),e.pure(ke(BigInt(n.tick_upper)).toString()),...d.map(h=>h.coinInput),...d.map(h=>e.pure(h.coinAmount)),e.pure(n.fix_amount_a),e.object(g)]:[e.object(m.global_config_id),e.object(n.pool_id),e.pure(ke(BigInt(n.tick_lower)).toString()),e.pure(ke(BigInt(n.tick_upper)).toString()),...d.map(h=>h.coinInput),...d.map(h=>e.pure(h.coinAmount)),e.object(g)]:l?[e.object(m.global_config_id),e.object(n.pool_id),e.object(n.pos_id),...d.map(h=>h.coinInput),...d.map(h=>e.pure(h.coinAmount)),e.pure(n.fix_amount_a),e.object(g)]:[e.object(m.global_config_id),e.object(n.pool_id),e.object(n.pos_id),...d.map(h=>h.coinInput),...d.map(h=>e.pure(h.coinAmount)),e.object(g)];return e.moveCall({target:`${c.published_at}::${$e}::${a}`,typeArguments:o,arguments:f}),e}static async buildSwapTransactionForGas(e,t,n,i){let s=D.buildSwapTransaction(e,t,n);const o=await D.adjustTransactionForGas(e,O.getCoinAssets(t.a2b?t.coinTypeA:t.coinTypeB,n),BigInt(t.by_amount_in?t.amount:t.amount_limit),s),{fixAmount:a,fixCoinInput:r,newTx:c}=o;return r!==void 0&&c!==void 0&&(t.by_amount_in?t.amount=a.toString():t.amount_limit=a.toString(),t=D.fixSwapParams(e,t,i),s=D.buildSwapTransactionArgs(c,t,e.sdkOptions,r)),s}static buildSwapTransaction(e,t,n){var o;let i=new y;const s=(o=D.buildCoinInputForAmount(i,n,BigInt(t.by_amount_in?t.amount:t.amount_limit),t.a2b?t.coinTypeA:t.coinTypeB))==null?void 0:o.transactionArgument;return i=D.buildSwapTransactionArgs(i,t,e.sdkOptions,s),i}static buildSwapTransactionArgs(e,t,n,i){const{clmm_pool:s,integrate:o}=n,a=_e.getDefaultSqrtPriceLimit(t.a2b),r=[t.coinTypeA,t.coinTypeB],{global_config_id:c}=p(s);if(c===void 0)throw Error("clmm.config.global_config_id is undefined");const d=t.swap_partner!==void 0,l=d?t.a2b?"swap_a2b_with_partner":"swap_b2a_with_partner":t.a2b?"swap_a2b":"swap_b2a",m=d?[e.pure(c),e.pure(t.pool_id),e.pure(t.swap_partner),i,e.pure(t.by_amount_in),e.pure(t.amount),e.pure(t.amount_limit),e.pure(a.toString()),e.pure(g)]:[e.pure(c),e.pure(t.pool_id),i,e.pure(t.by_amount_in),e.pure(t.amount),e.pure(t.amount_limit),e.pure(a.toString()),e.pure(g)];return e.moveCall({target:`${o.published_at}::${$e}::${l}`,typeArguments:r,arguments:m}),e}static fixSwapParams(e,t,n){const i=e.Swap.calculateRates({decimalsA:n.decimalsA,decimalsB:n.decimalsB,a2b:t.a2b,byAmountIn:t.by_amount_in,amount:new _(t.amount),swapTicks:n.swapTicks,currentPool:n.currentPool}),s=n.byAmountIn?i.estimatedAmountOut:i.estimatedAmountIn,o=At(s,n.slippage,!n.byAmountIn);return t.amount_limit=o.toString(),t}static async syncBuildCoinInputForAmount(e,t,n,i,s=!0){if(e.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const o=await e.getOwnerCoinAssets(e.senderAddress,i);return D.buildCoinInputForAmount(t,o,n,i,s).transactionArgument}static buildCoinInputForAmount(e,t,n,i,s=!0){const o=O.getCoinAssets(i,t);if(n===BigInt(0))return;const a=O.calculateTotalBalance(o);if(a<n)throw new Error(`The amount(${a}) is Insufficient balance for ${i} , expect ${n} `);if(O.isSuiCoin(i)){const f=e.splitCoins(e.gas,[e.pure(n.toString())]);return s?{transactionArgument:e.makeMoveVec({objects:[f]}),remainCoins:t}:{transactionArgument:f,remainCoins:t}}const r=O.selectCoinObjectIdGreaterThanOrEqual(o,n),c=r.objectArray;if(s)return{transactionArgument:e.makeMoveVec({objects:c.map(f=>e.object(f))}),remainCoins:r.remainCoins};const[d,...l]=c,m=e.object(d);return l.length>0&&e.mergeCoins(m,l.map(f=>e.object(f))),{transactionArgument:m,remainCoins:r.remainCoins}}static async calculationTxGas(e,t){const{sender:n}=t.blockData;if(n===void 0)throw Error("sender is empty");const i=await e.devInspectTransactionBlock({transactionBlock:t,sender:n}),{gasUsed:s}=i.effects;return Number(s.computationCost)+Number(s.storageCost)-Number(s.storageRebate)}static async buildRouterSwapTransaction(e,t,n,i){let s=new y;return s=await this.buildRouterBasePathTx(e,t,n,i,s),s}static async buildAggregatorSwapTransaction(e,t,n,i,s){var a;let o=new y;if(t.byAmountIn){const r=Math.round(t.outputAmount*(1-s));let c=(a=D.buildCoinInputForAmount(o,n,t.byAmountIn?BigInt(t.inputAmount):BigInt(r),t.fromCoin,!1))==null?void 0:a.transactionArgument,d=D.moveCallCoinZero(o,t.toCoin);const l=[];let m=!1;const f=t.splitPaths.some(w=>w.basePaths.some(I=>I.label==="Deepbook"));let h;if(f){const w=await qe.getAccountCap(e);if(w)h=o.object(w);else{const[I,P]=qe.createAccountCap(e.senderAddress,e.sdkOptions,o);o=P,h=I,m=!0}}for(let w=0;w<t.splitPaths.length;w+=1){const I=t.splitPaths[w];let P;for(let F=0;F<I.basePaths.length;F+=1){const k=I.basePaths[F];if(k.label==="Deepbook")if(F===0)if(I.basePaths.length===1){const A=this.buildDeepbookBasePathTx(e,k,o,h,c,d,!1);c=A.from,d=A.to}else{P=D.moveCallCoinZero(o,k.toCoin);const A=this.buildDeepbookBasePathTx(e,k,o,h,c,P,!1);c=A.from,P=A.to}else{const A=this.buildDeepbookBasePathTx(e,k,o,h,P,d,!0);P=A.from,d=A.to}if(k.label==="Cetus")if(F===0)if(I.basePaths.length===1){const A=this.buildClmmBasePathTx(e,k,o,t.byAmountIn,c,d,!1);c=A.from,d=A.to}else{P=D.moveCallCoinZero(o,k.toCoin);const A=this.buildClmmBasePathTx(e,k,o,t.byAmountIn,c,P,!1);c=A.from,P=A.to}else{const A=this.buildClmmBasePathTx(e,k,o,t.byAmountIn,P,d,!0);P=A.from,d=A.to,o.moveCall({target:`${e.sdkOptions.integrate.published_at}::${ct}::send_coin`,typeArguments:[k.fromCoin],arguments:[P,o.pure(e.senderAddress)]})}}}l.push(c,d),m&&l.push(h),t.byAmountIn&&o.moveCall({target:`${e.sdkOptions.integrate.published_at}::${le}::check_coin_threshold`,typeArguments:[t.toCoin],arguments:[d,o.pure(r)]}),o.transferObjects(l,o.pure(e.senderAddress))}else{const r=[];for(const d of t.splitPaths){const l=[],m=[],f=[],h=[];for(let I=0;I<d.basePaths.length;I+=1){const P=d.basePaths[I];l.push(P.direction),m.push(P.poolAddress),f.push(new _(P.inputAmount)),I===0?h.push(P.fromCoin,P.toCoin):h.push(P.toCoin)}const w={amountIn:new _(d.inputAmount),amountOut:new _(d.outputAmount),poolAddress:m,a2b:l,rawAmountLimit:f,isExceed:!1,coinType:h};r.push(w)}const c={paths:r,partner:i,priceSplitPoint:s};o=await this.buildRouterBasePathTx(e,c,!1,n,o)}return o}static buildDeepbookBasePathTx(e,t,n,i,s,o,a){const r=t.direction?s:o,c=t.direction?o:s,d=[n.object(t.poolAddress),i,n.pure(t.inputAmount),n.pure(0),n.pure(t.direction),r,c,n.pure(a),n.object(g)],l=t.direction?[t.fromCoin,t.toCoin]:[t.toCoin,t.fromCoin],m=n.moveCall({target:`${e.sdkOptions.deepbook_endpoint_v2.published_at}::endpoints_v2::swap`,typeArguments:l,arguments:d});return s=t.direction?m[0]:m[1],o=t.direction?m[1]:m[0],{from:s,to:o,tx:n}}static buildClmmBasePathTx(e,t,n,i,s,o,a){const{clmm_pool:r,integrate:c}=e.sdkOptions,d=p(r).global_config_id;let l=t.direction?s:o,m=t.direction?o:s;const f="swap",h=i?t.inputAmount.toString():t.outputAmount.toString(),w=_e.getDefaultSqrtPriceLimit(t.direction),I=[n.object(d),n.object(t.poolAddress),l,m,n.pure(t.direction),n.pure(i),n.pure(h),n.pure(w.toString()),n.pure(a),n.object(g)],P=t.direction?[t.fromCoin,t.toCoin]:[t.toCoin,t.fromCoin],F=n.moveCall({target:`${c.published_at}::${le}::${f}`,typeArguments:P,arguments:I});return l=F[0],m=F[1],s=t.direction?l:m,o=t.direction?m:l,{from:s,to:o,tx:n}}static async buildRouterBasePathTx(e,t,n,i,s){var F;const{clmm_pool:o,integrate:a}=e.sdkOptions,r=p(o).global_config_id,c=t.paths.filter(k=>k&&k.poolAddress),d=Number(c.reduce((k,A)=>k.add(A.amountIn),N).toString()),l=Number(c.reduce((k,A)=>k.add(A.amountOut),N).toString()),m=Math.round(n?Number(l.toString())*(1-t.priceSplitPoint):Number(d.toString())*(1+t.priceSplitPoint)),f=t.paths[0].coinType[0],h=t.paths[0].coinType[t.paths[0].coinType.length-1];let w=(F=D.buildCoinInputForAmount(s,i,BigInt(n?d:m),f,!1))==null?void 0:F.transactionArgument,I=D.moveCallCoinZero(s,h);const P=[];for(const k of c)if(k.poolAddress.length===1){const A=k.a2b[0],W={amount:Number(k.amountIn.toString()),amountLimit:m,poolCoinA:k.a2b[0]?f:h,poolCoinB:k.a2b[0]?h:f},X=A?w:I,Z=A?I:w,ue=n?k.amountIn.toString():k.amountOut.toString(),Oe=_e.getDefaultSqrtPriceLimit(A).toString(),je=[s.object(r),s.object(k.poolAddress[0]),X,Z,s.pure(A),s.pure(n),s.pure(ue),s.pure(Oe),s.pure(!1),s.object(g)],fe=[W.poolCoinA,W.poolCoinB],ge=s.moveCall({target:`${e.sdkOptions.integrate.published_at}::${le}::swap`,typeArguments:fe,arguments:je});w=A?ge[0]:ge[1],I=A?ge[1]:ge[0]}else{const A=n?k.amountIn:k.rawAmountLimit[0],W=n?k.rawAmountLimit[0]:k.amountOut;let X="";k.a2b[0]?k.a2b[1]?X="swap_ab_bc":X="swap_ab_cb":k.a2b[1]?X="swap_ba_bc":X="swap_ba_cb";const Z=_e.getDefaultSqrtPriceLimit(k.a2b[0]),ue=_e.getDefaultSqrtPriceLimit(k.a2b[1]),Oe=[s.object(r),s.object(k.poolAddress[0]),s.object(k.poolAddress[1]),w,I,s.pure(n),s.pure(A.toString()),s.pure(W.toString()),s.pure(Z.toString()),s.pure(ue.toString()),s.object(g)],je=[k.coinType[0],k.coinType[1],k.coinType[2]],fe=s.moveCall({target:`${a.published_at}::${le}::${X}`,typeArguments:je,arguments:Oe});w=fe[0],I=fe[1]}return n&&s.moveCall({target:`${a.published_at}::${le}::check_coin_threshold`,typeArguments:[h],arguments:[I,s.pure(m)]}),P.push(w,I),s.transferObjects(P,s.pure(e.senderAddress)),s}static buildCoinTypePair(e,t){const n=[];if(e.length===2){const i=[];i.push(e[0],e[1]),n.push(i)}else{const i=[];i.push(e[0],e[e.length-1]),n.push(i);for(let s=1;s<e.length-1;s+=1){if(t[s-1]===0)continue;const o=[];o.push(e[0],e[s],e[e.length-1]),n.push(o)}}return n}},G=D;at(G,"moveCallCoinZero",(e,t)=>e.moveCall({target:"0x2::coin::zero",typeArguments:[t]}));var ae=new _(1e9),qe=class{static createAccountCap(e,t,n,i=!1){const{deepbook:s}=t,[o]=n.moveCall({target:`${s.published_at}::${ut}::create_account`,typeArguments:[],arguments:[]});return i&&n.transferObjects([o],n.pure(e)),[o,n]}static deleteAccountCap(e,t,n){const{deepbook:i}=t,s=[n.pure(e)];return n.moveCall({target:`${i.published_at}::${Fe}::delete_account_cap`,typeArguments:[],arguments:s}),n}static async getAccountCap(e){const t=await se(e,e.senderAddress,{options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0},filter:{MoveModule:{package:e.sdkOptions.deepbook.package_id,module:Fe}}});return t.data.length===0?"":t.data[0].data.objectId}static async getPools(e){const t=e.sdkOptions.deepbook.package_id,n=[];try{(await M(e,{MoveEventType:`${t}::clob_v2::PoolCreated`})).data.forEach(s=>{const o=s.parsedJson;o&&n.push({poolID:o.pool_id,tickSize:Number(o.tick_size),lotSize:Number(o.lot_size),takerFeeRate:Number(o.taker_fee_rate),makerRebateRate:Number(o.maker_rebate_rate),baseAsset:o.base_asset.name,quoteAsset:o.quote_asset.name})})}catch(i){console.log("getPoolImmutables",i)}return n}static async getPoolAsks(e,t,n,i){var f;const{simulationAccount:s}=e.sdkOptions,{deepbook_endpoint_v2:o}=e.sdkOptions,a=new y,r=[],c=[n,i],d=[a.pure(t),a.pure("0"),a.pure("999999999999"),a.pure(g)];a.moveCall({target:`${o.published_at}::endpoints_v2::get_level2_book_status_ask_side`,arguments:d,typeArguments:c});const m=(f=(await e.fullClient.devInspectTransactionBlock({transactionBlock:a,sender:s.address})).events)==null?void 0:f.filter(h=>b(h.type).name==="BookStatus");if(m.length===0)return r;for(let h=0;h<m[0].parsedJson.depths.length;h++){const w=m[0].parsedJson.price[h],I=m[0].parsedJson.depths[h],P={price:parseInt(w,10),quantity:parseInt(I,10)};r.push(P)}return r}static async getPoolBids(e,t,n,i){var f;const{simulationAccount:s}=e.sdkOptions,{deepbook_endpoint_v2:o}=e.sdkOptions,a=new y,r=[],c=[n,i],d=[a.pure(t),a.pure("0"),a.pure("999999999999"),a.pure(g)];a.moveCall({target:`${o.published_at}::endpoints_v2::get_level2_book_status_bid_side`,arguments:d,typeArguments:c});const m=(f=(await e.fullClient.devInspectTransactionBlock({transactionBlock:a,sender:s.address})).events)==null?void 0:f.filter(h=>b(h.type).name==="BookStatus");if(m.length===0)return r;for(let h=0;h<m[0].parsedJson.depths.length;h++){const w=m[0].parsedJson.price[h],I=m[0].parsedJson.depths[h],P={price:parseInt(w,10),quantity:parseInt(I,10)};r.push(P)}return r}static async preSwap(e,t,n,i){let s=!1,o=N,a=new _(i),r=N;const c=new _(i);if(n){let d=await this.getPoolBids(e,t.poolID,t.baseAsset,t.quoteAsset);d===null&&(s=!0),d=d.sort((l,m)=>m.price-l.price);for(let l=0;l<d.length;l+=1){const m=new _(d[l].quantity),f=new _(d[l].price),h=m.mul(new _(f)).mul(new _(t.takerFeeRate)).div(ae).div(ae);if(a.gt(m))a=a.sub(m),o=o.add(m.mul(f).div(ae).sub(h)),r=r.add(h);else{const w=a.mul(new _(d[l].price)).div(ae),I=w.mul(new _(t.takerFeeRate)).div(ae);o=o.add(w.sub(I)),a=a.sub(a),r=r.add(I)}if(a.eq(N))break}}else{const d=await this.getPoolAsks(e,t.poolID,t.baseAsset,t.quoteAsset);d===null&&(s=!0);for(let l=0;l<d.length;l+=1){const m=new _(d[l].price).mul(new _(d[l].quantity)).div(new _(1e9)),f=m.mul(new _(t.takerFeeRate)).div(ae),h=m.add(f);if(a.gt(m))o=o.add(new _(d[l].quantity)),a=a.sub(h),r=r.add(f);else{const w=new _(d[l].quantity).div(new _(t.lotSize)),I=h.div(w),P=a.div(I);o=o.add(P.muln(t.lotSize)),a=a.sub(P.mul(I)),r=r.add(P.div(w).mul(f))}if(a.eq(N))break}}return{poolAddress:t.poolID,estimatedAmountIn:c.sub(a).toNumber(),estimatedAmountOut:o.toNumber(),estimatedFeeAmount:r,isExceed:s,amount:Number(i),aToB:n,byAmountIn:!0}}static async simulateSwap(e,t,n,i,s,o){var X;const{deepbook_endpoint_v2:a}=e.sdkOptions;let r=new y;const c=await this.getAccountCap(e);let d;if(c===""){const Z=this.createAccountCap(e.senderAddress,e.sdkOptions,r),ue=Z[0];r=Z[1],d=ue}else d=r.pure(c);const l=await e.getOwnerCoinAssets(e.senderAddress),m=G.buildCoinInputForAmount(r,l,BigInt(o),n,!1),f=m==null?void 0:m.transactionArgument,h=G.buildCoinInputForAmount(r,l,BigInt(o),i,!1),w=h==null?void 0:h.transactionArgument,I=[n,i],P=[r.pure(t),d,r.pure(o),r.pure(0),r.pure(s),f,w,r.pure(g)];r.moveCall({target:`${a.published_at}::${lt}::swap`,arguments:P,typeArguments:I});const{simulationAccount:F}=e.sdkOptions,A=(X=(await e.fullClient.devInspectTransactionBlock({transactionBlock:r,sender:F.address})).events)==null?void 0:X.filter(Z=>b(Z.type).name==="DeepbookSwapEvent");if(A.length===0)return null;const W=A[0].parsedJson;return{poolAddress:W.pool,estimatedAmountIn:W.amount_in,estimatedAmountOut:W.amount_out,aToB:W.atob}}},xe="router",de=1e4,Q=class{static buildPoolImmutables(e){const{fields:t}=e.value.fields.value;return{clmm_pool_id:b(t.clmm_pool_id).address,booster_type:b(t.booster_type.fields.name).source_address,pool_id:b(t.pool_id).address,coinTypeA:b(t.coin_type_a.fields.name).source_address,coinTypeB:b(t.coin_type_b.fields.name).source_address}}static buildPoolState(e){const t=T(e),n=[];return t.config.fields.contents.forEach(s=>{n.push({lock_day:Number(s.fields.key),multiplier:Number(u(s.fields.value).div(de))})}),{basic_percent:Number(u(t.basic_percent).div(de)),balances:{balances_handle:t.balances.fields.id.id,size:t.balances.fields.size},config:n,lock_positions:{lock_positions_handle:t.lock_positions.fields.id.id,size:t.lock_positions.fields.size},is_open:t.is_open,index:Number(t.index),pool_id:he(e)}}static buildLockNFT(e){const t=b(he(e)).address;return{lock_clmm_position:Le(e),locked_nft_id:t}}static buildLockPositionInfo(e){const t=T(e),{value:n}=t.value.fields;return{type:n.type,position_id:n.fields.position_id,start_time:Number(n.fields.start_time),lock_period:Number(n.fields.lock_period),end_time:Number(n.fields.end_time),growth_rewarder:n.fields.growth_rewarder,rewarder_owned:n.fields.rewarder_owned,is_settled:n.fields.is_settled}}static isLocked(e){return e.end_time>Date.parse(new Date().toString())/1e3}},jt=class{constructor(e){S(this,"_sdk");S(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=!1){var o;const{booster:t}=this._sdk.sdkOptions,n=`${t.package_id}_getPoolImmutables`,i=this.getCache(n,e),s=[];if(i!==void 0)s.push(...i);else{const a=[];(o=(await Ae(this._sdk.ClmmSDK,p(t).booster_pool_handle)).data)==null||o.forEach(d=>{a.push(d.objectId)});const c=await J(this._sdk.ClmmSDK,a,{showContent:!0});for(const d of c){const l=T(d);if(l){const m=Q.buildPoolImmutables(l);this.updateCache(`${m.pool_id}_getPoolImmutable`,m,C),s.push(m)}}}return this.updateCache(n,s,C),s}async getPoolImmutable(e){const{booster:t}=this._sdk.sdkOptions,n=`${e}_getPoolImmutable`,i=this.getCache(n);if(i!==void 0)return i;const s=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:p(t).booster_pool_handle,name:{type:"0x2::object::ID",value:e}}),o=T(s),a=Q.buildPoolImmutables(o);return this.updateCache(n,a,C),a}async getPools(){const e=[],n=(await this.getPoolImmutables()).map(s=>s.pool_id),i=await J(this._sdk.ClmmSDK,n,{showType:!0,showContent:!0});for(const s of i){const o=Q.buildPoolState(s);if(o){const a={...await this.getPoolImmutable(o.pool_id),...o};e.push(a);const r=`${a.pool_id}_getPoolObject`;this.updateCache(r,a,C)}}return e}async getPool(e,t=!0){const n=`${e}_getPoolObject`,i=this.getCache(n,t),s=await this.getPoolImmutable(e);if(i!==void 0)return{...s,...i};const o=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),a=Q.buildPoolState(o),r={...s,...a};return this.updateCache(n,r,C),r}async getPoolHandleId(e){const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),n=T(t);return n?n.list.fields.id.id:""}async getBoosterInitConfigs(){var i;const{package_id:e}=this.sdk.sdkOptions.booster,t=(i=await M(this._sdk.ClmmSDK,{MoveEventType:`${e}::config::InitEvent`}))==null?void 0:i.data,n={booster_config_id:"",booster_pool_handle:""};return t.length>0&&t.forEach(s=>{const o=s.parsedJson;o&&(n.booster_config_id=o.config_id)}),n.booster_pool_handle=await this.getPoolHandleId(n.booster_config_id),n}async getOwnerBoosterPositions(e,t,n){const{booster:i}=this.sdk.sdkOptions,s=[],o=[],a=`${i.package_id}::lock_nft::LockNFT<${this._sdk.ClmmSDK.Position.buildPositionType()}>`,r=await se(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0,showOwner:!0},filter:{StructType:a}});for(const d of r.data)if(b(H(d)).source_address===a&&d.data){const m=Q.buildLockNFT(d);this.updateCache(`${m.locked_nft_id}_getBoosterPositionById`,m,C),m&&(t===void 0||t===m.lock_clmm_position.pool)&&s.push(m)}const c=await this.getLockPositionInfos(n,s.map(d=>d.locked_nft_id));for(const d of s)for(const l of c)if(d.lock_clmm_position.pos_object_id===l.position_id){o.push({...d,...l});break}return o}async getBoosterPosition(e,t){const n=`${t}_getBoosterPositionById`,i=this.getCache(n);let s;if(i!==void 0)s=i;else{const a=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0,showOwner:!0}});s=Q.buildLockNFT(a),this.updateCache(n,s,C)}const o=await this.getLockPositionInfo(e,t);return{...s,...o}}async getLockPositionInfos(e,t=[]){var o;const n=await Ae(this._sdk.ClmmSDK,e),i=[],s=[];return(o=n.data)==null||o.forEach(a=>{t.length>0?t.includes(a.name.value)&&i.push(a.objectId):i.push(a.objectId)}),i.length>0&&(await J(this._sdk.ClmmSDK,i,{showContent:!0})).forEach(r=>{const c=Q.buildLockPositionInfo(r);c&&s.push(c)}),s}async getLockPositionInfo(e,t){const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}});return Q.buildLockPositionInfo(n)}calculateXCetusRewarder(e,t,n){let i=t.basic_percent,s="0";e.forEach(r=>{r.coin_address===t.booster_type&&(console.log("find ",t.booster_type),s=r.amount_owed.toString())}),n.is_settled||t.config.forEach(r=>{r.lock_day===n.lock_period&&(i=r.multiplier)});const o=u(s).sub(n.growth_rewarder).mul(i);return u(n.rewarder_owned).add(o).toString()}lockPositionPayload(e){const{booster:t}=this.sdk.sdkOptions,{clmm_pool:n}=this.sdk.ClmmSDK.sdkOptions,i=new y;return i.moveCall({target:`${t.published_at}::${xe}::lock_position`,typeArguments:[e.booster_type,e.coinTypeA,e.coinTypeB],arguments:[i.pure(p(t).booster_config_id),i.pure(p(n).global_config_id),i.pure(e.booster_pool_id),i.pure(e.clmm_pool_id),i.pure(e.clmm_position_id),i.pure(e.lock_day),i.pure(g)]}),i}canceLockPositionPayload(e){const{booster:t}=this.sdk.sdkOptions,n=new y;return n.moveCall({target:`${t.published_at}::${xe}::cancel_lock`,typeArguments:[e.booster_type],arguments:[n.pure(p(t).booster_config_id),n.pure(e.booster_pool_id),n.pure(e.lock_nft_id),n.pure(g)]}),n}redeemPayload(e){const{booster:t,xcetus:n}=this.sdk.sdkOptions,{clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions,s=new y,o=p(n);return s.moveCall({target:`${t.published_at}::${xe}::redeem`,typeArguments:[e.booster_type,e.coinTypeA,e.coinTypeB],arguments:[s.pure(p(t).booster_config_id),s.pure(p(i).global_config_id),s.pure(e.booster_pool_id),s.pure(e.lock_nft_id),s.pure(e.clmm_pool_id),s.pure(o.lock_manager_id),s.pure(o.xcetus_manager_id),s.pure(e.ve_nft_id),s.pure(g)]}),s}updateCache(e,t,n=ie){let i=this._cache[e];i?(i.overdueTime=B(n),i.value=t):i=new oe(t,B(n)),this._cache[e]=i}getCache(e,t=!1){const n=this._cache[e];if(!t&&(n!=null&&n.isValid()))return n.value;delete this._cache[e]}},L="router",Ze=1e9,E=class{static priceRealToFix(e,t,n){const i=u(t-n).toNumber();return Number(u(e).div(u(10).pow(u(i))).toString())}static priceFixToReal(e,t,n){const i=u(t-n).toNumber();return Number(u(e).mul(u(10).pow(u(i))).toString())}static raiseTotalAmount(e,t,n){const i=u(t-n).abs().toNumber();return t>n?Number(u(e.total_supply).mul(e.current_price).div(u(10).pow(u(i))).toString()):Number(u(e.total_supply).mul(e.current_price).mul(u(10).pow(u(i))).toString())}static buildLaunchPadPool(e){const t=H(e),n=b(t),i=T(e),s={coin_type_sale:n.type_arguments[0],coin_type_raise:n.type_arguments[1],pool_address:ee(he(e)),is_settle:i.is_settle,current_price:u(i.initialize_price).div(u(Ze)).toString(),price:i.initialize_price,min_price:"0",max_price:"0",sale_coin_amount:i.sale_coin,raise_coin_amount:i.raise_coin,total_purchase_amount:i.reality_raise_total,total_supply:i.sale_total,min_purchase:i.min_purchase,max_purchase:i.max_purchase,complete_raise_limit:i.least_raise_amount,softcap:i.softcap,max_raise_amount:i.hardcap,sale_decimals:0,raise_decimals:0,liquidity_injection_ratio:Number(i.liquidity_rate)/1e4,is_cancel:i.is_cancel,duration_summary:{start_time:Number(i.duration_manager.fields.start_time),end_time:0,settle_end_time:0,purchase_duration:Number(i.duration_manager.fields.activity_duration),settle_duration:Number(i.duration_manager.fields.settle_duration),lock_up_duration:Number(i.duration_manager.fields.locked_duration)},white_summary:{white_handle:i.white_list.fields.users.fields.id.id,protection_hard_cap:i.white_list.fields.hard_cap_total,protection_limit_used:i.white_list.fields.purchase_total,size:Number(i.white_list.fields.users.fields.size)},unused_sale:i.unused_sale,harvest_raise:i.harvest_raise,tick_spacing:Number(i.tick_spacing),owner:i.recipient,purchase_summary:{purchase_handle:i.purchase_list.fields.id.id,size:Number(i.purchase_list.fields.size)},pool_status:"Failed"};return E.updatePoolStatus(s),s}static updatePoolStatus(e){const t=Number(u(Date.now()/1e3).toFixed(0)),{duration_summary:n}=e,i=n.start_time+n.purchase_duration,s=i+n.settle_duration;if(n.end_time=i,n.settle_end_time=s,e.is_settle)e.pool_status="Ended";else if(e.is_cancel)e.pool_status="Canceled";else if(t<n.start_time)e.pool_status="Upcoming";else if(t>n.start_time&&t<i)e.pool_status="Live";else if(t>i&&t<s){const o=e.raise_coin_amount;Number(o)<Number(e.complete_raise_limit)?e.pool_status="Failed":e.pool_status="Settle"}return e}static async calculatePoolPrice(e,t){const n=await e.ClmmSDK.CetusConfig.getTokenListByCoinTypes([t.coin_type_sale,t.coin_type_raise]),i=n[t.coin_type_sale].decimals,s=n[t.coin_type_raise].decimals;t.min_price=this.priceFixToReal(Number(u(t.softcap).div(u(t.total_supply))),i,s).toString(),t.max_price=this.priceFixToReal(Number(u(t.max_raise_amount).div(u(t.total_supply))),i,s).toString(),t.current_price=this.priceFixToReal(Number(t.current_price),i,s).toString(),t.sale_decimals=i,t.raise_decimals=s}static async getWithdrawRaise(e){return e.pool_status==="Ended"?e.harvest_raise:"0"}static async getWithdrawSale(e){return e.pool_status==="Ended"?e.unused_sale:e.sale_coin_amount}static async getHistoryWithdrawRaise(e,t){if(t.pool_status==="Ended"){if(u(t.harvest_raise).equals(u(0))){const i=await e.Launchpad.getSettleEvent(t.pool_address);i&&(t.harvest_raise=i.unused_raise)}const n=_.min(new _(t.total_purchase_amount),new _(t.max_raise_amount));return u(n.toString()).mul(1-t.liquidity_injection_ratio).toString()}return"0"}static async getHistoryWithdrawSale(e,t){if(t.pool_status==="Ended"){const n=await e.Launchpad.getSettleEvent(t.pool_address);return n&&(t.unused_sale=n.unused_sale),t.unused_sale}return"0"}static async getOverrecruitReverseAmount(e,t){const n=await e.Launchpad.getPurchaseMarks(e.ClmmSDK.senderAddress,[t.pool_address],!1);if(n.length>0){const i=n[0].purchased_raise_amount,s=(await e.Launchpad.getPurchaseAmount(t.white_summary.white_handle,e.ClmmSDK.senderAddress)).safe_purchased_amount,{protection_limit_used:o}=t.white_summary;return u(i).sub(s).div(u(t.total_purchase_amount).sub(o)).mul(u(t.total_purchase_amount).sub(t.max_raise_amount)).toString()}return"0"}static async getCanPurchaseAmount(e,t){const n=await E.getOverrecruitReverseAmount(e,t),i=await e.Launchpad.getPurchaseMarks(e.ClmmSDK.senderAddress,[t.pool_address],!1);if(i){const s=i[0].purchased_raise_amount;u(s).sub(n).div(t.current_price)}return"0"}},xt=class{constructor(e){S(this,"_sdk");S(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=[],t=0,n=100,i=!1){var l;const{package_id:s}=this._sdk.sdkOptions.launchpad;if(s===void 0)throw Error("sdk.sdkOptions.launchpad is undefined");const o=`${s}_getPoolImmutables`,a=this.getCache(o,i),r=[],c=[];if(a!==void 0&&r.push(...a),r.length===0)try{((l=await M(this._sdk.ClmmSDK,{MoveEventType:`${s}::factory::CreatePoolEvent`}))==null?void 0:l.data).forEach(f=>{const h=f.parsedJson;h&&r.push({pool_address:h.pool_id,coin_type_sale:b(h.sale_coin.name).full_address,coin_type_raise:b(h.raise_coin.name).full_address})}),this.updateCache(o,r,C)}catch(m){console.log("getPoolImmutables",m)}const d=e.length>0;for(let m=0;m<r.length;m+=1){const f=r[m];if(!(d&&!e.includes(f.pool_address))){if(!d){const h=m;if(h<t||h>=t+n)continue}c.push(f)}}return c}async getPoolImmutablesWithPage(e="all",t=!1){const{package_id:n}=this._sdk.sdkOptions.launchpad,i=`${n}_getPoolImmutables`,s=[],o={data:[],hasNextPage:!1},a=e==="all";if(a){const r=this.getCache(i,t);r&&s.push(...r)}if(s.length===0)try{const r=await M(this._sdk.ClmmSDK,{MoveEventType:`${n}::factory::CreatePoolEvent`},e);o.hasNextPage=r.hasNextPage,o.nextCursor=r.nextCursor,r.data.forEach(c=>{const d=c.parsedJson;d&&s.push({pool_address:d.pool_id,coin_type_sale:b(d.sale_coin.name).full_address,coin_type_raise:b(d.raise_coin.name).full_address})})}catch(r){console.log("getPoolImmutables",r)}return o.data=s,a&&this.updateCache(i,s,C),o}async getPools(e=[],t=0,n=100){const i=[];let s=[];e.length>0?s=[...e]:(await this.getPoolImmutables([],t,n,!1)).forEach(r=>{s.push(r.pool_address)});const o=await J(this.sdk.ClmmSDK,s,{showType:!0,showContent:!0});for(const a of o){const r=E.buildLaunchPadPool(a);await E.calculatePoolPrice(this._sdk,r),i.push(r);const c=`${r.pool_address}_getPoolObject`;this.updateCache(c,r,C)}return i}async getPool(e,t=!0){const n=`${e}_getPoolObject`,i=this.getCache(n,t);if(i!==void 0){const a=i;return E.updatePoolStatus(a),a}const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=E.buildLaunchPadPool(s);return await E.calculatePoolPrice(this._sdk,o),this.updateCache(n,o),o}async getInitConfig(e=!1){var c;const t=this._sdk.sdkOptions.launchpad.package_id,n=`${t}_getInitEvent`,i=this.getCache(n,e);if(i!==void 0)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showPreviousTransaction:!0}}),o=ze(s),a=(c=await M(this._sdk.ClmmSDK,{Transaction:o}))==null?void 0:c.data,r={pools_id:"",admin_cap_id:"",config_cap_id:""};return a.length>0&&(a.forEach(d=>{const l=d.parsedJson;if(l)switch(b(d.type).full_address){case`${t}::config::InitConfigEvent`:r.admin_cap_id=l.admin_cap_id,r.config_cap_id=l.config_cap_id;break;case`${t}::factory::InitFactoryEvent`:r.pools_id=l.pools_id;break}}),this.updateCache(n,r,C)),r}async getLockNFT(e,t=!1){const n=`${e}_getLockNFT`,i=this.getCache(n,t);if(i!==void 0)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(!s.error)return Le(s)}async getLockNFTList(e){var s;const{package_id:t}=this._sdk.ClmmSDK.sdkOptions.clmm_pool,{sdkOptions:n}=this._sdk,i=[];try{const o=(s=await M(this._sdk.ClmmSDK,{MoveEventType:`${n.launchpad.package_id}::lock::LockNFTEvent`}))==null?void 0:s.data;for(const a of o){const r=a.parsedJson;if(r){const c={locked_time:Number(r.locked_time),end_lock_time:Number(r.end_lock_time),nft_type:r.nft_type_name.name,lock_nft_id:r.lock_nft_id,recipient:r.recipient};if(e===c.recipient&&`${t}`===b(c.nft_type).address){const d=await this.getLockNFT(c.lock_nft_id);if(d){const l=b(d.coin_type_a).full_address,m=b(d.coin_type_b).full_address;i.push({...d,coin_type_a:l,coin_type_b:m,...c})}}}}return i}catch(o){return console.log("getLockNFTList:",o),[]}}async creatPoolTransactionPayload(e){const{launchpad:t}=this.sdk.sdkOptions,n=p(t);if(this.assertLuanchpadConfig(),this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const i=E.priceRealToFix(Number(e.initialize_price),e.sale_decimals,e.raise_decimals),s=new y,o=u(e.total_supply).add(u(e.total_supply).mul(u(e.liquidity_rate))).toNumber(),a=await G.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,s,BigInt(o),e.coin_type_sale),r=[s.pure(n.admin_cap_id),s.pure(n.config_cap_id),s.pure(n.pools_id),s.pure(z(e.recipient)),s.pure((i*Ze).toString()),a,s.pure(e.total_supply.toString()),s.pure(e.min_purchase.toString()),s.pure(e.max_purchase.toString()),s.pure(e.least_raise_amount.toString()),s.pure(e.hardcap.toString()),s.pure((e.liquidity_rate*1e3).toString()),s.pure(e.start_time.toString()),s.pure(e.activity_duration.toString()),s.pure(e.settle_duration.toString()),s.pure(e.locked_duration.toString()),s.pure(e.tick_spacing.toString()),s.pure(g)],c=[e.coin_type_sale,e.coin_type_raise];return s.moveCall({target:`${t.published_at}::${L}::create_launch_pool`,typeArguments:c,arguments:r}),s}async creatPurchasePayload(e){const{launchpad:t}=this.sdk.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const n=new y,i=await G.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,n,BigInt(e.purchase_amount),e.coin_type_raise),s=(await this.getPurchaseMarks(this._sdk.ClmmSDK.senderAddress,[e.pool_address],!1))[0],o=[e.coin_type_sale,e.coin_type_raise];let a;return s?a=[n.pure(e.pool_address),n.pure(p(t).config_cap_id),n.pure(s.id),i,n.pure(e.purchase_amount.toString()),n.pure(g)]:a=[n.pure(e.pool_address),n.pure(p(t).config_cap_id),i,n.pure(e.purchase_amount.toString()),n.pure(g)],n.moveCall({target:`${t.published_at}::${L}::${s===void 0?"create_and_purchase":"purchase"}`,typeArguments:o,arguments:a}),n}async creatClaimPayload(e){const{launchpad:t}=this.sdk.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");const n=(await this.getPurchaseMarks(this._sdk.ClmmSDK.senderAddress,[e.pool_address],!1))[0],i=new y,s=[e.coin_type_sale,e.coin_type_raise],o=[i.pure(e.pool_address),i.pure(p(t).config_cap_id),i.pure(n==null?void 0:n.id),i.pure(g)];return i.moveCall({target:`${t.published_at}::${L}::claim`,typeArguments:s,arguments:o}),i}async creatSettlePayload(e){var r;const{launchpad:t}=this.sdk.sdkOptions,{clmm_pool:n}=this.sdk.ClmmSDK.sdkOptions;if(this._sdk.ClmmSDK.senderAddress.length===0)throw Error("this config sdk senderAddress is empty");this.assertLuanchpadConfig();const i=p(n),{clmm_args:s}=e,o=new y;o.setSender(this.sdk.ClmmSDK.senderAddress);const a=[e.coin_type_sale,e.coin_type_raise];if(s){const c=s.opposite?j.priceToSqrtPriceX64(u(1).div(s.current_price),s.raise_decimals,s.sale_decimals).toString():j.priceToSqrtPriceX64(u(s.current_price),s.sale_decimals,s.raise_decimals).toString(),d=BigInt(c)<BigInt(s.clmm_sqrt_price),l=s.opposite?d?e.coin_type_raise:e.coin_type_sale:d?e.coin_type_sale:e.coin_type_raise,m=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,l);let f=O.calculateTotalBalance(m);O.isSuiCoin(l)&&(f-=BigInt(2e8));const w=(r=G.buildCoinInputForAmount(o,m,f,l))==null?void 0:r.transactionArgument,I=s.opposite?d?"settle_with_reverse_clmm_only_with_a":"settle_with_reverse_clmm_only_with_b":d?"settle_only_with_a":"settle_only_with_b",P=[o.pure(e.pool_address),o.pure(p(t).config_cap_id),o.pure(s.clmm_pool_address),o.pure(i.global_config_id),o.pure(c),w,o.pure(g)];o.moveCall({target:`${t.published_at}::${L}::${I}`,typeArguments:a,arguments:P})}else o.moveCall({target:`${t.published_at}::${L}::settle`,typeArguments:a,arguments:[o.pure(e.pool_address),o.pure(p(t).config_cap_id),o.pure(g)]});return o}creatWithdrawPayload(e){const{launchpad:t}=this.sdk.sdkOptions,n=new y,i=[e.coin_type_sale,e.coin_type_raise],s=[n.object(e.pool_address),n.object(p(t).config_cap_id),n.object(g)];return e.sale_amount>BigInt(0)&&n.moveCall({target:`${t.published_at}::${L}::withdraw_sale`,typeArguments:i,arguments:s}),e.raise_amount>BigInt(0)&&n.moveCall({target:`${t.published_at}::${L}::withdraw_raise`,typeArguments:i,arguments:s}),n}addUserToWhitelisPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const n=new y,i=[e.coin_type_sale,e.coin_type_raise];return e.user_addrs.forEach(s=>{const o=[n.object(p(t).admin_cap_id),n.object(p(t).config_cap_id),n.object(e.pool_address),n.object(s),n.pure(e.safe_limit_amount),n.object(g)];n.moveCall({target:`${t.published_at}::${L}::add_user_to_whitelist`,typeArguments:i,arguments:o})}),n}updateWhitelistCapPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const n=new y,i=[e.coin_type_sale,e.coin_type_raise];return e.safe_limit_amount>0&&n.moveCall({target:`${t.published_at}::${L}::update_whitelist_member_safe_limit_amount`,typeArguments:i,arguments:[n.object(p(t).admin_cap_id),n.object(p(t).config_cap_id),n.object(e.pool_address),n.pure(e.white_list_member),n.pure(e.safe_limit_amount),n.object(g)]}),e.hard_cap_total>0&&n.moveCall({target:`${t.published_at}::${L}::update_whitelist_hard_cap_total`,typeArguments:i,arguments:[n.object(p(t).admin_cap_id),n.object(p(t).config_cap_id),n.object(e.pool_address),n.pure(e.hard_cap_total),n.object(g)]}),n}creatRemoveWhitelistPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const n=new y,i=[e.coin_type_sale,e.coin_type_raise];return e.user_addrs.forEach(s=>{const o=[n.object(p(t).admin_cap_id),n.object(p(t).config_cap_id),n.object(e.pool_address),n.object(s),n.object(g)];n.moveCall({target:`${t.published_at}::${L}::remove_user_from_whitelist`,typeArguments:i,arguments:o})}),n}creatCancelPoolPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const n=new y,i=[e.coin_type_sale,e.coin_type_raise],s=[n.pure(p(t).admin_cap_id),n.pure(p(t).config_cap_id),n.pure(e.pool_address),n.pure(g)];return n.moveCall({target:`${t.published_at}::${L}::cancel`,typeArguments:i,arguments:s}),n}updateRecipientPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const n=new y,i=[e.coin_type_sale,e.coin_type_raise],s=[n.pure(p(t).admin_cap_id),n.pure(p(t).config_cap_id),n.pure(e.pool_address),n.pure(e.new_recipient),n.pure(g)];return n.moveCall({target:`${t.published_at}::${L}::update_recipient_address`,typeArguments:i,arguments:s}),n}updatePoolDuractionPayload(e){const{launchpad:t}=this.sdk.sdkOptions;this.assertLuanchpadConfig();const n=new y,i=[e.coin_type_sale,e.coin_type_raise],s=[n.pure(p(t).admin_cap_id),n.pure(p(t).config_cap_id),n.pure(e.pool_address),n.pure(e.activity_duration),n.pure(e.settle_duration),n.pure(e.lock_duration),n.pure(g)];return n.moveCall({target:`${t.published_at}::${L}::update_pool_duration`,typeArguments:i,arguments:s}),n}creatUnlockNftPayload(e){const{launchpad:t}=this.sdk.sdkOptions;if(p(t)===void 0)throw Error("getPackagerConfigs(launchpad)  is null");const n=new y,i=[e.nft_type],s=[n.pure(e.lock_nft),n.pure(g)];return n.moveCall({target:`${t.published_at}::lock::unlock_nft`,typeArguments:i,arguments:s}),n}async isAdminCap(e){const{launchpad:t}=this._sdk.sdkOptions;if(p(t)===void 0)throw Error("launchpad config is empty");const n=`${e}_isAdminCap`,i=this.getCache(n);if(i)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:p(t).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(s);const o=Ie(s),a=Ce(s);let r=!1;return a&&o&&b(o).source_address===`${t.package_id}::config::AdminCap`&&(r=z(a.AddressOwner)===z(e)),this.updateCache(n,r,C),r}async isWhiteListUser(e,t){const n={type:"address",value:t};try{const i=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:n});return!!(i&&i.data)}catch{return!1}}async getPurchaseAmount(e,t){var i;const n={type:"address",value:t};try{const s=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:n}),o=T(s);if(console.log(o),o)return(i=o==null?void 0:o.value)==null?void 0:i.fields}catch{}return{safe_limit_amount:"0",safe_purchased_amount:"0"}}async getPurchaseMarks(e,t=[],n=!0){const{launchpad:i}=this._sdk.sdkOptions,s=`${t}_getPurchaseMark`,o=this.getCache(s,n);if(!n&&o!==void 0)return o;let a=null;const r=[];for(;;){const c=await this._sdk.ClmmSDK.fullClient.getOwnedObjects({owner:e,options:{showType:!0,showContent:!0,showDisplay:!0},cursor:a});for(const d of c.data){const{fields:l}=d.data.content;if(b(H(d)).source_address===`${i.package_id}::pool::PurchaseMark`){console.log("fields: ",l);const f={id:l.id.id,pool_id:b(l.pool_id).address,purchased_raise_amount:l.purchase_total,obtain_sale_amount:l.obtain_sale_amount,used_raise_amount:l.used_raise_amount};t.length>0?t.includes(f.pool_id)&&r.push(f):r.push(f)}}if(c.hasNextPage)a=c.nextCursor;else break}return this.updateCache(s,r,C),r}async getSettleEvent(e){const{launchpad:t}=this._sdk.sdkOptions,n=`${e}_getPurchaseMark`,i=this.getCache(n);if(i!==void 0)return i;const s=await M(this._sdk.ClmmSDK,{MoveEventType:`${t.package_id}::pool::SettleEvent`});for(const o of s.data){const a=o.parsedJson;if(e===ee(a.pool_id)){const r={pool_id:a.pool_id,settle_price:a.settle_price,unused_sale:a.unused_sale,unused_raise:a.unused_raise,white_purchase_total:a.white_purchase_total};return this.updateCache(n,r,C),r}}}buildLaunchpadCoinType(e,t){return Ee(this._sdk.sdkOptions.launchpad.package_id,"pool",dt,[e,t])}assertLuanchpadConfig(){const{launchpad:e}=this.sdk.sdkOptions;if(p(e)===void 0)throw Error("sdk getPackagerConfigs(launchpad) is null")}updateCache(e,t,n=ie){let i=this._cache[e];i?(i.overdueTime=B(n),i.value=t):i=new oe(t,B(n)),this._cache[e]=i}getCache(e,t=!1){const n=this._cache[e];if(!t&&(n!=null&&n.isValid()))return n.value;delete this._cache[e]}},Y=class{static buildPoolImmutables(e){const{fields:t}=e.value.fields.value;return{clmm_pool_id:b(t.clmm_pool_id).address,bonus_type:b(t.bonus_type.fields.name).source_address,pool_id:b(t.pool_id).address,coinTypeA:b(t.coin_type_a.fields.name).source_address,coinTypeB:b(t.coin_type_b.fields.name).source_address}}static buildPoolState(e){const t=T(e),n=[];return t.config.fields.contents.forEach(s=>{n.push({rate:Number(u(s.fields.key).div(de)),multiplier:Number(u(s.fields.value).div(de))})}),{balance:t.balance,config:n,is_open:t.is_open,index:Number(t.index),start_time:Number(t.start_time),interval_day:Number(t.interval_day),minimum_percent_to_reward:Number(u(t.minimum_percent_to_reward).div(de)),rewarders:{rewarder_handle:t.rewarders.fields.id.id,size:Number(t.rewarders.fields.size)},whale_nfts:{whale_nfts_handle:t.whale_nfts.fields.id.id,size:Number(t.whale_nfts.fields.size)},points:{point_handle:t.points.fields.id.id,size:Number(t.points.fields.size)}}}static buildMarkerPositions(e){const{contents:t}=e.value.fields.value.fields,n=[],i=e.id.id;return t.forEach(s=>{const{key:o,value:a}=s.fields,r={id:o,period_id:i,bonus_num:a.fields.bonus_num,point:a.fields.point,is_burn:a.fields.is_burn,point_after_multiplier:a.fields.point_after_multiplier,percent:Number(u(a.fields.percent).div(de)),fee_share_rate:0,is_redeemed:a.fields.is_redeemed};n.push(r)}),n}static buildPoolBonusInfo(e){const{fields:t,type:n}=e.value.fields.value;return{type:n,time:Number(t.time),settle_time:Number(t.settle_time),settled_num:t.settled_num,is_settled:t.is_settled,basis_bonus:t.basis_bonus,total_bonus:t.total_bonus,is_vacant:t.is_vacant,redeemed_num:t.redeemed_num}}static getBonusPercent(e,t){let n=0;for(const i of e)t>=i.rate&&i.rate>n&&(n=i.multiplier);return n}},Re="router",Nt=class{constructor(e){S(this,"_sdk");S(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e=!1){var o;const{maker_bonus:t}=this._sdk.sdkOptions,n=`${t.package_id}_getPoolImmutables`,i=this.getCache(n,e),s=[];if(i!==void 0)s.push(...i);else{const a=[];(o=(await Ae(this._sdk.ClmmSDK,p(t).maker_pool_handle)).data)==null||o.forEach(d=>{a.push(d.objectId)});const c=await J(this._sdk.ClmmSDK,a,{showContent:!0});for(const d of c){const l=T(d);l&&s.push(Y.buildPoolImmutables(l))}}return s}async getPoolImmutable(e){const{maker_bonus:t}=this._sdk.sdkOptions,n=`${t.package_id}_getPoolImmutables`,i=this.getCache(n);if(i!==void 0){const a=i.filter(r=>e===r.pool_id);if(a.length>0)return a[0]}const s=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:p(t).maker_pool_handle,name:{type:"0x2::object::ID",value:e}}),o=T(s);return Y.buildPoolImmutables(o)}async getPools(){const e=[],t=await this.getPoolImmutables(),n=t.map(o=>o.pool_id),i=await J(this._sdk.ClmmSDK,n,{showType:!0,showContent:!0});let s=0;for(const o of i){const a=Y.buildPoolState(o);if(a){const r={...t[s],...a};e.push(r);const c=`${r.pool_id}_getPoolObject`;this.updateCache(c,r,C)}s+=1}return e}async getPool(e,t=!0){const n=`${e}_getPoolObject`,i=this.getCache(n,t),s=await this.getPoolImmutable(e);if(i!==void 0)return i;const o=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),a=Y.buildPoolState(o),r={...s,...a};return this.updateCache(n,r,C),r}async getPoolHandleId(e){const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),n=T(t);return n?n.list.fields.id.id:""}async getMakerPoolPeriods(e,t=!1){const n=[],i=`${e.pool_id}_getMakerPoolPeriods`,s=this.getCache(i,t);return s!==void 0?s:((await Ae(this._sdk.ClmmSDK,e.whale_nfts.whale_nfts_handle)).data.forEach(a=>{const r={id:a.objectId,start_time:0,end_time:0,period:Number(a.name.value)};r.start_time=Number(u(e.start_time).add(u(e.interval_day).mul(24*3600).mul(r.period)).toFixed(0,$.ROUND_DOWN)),r.end_time=Number(u(r.start_time).add(u(e.interval_day).mul(24*3600)).toFixed(0,$.ROUND_DOWN)),n.push(r)}),this.updateCache(i,n,C),n)}async getMakerBonusInitConfigs(){var i;const{package_id:e}=this.sdk.sdkOptions.maker_bonus,t=(i=await M(this._sdk.ClmmSDK,{MoveEventType:`${e}::config::InitEvent`}))==null?void 0:i.data,n={maker_config_id:"",maker_pool_handle:""};return t.length>0&&t.forEach(s=>{const o=s.parsedJson;o&&(n.maker_config_id=o.config_id)}),n.maker_pool_handle=await this.getPoolHandleId(n.maker_config_id),n}async getPoolMarkerPositionList(e,t,n=!1){const i={},s=[];n||t.forEach(o=>{const a=`${e}_${o.period}_getPoolMarkerPositionList`,r=this.getCache(a);r!==void 0?i[o.period]=r:(i[o.period]=[],s.push(o))});try{s.length>0&&(await J(this._sdk.ClmmSDK,s.map(r=>r.id),{showContent:!0})).forEach(r=>{const c=T(r),d=Y.buildMarkerPositions(c);if(d.length>0){const{period_id:l}=d[0],m=t.filter(f=>f.id===l)[0];i[m.period]=d}});const o=[];for(const a in i)i[a].forEach(c=>{o.push(c)});if(o.length>0){const a=await this._sdk.ClmmSDK.Position.getSipmlePositionList(o.map(r=>r.id));for(const r of o)for(const c of a)if(r.id===c.pos_object_id){r.clmm_position=c;break}}}catch(o){console.log(o)}for(const o in i){const a=`${e}_${o}_getPoolMarkerPositionList`;this.updateCache(a,i[o],C)}return i}async updateXCetusRewarderAndFee(e,t,n){const i=await this.calculateTotalPointsAfterMultiper(e,n);for(const s of t)await this.calculateXCetusRewarder(e,s,n.period,i);return t}async calculateXCetusRewarder(e,t,n,i){const s=await this.getPoolBonusInfo(e.rewarders.rewarder_handle,n),{fee_share_rate:o}=this.calculateFeeShareRate(e,t,i),a=u(o).mul(s.total_bonus);return t.is_redeemed?t.bonus_num="0":t.bonus_num=a.toString(),t.bonus_num}calculateFeeShareRate(e,t,n){const i=Y.getBonusPercent(e.config,t.percent),s=u(t.point).mul(i),o=u(s).div(n);return t.point_after_multiplier=s.toString(),t.fee_share_rate=Number(o),{fee_share_rate:Number(o),points_after_multiper:s.toString()}}async calculateTotalPointsAfterMultiper(e,t){const n=await this.getPoolMarkerPositionList(e.whale_nfts.whale_nfts_handle,[t]);let i=u(0);const s=n[t.period];for(const o of s){const a=Y.getBonusPercent(e.config,o.percent),r=u(o.point).mul(a);i=i.add(r)}return i.toString()}async calculateAllXCetusRewarder(e){const t=this._sdk.ClmmSDK.senderAddress;let n=u(0);const i=[];for(const s of e){const o=await this._sdk.MakerModule.getMakerPoolPeriods(s),a=await this._sdk.MakerModule.getPoolMarkerPositionList(s.whale_nfts.whale_nfts_handle,o),r=[];for(const c of o){const d=a[c.period].filter(l=>{var m;return t.length===0?!1:((m=l.clmm_position)==null?void 0:m.owner)===t});d.length>0&&(await this._sdk.MakerModule.updateXCetusRewarderAndFee(s,d,c),d.forEach(l=>{var m;((m=l.clmm_position)==null?void 0:m.position_status)===Ve.Exists&&u(l.bonus_num).greaterThan(0)&&(n=n.add(l.bonus_num),r.includes(l.clmm_position.pos_object_id)||r.push(l.clmm_position.pos_object_id))}))}i.push({bonus_type:s.bonus_type,pool_id:s.pool_id,nft_ids:r})}return{claimtotal:n,claimRecord:i}}async getPoolBonusInfo(e,t,n=!1){const i=`${e}_${t}_getPoolBonusInfo`,s=this.getCache(i,n);if(s!==void 0)return s;const o=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"u64",value:t.toString()}}),a=T(o),r=Y.buildPoolBonusInfo(a);return this.updateCache(i,r,ie),r}claimPayload(e){const{maker_bonus:t,xcetus:n}=this.sdk.sdkOptions,i=new y;return i.moveCall({target:`${t.published_at}::${Re}::claim`,typeArguments:[e.bonus_type],arguments:[i.pure(p(t).maker_config_id),i.pure(e.market_pool_id),i.pure(e.position_nft_id),i.pure(e.phase),i.pure(p(n).lock_manager_id),i.pure(p(n).xcetus_manager_id),i.pure(e.ve_nft_id)]}),i}claimAllPayload(e){const{maker_bonus:t,xcetus:n}=this.sdk.sdkOptions,i=new y;return e.whale_nfts.forEach(s=>{s.nft_ids.forEach(o=>{i.moveCall({target:`${t.published_at}::${Re}::claim_all`,typeArguments:[s.bonus_type],arguments:[i.object(p(t).maker_config_id),i.object(s.pool_id),i.object(o),i.object(p(n).lock_manager_id),i.object(p(n).xcetus_manager_id),i.object(e.ve_nft_id)]})})}),i}updateCache(e,t,n=ie){let i=this._cache[e];i?(i.overdueTime=B(n),i.value=t):i=new oe(t,B(n)),this._cache[e]=i}getCache(e,t=!1){const n=this._cache[e];if(!t&&(n!=null&&n.isValid()))return n.value;delete this._cache[e]}},re="router",Ue="router",me=24*3600,Se=1e3,U=1e11,te=class{static buildVeNFTDividendInfo(e){const t={id:e.id.id,ve_nft_id:e.name,rewards:[]};return e.value.fields.value.fields.dividends.fields.contents.forEach(n=>{const i=[];n.fields.value.fields.contents.forEach(s=>{i.push({coin_type:b(s.fields.key.fields.name).source_address,amount:s.fields.value})}),t.rewards.push({period:Number(n.fields.key),rewards:i})}),t}static buildDividendManager(e){const t={id:e.id.id,dividends:{id:e.dividends.fields.id.id,size:e.dividends.fields.size},venft_dividends:{id:e.venft_dividends.fields.id.id,size:e.venft_dividends.fields.size},bonus_types:[],start_time:Number(e.start_time),interval_day:Number(e.interval_day),balances:{id:e.balances.fields.id.id,size:e.balances.fields.size},is_open:e.is_open};return e.bonus_types.forEach(n=>{t.bonus_types.push(b(n.fields.name).source_address)}),t}static buildLockUpManager(e){return{id:e.id.id,balance:e.balance,treasury_manager:e.treasury_manager,extra_treasury:e.extra_treasury,lock_infos:{lock_handle_id:e.lock_infos.fields.id.id,size:Number(e.lock_infos.fields.size)},type_name:Pe(e.type_name.fields.name),min_lock_day:Number(e.min_lock_day),max_lock_day:Number(e.max_lock_day),package_version:Number(e.package_version),max_percent_numerator:Number(e.max_percent_numerator),min_percent_numerator:Number(e.min_percent_numerator)}}static buildLockCetus(e){const t=e.fields,n={id:t.id.id,type:b(e.type).source_address,locked_start_time:Number(t.locked_start_time),locked_until_time:Number(t.locked_until_time),cetus_amount:t.balance,xcetus_amount:"0",lock_day:0};return n.lock_day=(n.locked_until_time-n.locked_start_time)/me,n}static getAvailableXCetus(e,t){let n=u(0);return t.forEach(i=>{n=n.add(i.xcetus_amount)}),u(e.xcetus_balance).sub(n).toString()}static getWaitUnLockCetuss(e){return e.filter(t=>!te.isLocked(t))}static getLockingCetuss(e){return e.filter(t=>te.isLocked(t))}static isLocked(e){return e.locked_until_time>Date.parse(new Date().toString())/1e3}static getNextStartTime(e){const t=Date.now()/1e3,{start_time:n,interval_day:i}=e,s=Math.ceil((t-n)/(i*me));return n+s*i*me}},$t=class{constructor(e){S(this,"_sdk");S(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getOwnerVeNFT(e,t=!0){const{xcetus:n}=this.sdk.sdkOptions,i=`${e}_getLockUpManagerEvent`,s=this.getCache(i,t);if(s!==void 0)return s;let o;const a=`${n.package_id}::xcetus::VeNFT`;return(await se(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0,showDisplay:!0},filter:{StructType:a}})).data.forEach(c=>{const d=b(H(c)).source_address;if(d===a&&c.data&&c.data.content){const{fields:l}=c.data.content;o={...Me(c),id:l.id.id,index:l.index,type:d,xcetus_balance:l.xcetus_balance},this.updateCache(i,o,C)}}),o}async getOwnerLockCetuss(e){const{xcetus:t}=this.sdk.sdkOptions,n=[],i=`${t.package_id}::lock_coin::LockedCoin<${this.buileCetusCoinType()}>`,s=await se(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0},filter:{StructType:i}});for(const o of s.data)if(b(H(o)).source_address===i&&o.data){const r=te.buildLockCetus(o.data.content);r.xcetus_amount=await this.getXCetusAmount(r.id),n.push(r)}return n}async getLockCetus(e){var n;const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0}});if((n=t.data)!=null&&n.content){const i=te.buildLockCetus(t.data.content);return i.xcetus_amount=await this.getXCetusAmount(i.id),i}}async getOwnerCetusCoins(e){return await this._sdk.ClmmSDK.getOwnerCoinAssets(e,this.buileCetusCoinType())}mintVeNFTPayload(){const{xcetus:e}=this.sdk.sdkOptions,t=new y;return t.moveCall({target:`${e.published_at}::${re}::mint_venft`,typeArguments:[],arguments:[t.pure(p(e).xcetus_manager_id)]}),t}async convertPayload(e){const{xcetus:t}=this.sdk.sdkOptions,n=new y,i=this.buileCetusCoinType(),s=await G.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,n,BigInt(e.amount),i);return e.venft_id===void 0?n.moveCall({target:`${t.published_at}::${re}::mint_and_convert`,typeArguments:[],arguments:[n.object(p(t).lock_manager_id),n.object(p(t).xcetus_manager_id),s,n.pure(e.amount)]}):n.moveCall({target:`${t.published_at}::${re}::convert`,typeArguments:[],arguments:[n.object(p(t).lock_manager_id),n.object(p(t).xcetus_manager_id),s,n.pure(e.amount),n.pure(e.venft_id)]}),n}redeemLockPayload(e){const{xcetus:t}=this.sdk.sdkOptions,n=new y;return n.moveCall({target:`${t.published_at}::${re}::redeem_lock`,typeArguments:[],arguments:[n.pure(p(t).lock_manager_id),n.pure(p(t).xcetus_manager_id),n.pure(e.venft_id),n.pure(e.amount),n.pure(e.lock_day),n.pure(g)]}),n}redeemPayload(e){const{xcetus:t}=this.sdk.sdkOptions,n=new y;return n.moveCall({target:`${t.published_at}::${re}::redeem`,typeArguments:[],arguments:[n.pure(p(t).lock_manager_id),n.pure(p(t).xcetus_manager_id),n.pure(e.venft_id),n.pure(e.lock_id),n.pure(g)]}),n}redeemDividendPayload(e,t){const{xcetus:n,xcetus_dividends:i}=this.sdk.sdkOptions,s=new y;return t.forEach(o=>{s.moveCall({target:`${n.published_at}::${Ue}::redeem`,typeArguments:[o],arguments:[s.object(p(i).dividend_manager_id),s.object(e)]})}),s}redeemDividendV2Payload(e,t){const{xcetus_dividends:n}=this.sdk.sdkOptions,i=new y;return t.forEach(s=>{i.moveCall({target:`${n.published_at}::${Ue}::redeem_v2`,typeArguments:[s],arguments:[i.object(p(n).dividend_manager_id),i.object(e),i.object(g)]})}),i}buileCetusCoinType(){return`${this.sdk.sdkOptions.cetus_faucet.package_id}::cetus::CETUS`}cancelRedeemPayload(e){const{xcetus:t}=this.sdk.sdkOptions,n=new y;return n.moveCall({target:`${t.published_at}::${re}::cancel_redeem_lock`,typeArguments:[],arguments:[n.pure(p(t).lock_manager_id),n.pure(p(t).xcetus_manager_id),n.pure(e.venft_id),n.pure(e.lock_id),n.pure(g)]}),n}async getInitConfigs(){var a,r;const{package_id:e}=this.sdk.sdkOptions.xcetus,t=`${e}_getInitFactoryEvent`,n=this.getCache(t);if(n!==void 0)return n;const i=(a=await M(this._sdk.ClmmSDK,{MoveEventType:`${e}::xcetus::InitEvent`}))==null?void 0:a.data,s={xcetus_manager_id:"",lock_manager_id:"",lock_handle_id:""};i.length>0&&i.forEach(c=>{const d=c.parsedJson;d&&(s.xcetus_manager_id=d.xcetus_manager)});const o=(r=await M(this._sdk.ClmmSDK,{MoveEventType:`${e}::locking::InitializeEvent`}))==null?void 0:r.data;return o.length>0&&o.forEach(c=>{const d=c.parsedJson;d&&(s.lock_manager_id=d.lock_manager)}),s.lock_handle_id=(await this.getLockUpManager()).lock_infos.lock_handle_id,this.updateCache(t,s,C),s}async getLockUpManager(e=!1){const{lock_manager_id:t}=p(this.sdk.sdkOptions.xcetus),n=`${t}_getLockUpManager`,i=this.getCache(n,e);if(i!==void 0)return i;const s=await this.sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=te.buildLockUpManager(T(s));return this.updateCache(n,o,C),o}async getDividendConfigs(){var o;const{package_id:e}=this.sdk.sdkOptions.xcetus_dividends,t=`${e}_getDividendManagerEvent`,n=this.getCache(t);if(n!==void 0)return n;const i=(o=await M(this._sdk.ClmmSDK,{MoveEventType:`${e}::dividend::InitEvent`}))==null?void 0:o.data,s={dividend_manager_id:"",dividend_admin_id:"",dividend_settle_id:""};return i.length>0&&i.forEach(a=>{const r=a.parsedJson;r&&(s.dividend_manager_id=r.manager_id,s.dividend_admin_id=r.admin_id,s.dividend_settle_id=r.settle_id,this.updateCache(t,s,C))}),s}async getDividendManager(e=!1){const{dividend_manager_id:t}=p(this._sdk.sdkOptions.xcetus_dividends),n=`${t}_getDividendManager`,i=this.getCache(n,e);if(i!==void 0)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=T(s),a=te.buildDividendManager(o);return this.updateCache(n,a,C),a}async getXcetusManager(e=!0){const{xcetus_manager_id:t}=p(this._sdk.sdkOptions.xcetus),n=`${t}_getXcetusManager`,i=this.getCache(n,e);if(i)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=T(s),a={id:o.id.id,index:Number(o.index),has_venft:{handle:o.has_venft.fields.id.id,size:o.has_venft.fields.size},nfts:{handle:o.nfts.fields.id.id,size:o.nfts.fields.size},total_locked:o.total_locked,treasury:o.treasury.fields.total_supply.fields.value};return this.updateCache(n,a),a}async getVeNFTDividendInfo(e,t){try{const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),i=T(n);return te.buildVeNFTDividendInfo(i)}catch{return}}async redeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const n=await this.getLockUpManager(),i=u(U).mul(u(n.max_lock_day).sub(u(t))).mul(u(n.max_percent_numerator).sub(u(n.min_percent_numerator))).div(u(n.max_lock_day).sub(u(n.min_lock_day))),s=u(U).mul(u(n.max_percent_numerator)).sub(i).div(u(Se)).div(U);return{amountOut:u(s).mul(u(e)).round().toString(),percent:s.toString()}}async reverseRedeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const n=await this.getLockUpManager(),i=u(U).mul(u(n.max_lock_day).sub(u(t))).mul(u(n.max_percent_numerator).sub(u(n.min_percent_numerator))).div(u(n.max_lock_day).sub(u(n.min_lock_day))),s=u(U).mul(u(n.max_percent_numerator)).sub(i).div(u(Se)).div(U);return{amountOut:u(e).div(s).toFixed(0,$.ROUND_UP),percent:s.toString()}}async getXCetusAmount(e){const{lock_handle_id:t}=p(this._sdk.sdkOptions.xcetus),n=`${e}_getXCetusAmount`,i=this.getCache(n);if(i!==void 0)return i;try{const s=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:t,name:{type:"0x2::object::ID",value:e}}),o=T(s);if(o){const{xcetus_amount:a}=o.value.fields.value.fields;return this.updateCache(n,a,C),a}}catch{}return"0"}async getVeNftAmount(e,t){try{const n=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),i=T(n);if(i){const{lock_amount:s,xcetus_amount:o}=i.value.fields.value.fields;return{lock_amount:s,xcetus_amount:o}}}catch{}return{lock_amount:"0",xcetus_amount:"0"}}async getPhaseDividendInfo(e,t=!1){const i=(await this.getDividendManager()).dividends.id,s=`${i}_${e}_getPhaseDividendInfo`,o=this._sdk.getCache(s,t);if(o)return o;const a=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:i,name:{type:"u64",value:e}}),r=T(a),c=r.value.fields.value.fields,d=c.redeemed_num.fields.contents.map(h=>({name:h.fields.key.fields.name,value:h.fields.value})),l=c.bonus_types.map(h=>h.fields.name),m=c.bonus.fields.contents.map(h=>({name:h.fields.key.fields.name,value:h.fields.value})),f={id:he(a),phase:r.name,settled_num:c.settled_num,register_time:c.register_time,redeemed_num:d,is_settled:c.is_settled,bonus_types:l,bonus:m,phase_end_time:""};return this.updateCache(s,f),f}updateCache(e,t,n=ie){let i=this._cache[e];i?(i.overdueTime=B(n),i.value=t):i=new oe(t,B(n)),this._cache[e]=i}getCache(e,t=!1){const n=this._cache[e];if(!t&&(n!=null&&n.isValid()))return n.value;delete this._cache[e]}},Et="factory",R="oversubscribe_pool",Qe=1e6,ve=1e18,ce="router",Xe="router",x=class{static buildIdoPoolImmutables(e){return{pool_address:ee(e.pool_id),coin_type_sale:b(e.sale_coin_type.name).full_address,coin_type_raise:b(e.raise_coin_type.name).full_address,tick_spacing:Number(e.tick_spacing),total_supply:e.total_supply,min_purchase:e.min_purchase_amount,max_purchase:e.max_purchase_amount}}static buildIdoPool(e){const t=H(e),n=b(t),i=T(e),s={pool_address:ee(i.id.id),coin_type_sale:n.type_arguments[0],coin_type_raise:n.type_arguments[1],tick_spacing:Number(i.tick_spacing),total_supply:i.total_supply,min_purchase:i.min_purchase_amount,max_purchase:i.max_purchase_amount},o={start_time:Number(i.duration_manager.fields.start_time),lock_up_duration:Number(i.duration_manager.fields.lock_up_duration),purchase_duration:Number(i.duration_manager.fields.purchase_duration),end_time:0};o.end_time=o.start_time+o.purchase_duration;const a={complete_raise_limit:i.complete_raise_limit,liquidity_injection_ratio:u(i.liquidity_injection_ratio).div(Qe).toNumber(),current_sqrt_price_min:i.current_sqrt_price_min,current_sqrt_price_max:i.current_sqrt_price_max,owner:i.owner,sale_coin_amount:i.sale_coin,raise_coin_amount:i.raise_coin,price:i.price,current_price:i.price,duration_summary:o,is_cancelled:i.is_cancelled,is_liquidity_injected:i.is_liquidity_injected,liquidity_used_raise_amount:i.liquidity_used_raise_amount,liquidity_used_sale_amount:i.liquidity_used_sale_amount,purchase_summary:{size:Number(i.purchase_manager.fields.purchases.fields.size),purchase_handle:i.purchase_manager.fields.purchases.fields.id.id},total_purchase_amount:i.total_purchase_amount,white_summary:{white_list_id:i.white_list.fields.id.id,protection_limit_used:i.white_list.fields.protection_limit_used,protection_hard_cap:i.white_list.fields.protection_hard_cap,white_handle:i.white_list.fields.addresses.fields.id.id,size:Number(i.white_list.fields.addresses.fields.size)},pool_status:"Upcoming",max_raise_amount:"",sale_decimals:0,raise_decimals:0,is_withdrawn:i.is_withdrawn};return x.updatePoolStatus(a),{...s,...a}}static is_init_period(e){return Number(u(Date.now()/1e3).toFixed(0))<e.start_time}static is_purchase_period(e){const t=Number(u(Date.now()/1e3).toFixed(0));return t>=e.start_time&&t<=e.start_time+e.purchase_duration}static is_claim_period(e){const t=Number(u(Date.now()/1e3).toFixed(0)),n=e.start_time+e.purchase_duration;return t>n}static is_can_inject_liquidity(e){return!e.is_cancelled&&e.liquidity_injection_ratio!==0&&x.is_claim_period(e.duration_summary)&&!e.is_liquidity_injected}static is_can_withdraw(e){return e.is_withdrawn?!1:x.is_sale_failed(e)?!0:(e.liquidity_injection_ratio===0||e.is_liquidity_injected)&&x.is_claim_period(e.duration_summary)}static is_sale_failed(e){return!!(e.is_cancelled||x.is_claim_period(e.duration_summary)&&u(e.total_purchase_amount).lessThan(e.complete_raise_limit))}static buildPurchaseInfo(e){return{...e.value.fields.value.fields,owner:e.name}}static calculateRedeemAmount(e,t){let n,i;if(x.is_sale_failed(e))n="0",i="0";else if(t.is_redeemed)n=t.obtained_sale_amount,i=t.used_raise_amount;else if(u(e.total_purchase_amount).lessThanOrEqualTo(e.max_raise_amount))n=u(t.purchased_raise_amount).mul(ve).div(e.price).toString(),i=t.purchased_raise_amount;else{const o=x.redeemForSaleOversubcribe(e,t);n=o.user_obtained_sale_amount,i=o.user_used_raise_amount_ceil}n=$.floor(n);const s=$.floor(u(t.purchased_raise_amount).sub(i).toString());return{obtained_sale_amount:n,refunded_raise_amount:s}}static calculateWithdrawAmount(e){let t,n;const i=u(e.total_supply).mul(e.liquidity_injection_ratio);if(x.is_sale_failed(e))t="0",n=u(i).add(e.total_supply);else{const{max_raise_amount:s}=e;u(e.total_purchase_amount).greaterThanOrEqualTo(s)?(t=u(s).sub(e.liquidity_used_raise_amount).toString(),n="0"):(t=u(e.total_purchase_amount).sub(e.liquidity_used_raise_amount),n=u(e.total_supply).add(i).sub(e.liquidity_used_sale_amount).sub(x.get_sold_amount(e)))}return{obtained_raise_amount:$.floor(t).toString(),refunded_sale_amount:$.ceil(n).toString()}}static get_sold_amount(e){return u(e.total_purchase_amount).greaterThanOrEqualTo(e.max_raise_amount)?e.total_supply:u(e.total_purchase_amount).mul(ve).div(e.price)}static redeemForSaleOversubcribe(e,t){const n=t.protection_raise_amount,i=u(t.purchased_raise_amount).sub(n),s=e.max_raise_amount,{protection_limit_used:o}=e.white_summary,a=u(s).sub(o),r=u(e.total_purchase_amount).sub(o),c=$.ceil(i.mul(a).div(r).add(n)),d=$.floor(i.mul(a).div(r).add(n));return{user_obtained_sale_amount:$.floor(u(e.total_supply).mul(d).div(s)),user_used_raise_amount_ceil:c}}static raiseTotalAmount(e){const t=u(e.sale_decimals-e.raise_decimals).abs().toNumber();return e.sale_decimals>e.raise_decimals?u(e.total_supply).mul(e.current_price).div(u(10).pow(u(t))).toString():u(e.total_supply).mul(e.current_price).mul(u(10).pow(u(t))).toString()}static updatePoolStatus(e){const t=Number(u(Date.now()/1e3).toFixed(0)),n=e.duration_summary,i=n.start_time+n.purchase_duration;e.is_cancelled?e.pool_status="Canceled":t<n.start_time?e.pool_status="Upcoming":t>n.start_time&&t<i?e.pool_status="Live":u(e.total_purchase_amount).lessThan(e.complete_raise_limit)?e.pool_status="Failed":e.pool_status="Ended"}static async calculatePoolUiPrice(e,t){const n=await e.ClmmSDK.CetusConfig.getTokenListByCoinTypes([t.coin_type_sale,t.coin_type_raise]),i=n[t.coin_type_sale].decimals,s=n[t.coin_type_raise].decimals;t.current_price=E.priceFixToReal(Number(u(t.price).div(u(ve)).toString()),i,s).toString(),t.sale_decimals=i,t.raise_decimals=s,t.max_raise_amount=this.raiseTotalAmount(t)}},Rt=class{constructor(e){S(this,"_sdk");this._sdk=e}async getPools(e=[],t=!1){const n=[];if(e.length>0){if(e.filter(s=>{const o=`${s}_getPool`,a=this._sdk.getCache(o,t);return a?(n.push(a),!1):!0}).length>0){const s=await J(this._sdk.ClmmSDK,e,{showType:!0,showContent:!0});for(const o of s){const a=await this.buildIdoWarpPool(o);a&&n.push(a)}}}else{const i=await this._sdk.Launchpad.getPools(),s=await this._sdk.Ido.getPools();i.forEach(o=>{n.push({...o,version:"1"})}),s.forEach(o=>{n.push({...o,version:"2"})})}return n.forEach(i=>{const s=`${i.pool_address}_getPool`;this._sdk.updateCache(s,i)}),n}async getPool(e,t=!0){const n=`${e}_getPool`,i=this._sdk.getCache(n,t);if(i)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=await this.buildIdoWarpPool(s);return this._sdk.updateCache(n,o),o}async getJoinPools(e,t){const n=[],i=t.filter(o=>o.version==="1"),s=t.filter(o=>o.version==="2");if(i.length>0){const o=await this._sdk.Launchpad.getPurchaseMarks(e,i.map(a=>a.pool_address),!1);i.forEach(a=>{for(const r of o)if(r.pool_id===a.pool_address){n.push(a);break}})}for(const o of s)await this._sdk.Ido.getPurchaseInfo(o.purchase_summary.purchase_handle,e,!1)&&n.push(o);return n}async getOwnerPools(e,t){return t.filter(n=>n.owner===z(e))}async creatPurchasePayload(e,t){return e.version==="1"?await this._sdk.Launchpad.creatPurchasePayload({pool_address:e.pool_address,purchase_amount:t,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise}):await this._sdk.Ido.creatPurchasePayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,purchase_handle:e.purchase_summary.purchase_handle,raise_amount:t.toString()})}async creatRedeemPayload(e){return e.version==="1"?await this._sdk.Launchpad.creatClaimPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise}):await this._sdk.Ido.redeemPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,purchase_handle:e.purchase_summary.purchase_handle})}async creatWithdrawPayload(e){if(e.version==="1"){const n=await E.getWithdrawSale(e),i=await E.getWithdrawRaise(e);return this._sdk.Launchpad.creatWithdrawPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,sale_amount:BigInt(n),raise_amount:BigInt(i)})}return this._sdk.Ido.withdrawPayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise})}unlockNftPayload(e,t){return e.version==="1"?this._sdk.Launchpad.creatUnlockNftPayload(t):this._sdk.Ido.unlockNftPayload({lock_nft_id:t.lock_nft,nft_type:t.nft_type})}async getLockNFTList(e){let t=[];return e.version==="1"&&(t=await this._sdk.Launchpad.getLockNFTList(e.owner)),t=await this._sdk.Ido.getLockNFTList(e.owner),t.filter(i=>i.coin_type_a===e.coin_type_sale&&i.coin_type_b===e.coin_type_raise||i.coin_type_a===e.coin_type_raise&&i.coin_type_b===e.coin_type_sale)}async isWhiteListUser(e,t){return t.version==="1"?await this._sdk.Launchpad.isWhiteListUser(t.white_summary.white_handle,e):!!await this._sdk.Ido.getWhiteProtectionLimit(t.white_summary.white_handle,e)}async getPurchaseInfo(e,t){if(t.version==="1"){const i=await this._sdk.Launchpad.getPurchaseMarks(e,[t.pool_address]);return i.length>0?i[0]:void 0}return await this._sdk.Ido.getPurchaseInfo(t.purchase_summary.purchase_handle,e)}async getwhiteProtectionInfo(e,t,n=!1){if(t.version==="1")return await this._sdk.Launchpad.getPurchaseAmount(t.white_summary.white_handle,e);const i=await this._sdk.Ido.getPurchaseInfo(t.purchase_summary.purchase_handle,e,n);if(i)return{safe_limit_amount:i.protection_raise_limit,safe_purchased_amount:i.protection_raise_amount};const s=await this._sdk.Ido.getWhiteProtectionLimit(t.white_summary.white_handle,e,!1);return s?{safe_limit_amount:s,safe_purchased_amount:"0"}:{safe_limit_amount:"0",safe_purchased_amount:"0"}}async calculateWithdrawAmount(e){if(e.version==="1"){const t=await E.getHistoryWithdrawRaise(this._sdk,e),n=await E.getHistoryWithdrawSale(this._sdk,e);return{obtained_raise_amount:t,refunded_sale_amount:n}}return x.calculateWithdrawAmount(e)}async buildIdoWarpPool(e){const t=Ie(e);if(b(t).address===this._sdk.sdkOptions.ido.package_id){const n=x.buildIdoPool(e);return await x.calculatePoolUiPrice(this._sdk,n),{...n,version:"2"}}if(b(t).address===this._sdk.sdkOptions.launchpad.package_id){const n=E.buildLaunchPadPool(e);return await E.calculatePoolPrice(this._sdk,n),{...n,version:"1"}}}},ne=class{static buildVeNFTDividendInfo(e){const t={id:e.id.id,ve_nft_id:e.name,rewards:[]};return e.value.fields.value.fields.dividends.fields.contents.forEach(n=>{const i=[];n.fields.value.fields.contents.forEach(s=>{i.push({coin_type:b(s.fields.key.fields.name).source_address,amount:s.fields.value})}),t.rewards.push({period:Number(n.fields.key),rewards:i})}),t}static buildDividendManager(e){const t={id:e.id.id,dividends:{id:e.dividends.fields.id.id,size:e.dividends.fields.size},venft_dividends:{id:e.venft_dividends.fields.id.id,size:e.venft_dividends.fields.size},bonus_types:[],start_time:Number(e.start_time),interval_day:Number(e.interval_day),balances:{id:e.balances.fields.id.id,size:e.balances.fields.size},is_open:e.is_open};return e.bonus_types.forEach(n=>{t.bonus_types.push(b(n.fields.name).source_address)}),t}static buildLockUpManager(e){return{id:e.id.id,balance:e.balance,treasury_manager:e.treasury_manager,extra_treasury:e.extra_treasury,lock_infos:{lock_handle_id:e.lock_infos.fields.id.id,size:Number(e.lock_infos.fields.size)},type_name:Pe(e.type_name.fields.name),min_lock_day:Number(e.min_lock_day),max_lock_day:Number(e.max_lock_day),package_version:Number(e.package_version),max_percent_numerator:Number(e.max_percent_numerator),min_percent_numerator:Number(e.min_percent_numerator)}}static buildLockToken(e){const t=e.fields,n={id:t.id.id,type:b(e.type).source_address,locked_start_time:Number(t.locked_start_time),locked_until_time:Number(t.locked_until_time),token_amount:t.balance,xtoken_amount:"0",lock_day:0};return n.lock_day=(n.locked_until_time-n.locked_start_time)/me,n}static getAvailableXToken(e,t){let n=u(0);return t.forEach(i=>{n=n.add(i.xtoken_amount)}),u(e.xtoken_balance).sub(n).toString()}static getWaitUnLockTokens(e){return e.filter(t=>!ne.isLocked(t))}static getLockingTokens(e){return e.filter(t=>ne.isLocked(t))}static isLocked(e){return e.locked_until_time>Date.parse(new Date().toString())/1e3}static getNextStartTime(e,t=me){const n=Date.now()/1e3,{start_time:i,interval_day:s}=e,o=Math.ceil((n-i)/(s*t));return i+o*s*t}},Mt=class{constructor(e){S(this,"_sdk");S(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getPoolImmutables(e="all",t=!1){const{package_id:n}=this._sdk.sdkOptions.ido,i=`${n}_getPoolImmutables`,s=this.getCache(i,t),o={data:[],hasNextPage:!1},a=[];if(s!==void 0&&a.push(...s),a.length===0)try{const r=await M(this._sdk.ClmmSDK,{MoveEventType:`${n}::oversubscribe_pool::CreatePoolEvent`},e);r.data.forEach(c=>{const d=c.parsedJson;if(d){const l=x.buildIdoPoolImmutables(d);a.push(l)}}),o.hasNextPage=r.hasNextPage,o.nextCursor=r.nextCursor,this.updateCache(i,a,C)}catch(r){console.log("getPoolImmutables",r)}return o.data=a,o}async getPools(e=[],t=!1){const n=[];let i=[];e.length>0?i=[...e]:(await this.getPoolImmutables("all",t)).data.forEach(a=>{i.push(a.pool_address)});const s=await J(this.sdk.ClmmSDK,i,{showType:!0,showContent:!0});for(const o of s){const a=x.buildIdoPool(o);await x.calculatePoolUiPrice(this._sdk,a),n.push(a);const r=`${a.pool_address}_getPoolObject`;this.updateCache(r,a,C)}return n}async getPool(e,t=!0){const n=`${e}_getPoolObject`,i=this.getCache(n,t);if(i!==void 0)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0,showType:!0}}),o=x.buildIdoPool(s);return await x.calculatePoolUiPrice(this._sdk,o),this.updateCache(n,o),o}async getIdoConfigs(e=!1){var c;const{package_id:t}=this._sdk.sdkOptions.ido,n=`${t}_getInitEvent`,i=this.getCache(n,e);if(i!==void 0)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showPreviousTransaction:!0}}),o=ze(s),a=(c=await M(this._sdk.ClmmSDK,{Transaction:o}))==null?void 0:c.data,r={pools_id:"",admin_cap_id:"",package_version_id:""};return a.length>0&&(a.forEach(d=>{console.log("item: ",d);const l=d.parsedJson;if(l)switch(b(d.type).full_address){case`${t}::config::InitConfigEvent`:r.admin_cap_id=l.admin_cap_id,r.package_version_id=l.package_version_id;break;case`${t}::factory::InitFactoryEvent`:r.pools_id=l.pools_id;break}}),this.updateCache(n,r,C)),r}async getPurchaseInfo(e,t,n=!0){const i=`${e}_${t}_getPurchaseInfo`,s=this.getCache(i,n);if(s)return s;try{const o=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"address",value:t}}),a=x.buildPurchaseInfo(T(o));return this.updateCache(i,a,ie),a}catch{return}}async getLockNFT(e,t=!1){const n=`${e}_getLockNFT`,i=this.getCache(n,t);if(i!==void 0)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0,showDisplay:!0,showOwner:!0}});if(!s.error)return Le(s)}async getLockNFTList(e){var s;const{clmm_pool:t}=this._sdk.ClmmSDK.sdkOptions,{ido:n}=this._sdk.sdkOptions,i=[];try{const o=(s=await se(this._sdk.ClmmSDK,e,{filter:{StructType:`${n.package_id}::lock::LockedNFT<${t.package_id}::position::Position>`},options:{showContent:!0}}))==null?void 0:s.data;for(const a of o){const r=T(a);if(r){const c=r.nft.fields,d={locked_at:Number(r.locked_at),lock_duration:Number(r.lock_duration),lock_nft_id:r.id.id,type:r.nft.type,...c};d.end_lock_time=d.locked_at+d.lock_duration,d.coin_type_a=b(c.coin_type_a.fields.name).full_address,d.coin_type_b=b(c.coin_type_b.fields.name).full_address,d.id=c.id.id,d.tick_lower_index=Te(BigInt(c.tick_lower_index.fields.bits)),d.tick_upper_index=Te(BigInt(c.tick_upper_index.fields.bits)),i.push(d)}}return i}catch(o){return console.log("getLockNFTList:",o),[]}}async creatPool(e){const{ido:t}=this.sdk.sdkOptions;vt(z(e.coin_type_sale),z(e.coin_type_raise))&&(e.price_min=u(1).div(e.price_max).toNumber(),e.price_max=u(1).div(e.price_min).toNumber());const i=E.priceRealToFix(Number(e.price),e.sale_decimals,e.raise_decimals),s=j.priceToSqrtPriceX64(u(e.price_min),e.sale_decimals,e.raise_decimals).toString(),o=j.priceToSqrtPriceX64(u(e.price_max),e.sale_decimals,e.raise_decimals).toString(),a=new y,r=u(e.total_supply).add(u(e.total_supply).mul(u(e.liquidity_injection_ratio))).toNumber(),c=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,e.coin_type_sale),d=G.buildCoinInputForAmount(a,c,BigInt(r),e.coin_type_sale,!1),l=[a.pure(p(t).admin_cap_id),a.pure(p(t).package_version_id),a.pure(p(t).pools_id),a.pure(z(e.owner)),a.pure(u(i).mul(ve).toString()),a.pure(e.total_supply),a.pure(e.complete_raise_limit),a.pure(e.min_purchase_amount),a.pure(e.max_purchase_amount),a.pure(e.start_time),a.pure(e.purchase_duration),a.pure(e.lock_up_duration),a.pure((e.liquidity_injection_ratio*Qe).toString()),a.pure(s),a.pure(o),a.pure(e.tick_spacing.toString()),d.transactionArgument,a.pure(e.protection_hard_cap.toString()),a.pure(g)],m=[e.coin_type_sale,e.coin_type_raise];return a.moveCall({target:`${t.published_at}::${Et}::create_oversubscribe_pool`,typeArguments:m,arguments:l}),a}async creatPurchasePayload(e){const{ido:t}=this.sdk.sdkOptions,n=new y,i=await this.getPurchaseInfo(e.purchase_handle,this._sdk.ClmmSDK.senderAddress,!1),s=await this._sdk.ClmmSDK.getOwnerCoinAssets(this._sdk.ClmmSDK.senderAddress,e.coin_type_raise),o=G.buildCoinInputForAmount(n,s,BigInt(e.raise_amount),e.coin_type_raise,!1),a=[e.coin_type_sale,e.coin_type_raise];let r,c;return i?(c="purchase",r=[n.object(p(t).package_version_id),n.object(e.pool_address),n.object(i.purchase_certificate_id),n.pure(e.raise_amount.toString()),o.transactionArgument,n.pure(g)]):(c="create_certificate_and_purchase",r=[n.object(p(t).package_version_id),n.object(e.pool_address),n.pure(e.raise_amount.toString()),o.transactionArgument,n.pure(g)]),n.moveCall({target:`${t.published_at}::${R}::${c}`,typeArguments:a,arguments:r}),n}async redeemPayload(e){const{ido:t}=this.sdk.sdkOptions,n=await this.getPurchaseInfo(e.purchase_handle,this._sdk.ClmmSDK.senderAddress,!1);if(n===void 0)throw Error("get purchase certificate fail");const i=new y,s=[e.coin_type_sale,e.coin_type_raise],o=[i.pure(p(t).package_version_id),i.pure(e.pool_address),i.pure(n.purchase_certificate_id),i.pure(g)];return i.moveCall({target:`${t.published_at}::${R}::redeem`,typeArguments:s,arguments:o}),i}injectLiquidityPayload(e){const{ido:t}=this.sdk.sdkOptions,{clmm_pool:n}=this.sdk.ClmmSDK.sdkOptions,i=new y,s=[e.coin_type_sale,e.coin_type_raise],o=e.is_reverse?"inject_liquidity_with_reverse_clmm_pool":"inject_liquidity_with_forward_clmm_pool",a=[i.pure(p(t).package_version_id),i.pure(e.pool_address),i.pure(p(n).global_config_id),i.pure(e.clmm_pool_address),i.pure(g)];return i.moveCall({target:`${t.published_at}::${R}::${o}`,typeArguments:s,arguments:a}),i}unPauseInjectLiquidity(e){const{ido:t}=this.sdk.sdkOptions,{integrate:n,clmm_pool:i}=this.sdk.ClmmSDK.sdkOptions,s=new y;s.moveCall({target:`${n.published_at}::${$e}::unpause_pool`,typeArguments:[e.coin_type_a,e.coin_type_b],arguments:[s.object(p(i).global_config_id),s.object(e.clmm_pool_address)]});const o=[e.coin_type_sale,e.coin_type_raise],a=e.is_reverse?"inject_liquidity_with_reverse_clmm_pool":"inject_liquidity_with_forward_clmm_pool",r=[s.object(p(t).package_version_id),s.object(e.pool_address),s.object(p(i).global_config_id),s.object(e.clmm_pool_address),s.object(g)];return s.moveCall({target:`${t.published_at}::${R}::${a}`,typeArguments:o,arguments:r}),s}async findClmmPoolForLiquidity(e){let t=null,n=!1;const i=await this.sdk.ClmmSDK.Pool.getPoolImmutables();for(const s of i){if(s.coinTypeA===e.coin_type_sale&&s.coinTypeB===e.coin_type_raise&&Number(s.tickSpacing)===e.tick_spacing){t=await this._sdk.ClmmSDK.Pool.getPool(s.poolAddress);break}if(s.coinTypeA===e.coin_type_raise&&s.coinTypeB===e.coin_type_sale&&Number(s.tickSpacing)===e.tick_spacing){t=await this._sdk.ClmmSDK.Pool.getPool(s.poolAddress),n=!0;break}}return t&&(u(t.current_sqrt_price).lessThanOrEqualTo(e.current_sqrt_price_min)||u(t.current_sqrt_price).greaterThanOrEqualTo(e.current_sqrt_price_max))?(console.log("clmmPool: ",t.poolAddress),{is_reverse:n,clmmPool:null}):{is_reverse:n,clmmPool:t}}withdrawPayload(e){const{ido:t}=this.sdk.sdkOptions,n=new y,i=[e.coin_type_sale,e.coin_type_raise],s=[n.object(p(t).package_version_id),n.object(e.pool_address),n.object(g)];return n.moveCall({target:`${t.published_at}::${R}::withdraw`,typeArguments:i,arguments:s}),n}updateWhitelistCapPayload(e){const{ido:t}=this.sdk.sdkOptions,n=new y,i=[e.coin_type_sale,e.coin_type_raise];return e.add_whites&&e.add_whites.addresses.length>0&&n.moveCall({target:`${t.published_at}::${R}::add_white_listed_addresses`,typeArguments:i,arguments:[n.object(p(t).admin_cap_id),n.object(p(t).package_version_id),n.object(e.pool_address),n.makeMoveVec({type:"address",objects:e.add_whites.addresses.map(s=>n.pure(ee(s),"address"))}),n.pure(e.add_whites.protection_limit),n.object(g)]}),e.remove_whites&&e.remove_whites.length>0&&n.moveCall({target:`${t.published_at}::${R}::remove_white_listed_addresses`,typeArguments:i,arguments:[n.object(p(t).admin_cap_id),n.object(p(t).package_version_id),n.object(e.pool_address),n.makeMoveVec({type:"address",objects:e.remove_whites.map(s=>n.pure(ee(s),"address"))}),n.object(g)]}),e.update_whites&&e.update_whites.forEach(s=>{n.moveCall({target:`${t.published_at}::${R}::update_white_listed_address`,typeArguments:i,arguments:[n.object(p(t).admin_cap_id),n.object(p(t).package_version_id),n.object(e.pool_address),n.object(s.address),n.pure(s.protection_limit),n.object(g)]})}),n}creatCancelPoolPayload(e){const{ido:t}=this.sdk.sdkOptions,n=new y,i=[e.coin_type_sale,e.coin_type_raise],s=[n.pure(p(t).admin_cap_id),n.pure(p(t).package_version_id),n.pure(e.pool_address),n.pure(g)];return n.moveCall({target:`${t.published_at}::${R}::cancel`,typeArguments:i,arguments:s}),n}updatePoolOwnerPayload(e,t){const{ido:n}=this.sdk.sdkOptions;t=t===void 0?new y:t;const i=[e.coin_type_sale,e.coin_type_raise],s=[t.object(p(n).admin_cap_id),t.object(p(n).package_version_id),t.object(e.pool_address),t.object(e.new_owner),t.object(g)];return t.moveCall({target:`${n.published_at}::${R}::update_pool_owner`,typeArguments:i,arguments:s}),t}updatePoolDuractionPayload(e,t){const{ido:n}=this.sdk.sdkOptions;t=t===void 0?new y:t;const i=[e.coin_type_sale,e.coin_type_raise],s=[t.object(p(n).admin_cap_id),t.object(p(n).package_version_id),t.object(e.pool_address),t.pure(e.start_time),t.pure(e.purchase_duration),t.pure(e.lock_duration),t.object(g)];return t.moveCall({target:`${n.published_at}::${R}::update_pool_duration`,typeArguments:i,arguments:s}),t}updateProtectionHardCapPayload(e,t){const{ido:n}=this.sdk.sdkOptions;t=t===void 0?new y:t;const i=[e.coin_type_sale,e.coin_type_raise],s=[t.object(p(n).admin_cap_id),t.object(p(n).package_version_id),t.object(e.pool_address),t.pure(e.protection_hard_cap),t.object(g)];return t.moveCall({target:`${n.published_at}::${R}::update_protection_hard_cap`,typeArguments:i,arguments:s}),t}unlockNftPayload(e){const{ido:t}=this.sdk.sdkOptions,n=new y,i=[e.nft_type],s=[n.pure(e.lock_nft_id),n.pure(g)];return n.moveCall({target:`${t.published_at}::lock::unlock_nft`,typeArguments:i,arguments:s}),n}async isAdminCap(e){const{ido:t}=this._sdk.sdkOptions,n=`${t.package_id}_${e}_isAdminCap`,i=this.getCache(n);if(i)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:p(t).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(s);const o=Ie(s),a=Ce(s);let r=!1;return a&&o&&b(o).source_address===`${t.package_id}::config::AdminCap`&&(r=z(a.AddressOwner)===z(e)),this.updateCache(n,r,C),r}async getWhiteProtectionLimit(e,t,n=!0){const i=`${e}_${t}_getWhiteProtectionLimit`,s=this._sdk.getCache(i,n);if(s)return s;try{const o=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"address",value:t}});if(o&&o.data){const a=T(o);return this._sdk.updateCache(i,a.value),a.value}return}catch{return}}async getWhiteList(e,t){var i;const n={type:"address",value:t};try{const s=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:n}),o=T(s);if(console.log(o),o)return(i=o==null?void 0:o.value)==null?void 0:i.fields}catch{}return{safe_limit_amount:"0",safe_purchased_amount:"0"}}async getAdminAddress(){const{ido:e}=this._sdk.sdkOptions,t=`${p(e).admin_cap_id}_getAdminAddress`,n=this.getCache(t);if(n)return n;const i=await this._sdk.ClmmSDK.fullClient.getObject({id:p(e).admin_cap_id,options:{showType:!0,showOwner:!0}});console.log(i);const s=Ie(i),o=Ce(i);if(o&&s&&b(s).source_address===`${e.package_id}::config::AdminCap`){const r=z(o.AddressOwner);return this.updateCache(t,r,C),r}return""}updateCache(e,t,n=C){let i=this._cache[e];i?(i.overdueTime=B(n),i.value=t):i=new oe(t,B(n)),this._cache[e]=i}getCache(e,t=!1){const n=this._cache[e];if(!t&&(n!=null&&n.isValid()))return n.value;delete this._cache[e]}},Lt=class{constructor(e){S(this,"_sdk");S(this,"_cache",{});this._sdk=e}get sdk(){return this._sdk}async getOwnerVeNFT(e,t=!0){const{xtoken:n}=this.sdk.sdkOptions,i=`${e}_getLockUpManagerEvent`,s=this.getCache(i,t);if(s!==void 0)return s;let o;const a=`${n.package_id}::xtoken::VeNFT`;return(await se(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0,showDisplay:!0},filter:{StructType:a}})).data.forEach(c=>{const d=b(H(c)).source_address;if(d===a&&c.data&&c.data.content){const{fields:l}=c.data.content;o={...Me(c),id:l.id.id,index:l.index,type:d,xtoken_balance:l.xtoken_balance},this.updateCache(i,o,C)}}),o}async getOwnerLockTokens(e){const{xtoken:t}=this.sdk.sdkOptions,n=[],i=`${t.package_id}::lock_coin::LockedCoin<${this.buileTokenCoinType()}>`,s=await se(this._sdk.ClmmSDK,e,{options:{showType:!0,showContent:!0},filter:{StructType:i}});for(const o of s.data)if(b(H(o)).source_address===i&&o.data){const r=ne.buildLockToken(o.data.content),c=await this.getLockXToken(r.id);c&&(r.xtoken_amount=c.xtoken_amount),n.push(r)}return n}async getLockToken(e){var n;const t=await this._sdk.ClmmSDK.fullClient.getObject({id:e,options:{showType:!0,showContent:!0}});if((n=t.data)!=null&&n.content){const i=ne.buildLockToken(t.data.content),s=await this.getLockXToken(i.id);return s&&(i.xtoken_amount=s.xtoken_amount),i}}async getOwnerTokenCoins(e){return await this._sdk.ClmmSDK.getOwnerCoinAssets(e,this.buileTokenCoinType())}mintVeNFTPayload(){const{xtoken:e}=this.sdk.sdkOptions,t=new y;return t.moveCall({target:`${e.published_at}::${ce}::mint_venft`,typeArguments:[],arguments:[t.pure(p(e).xtoken_manager_id)]}),t}async convertPayload(e){const{xtoken:t}=this.sdk.sdkOptions,n=new y,i=this.buileTokenCoinType(),s=await G.syncBuildCoinInputForAmount(this._sdk.ClmmSDK,n,BigInt(e.amount),i);return e.venft_id===void 0?n.moveCall({target:`${t.published_at}::${ce}::mint_and_convert`,typeArguments:[],arguments:[n.object(p(t).lock_manager_id),n.object(p(t).xtoken_manager_id),s,n.pure(e.amount)]}):n.moveCall({target:`${t.published_at}::${ce}::convert`,typeArguments:[],arguments:[n.object(p(t).lock_manager_id),n.object(p(t).xtoken_manager_id),s,n.pure(e.amount),n.pure(e.venft_id)]}),n}redeemLockPayload(e){const{xtoken:t}=this.sdk.sdkOptions,n=new y;return n.moveCall({target:`${t.published_at}::${ce}::redeem_lock`,typeArguments:[],arguments:[n.pure(p(t).lock_manager_id),n.pure(p(t).xtoken_manager_id),n.pure(e.venft_id),n.pure(e.amount),n.pure(e.lock_day),n.pure(g)]}),n}redeemPayload(e){const{xtoken:t}=this.sdk.sdkOptions,n=new y;return n.moveCall({target:`${t.published_at}::${ce}::redeem`,typeArguments:[],arguments:[n.pure(p(t).lock_manager_id),n.pure(p(t).xtoken_manager_id),n.pure(e.venft_id),n.pure(e.lock_id),n.pure(g)]}),n}redeemDividendPayload(e,t){const{xtoken_dividends:n}=this.sdk.sdkOptions,i=new y;return t.forEach(s=>{i.moveCall({target:`${n.published_at}::${Xe}::redeem`,typeArguments:[s],arguments:[i.object(p(n).dividend_manager_id),i.object(e)]})}),i}redeemDividendV2Payload(e,t){const{xtoken_dividends:n}=this.sdk.sdkOptions,i=new y;return t.forEach(s=>{i.moveCall({target:`${n.published_at}::${Xe}::redeem_v2`,typeArguments:[s],arguments:[i.object(p(n).dividend_manager_id),i.object(e),i.object(g)]})}),i}buileTokenCoinType(){return`${this.sdk.sdkOptions.token_faucet.package_id}::token::TOKEN`}cancelRedeemPayload(e){const{xtoken:t}=this.sdk.sdkOptions,n=new y;return n.moveCall({target:`${t.published_at}::${ce}::cancel_redeem_lock`,typeArguments:[],arguments:[n.pure(p(t).lock_manager_id),n.pure(p(t).xtoken_manager_id),n.pure(e.venft_id),n.pure(e.lock_id),n.pure(g)]}),n}async getInitConfigs(){var a,r;const{package_id:e}=this.sdk.sdkOptions.xtoken,t=`${e}_getInitFactoryEvent`,n=this.getCache(t);if(n!==void 0)return n;const i=(a=await M(this._sdk.ClmmSDK,{MoveEventType:`${e}::xtoken::InitEvent`}))==null?void 0:a.data,s={xtoken_manager_id:"",lock_manager_id:"",lock_handle_id:""};i.length>0&&i.forEach(c=>{const d=c.parsedJson;d&&(s.xtoken_manager_id=d.xtoken_manager)});const o=(r=await M(this._sdk.ClmmSDK,{MoveEventType:`${e}::locking::InitializeEvent`}))==null?void 0:r.data;return o.length>0&&o.forEach(c=>{const d=c.parsedJson;d&&(s.lock_manager_id=d.lock_manager)}),s.lock_handle_id=(await this.getLockUpManager()).lock_infos.lock_handle_id,this.updateCache(t,s,C),s}async getLockUpManager(){const{xtoken:e}=this.sdk.sdkOptions,{lock_manager_id:t}=p(e),n=`${t}_getLockUpManagerEvent`,i=this.getCache(n);if(i!==void 0)return i;const s=await this.sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=ne.buildLockUpManager(T(s));return this.updateCache(n,o,C),o}async getLockInfoHandle(e){const t=`${e}_getLockInfoHandle`,n=this.getCache(t);if(n!==void 0)return n;let i="";const s=await this.sdk.ClmmSDK.fullClient.getObject({id:e,options:{showContent:!0}}),o=T(s);return o&&(i=o.lock_infos.fields.id.id,this.updateCache(t,i,C)),i}async getDividendConfigs(){var o;const{package_id:e}=this.sdk.sdkOptions.xtoken_dividends,t=`${e}_getDividendManagerEvent`,n=this.getCache(t);if(n!==void 0)return n;const i=(o=await M(this._sdk.ClmmSDK,{MoveEventType:`${e}::dividend::InitEvent`}))==null?void 0:o.data,s={dividend_manager_id:"",dividend_admin_id:"",dividend_settle_id:""};return i.length>0&&i.forEach(a=>{const r=a.parsedJson;r&&(s.dividend_manager_id=r.manager_id,s.dividend_admin_id=r.admin_id,s.dividend_settle_id=r.settle_id,this.updateCache(t,s,C))}),s}async getDividendManager(e=!1){const{dividend_manager_id:t}=p(this.sdk.sdkOptions.xtoken_dividends),n=`${t}_getDividendManager`,i=this.getCache(n,e);if(i!==void 0)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=T(s),a=ne.buildDividendManager(o);return this.updateCache(n,a,C),a}async getXcetusManager(e=!0){const{xtoken_manager_id:t}=p(this.sdk.sdkOptions.xtoken),n=`${t}_getXcetusManager`,i=this.getCache(n,e);if(i)return i;const s=await this._sdk.ClmmSDK.fullClient.getObject({id:t,options:{showContent:!0}}),o=T(s),a={id:o.id.id,index:Number(o.index),has_venft:{handle:o.has_venft.fields.id.id,size:o.has_venft.fields.size},nfts:{handle:o.nfts.fields.id.id,size:o.nfts.fields.size},total_locked:o.total_locked,treasury:o.treasury.fields.total_supply.fields.value};return this.updateCache(n,a),a}async getVeNFTDividendInfo(e,t){try{const n=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),i=T(n);return ne.buildVeNFTDividendInfo(i)}catch{return}}async redeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const n=await this.getLockUpManager(),i=u(U).mul(u(n.max_lock_day).sub(u(t))).mul(u(n.max_percent_numerator).sub(u(n.min_percent_numerator))).div(u(n.max_lock_day).sub(u(n.min_lock_day))),s=u(U).mul(u(n.max_percent_numerator)).sub(i).div(u(Se)).div(U);return{amountOut:u(s).mul(u(e)).round().toString(),percent:s.toString()}}async reverseRedeemNum(e,t){if(BigInt(e)===BigInt(0))return{amountOut:"0",percent:"0"};const n=await this.getLockUpManager(),i=u(U).mul(u(n.max_lock_day).sub(u(t))).mul(u(n.max_percent_numerator).sub(u(n.min_percent_numerator))).div(u(n.max_lock_day).sub(u(n.min_lock_day))),s=u(U).mul(u(n.max_percent_numerator)).sub(i).div(u(Se)).div(U);return{amountOut:u(e).div(s).toFixed(0,$.ROUND_UP),percent:s.toString()}}async getLockXToken(e){const{lock_handle_id:t}=p(this._sdk.sdkOptions.xtoken),n=`${e}_getXTokenAmount`,i=this.getCache(n);if(i)return i;try{const s=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:t,name:{type:"0x2::object::ID",value:e}}),o=T(s);if(o){const a=o.value.fields.value.fields;return this.updateCache(n,a,C),a}}catch{}}async getVeNftAmount(e,t){try{const n=await this.sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:e,name:{type:"0x2::object::ID",value:t}}),i=T(n);if(i){const{lock_amount:s,xcetus_amount:o}=i.value.fields.value.fields;return{lock_amount:s,xcetus_amount:o}}}catch{}return{lock_amount:"0",xcetus_amount:"0"}}async getPhaseDividendInfo(e,t=!1){const i=(await this.getDividendManager()).dividends.id,s=`${i}_${e}_getPhaseDividendInfo`,o=this._sdk.getCache(s,t);if(o)return o;const a=await this._sdk.ClmmSDK.fullClient.getDynamicFieldObject({parentId:i,name:{type:"u64",value:e}}),r=T(a),c=r.value.fields.value.fields,d=c.redeemed_num.fields.contents.map(h=>({name:h.fields.key.fields.name,value:h.fields.value})),l=c.bonus_types.map(h=>h.fields.name),m=c.bonus.fields.contents.map(h=>({name:h.fields.key.fields.name,value:h.fields.value})),f={id:he(a),phase:r.name,settled_num:c.settled_num,register_time:c.register_time,redeemed_num:d,is_settled:c.is_settled,bonus_types:l,bonus:m,phase_end_time:""};return this.updateCache(s,f),f}updateCache(e,t,n=ie){let i=this._cache[e];i?(i.overdueTime=B(n),i.value=t):i=new oe(t,B(n)),this._cache[e]=i}getCache(e,t=!1){const n=this._cache[e];if(!t&&(n!=null&&n.isValid()))return n.value;delete this._cache[e]}},Ut=class{constructor(e,t){S(this,"_cache",{});S(this,"_sdkOptions");S(this,"_launchpad");S(this,"_ido");S(this,"_xcetusModule");S(this,"_xtokenModule");S(this,"_boosterModule");S(this,"_makerModule");S(this,"_clmmSDK");this._sdkOptions=e,this._clmmSDK=t,this._launchpad=new xt(this),this._ido=new Mt(this),this._xcetusModule=new $t(this),this._xtokenModule=new Lt(this),this._boosterModule=new jt(this),this._makerModule=new Nt(this),He(this._sdkOptions)}get ClmmSDK(){return this._clmmSDK}get sdkOptions(){return this._sdkOptions}get Launchpad(){return this._launchpad}get Ido(){return this._ido}get XToken(){return this._xtokenModule}get XCetusModule(){return this._xcetusModule}get BoosterModule(){return this._boosterModule}get MakerModule(){return this._makerModule}updateCache(e,t,n=C){let i=this._cache[e];i?(i.overdueTime=B(n),i.value=t):i=new oe(t,B(n)),this._cache[e]=i}getCache(e,t=!1){const n=this._cache[e];if(!t&&(n!=null&&n.isValid()))return n.value;delete this._cache[e]}};export{Ut as C,x as I,te as X,Rt as a};
