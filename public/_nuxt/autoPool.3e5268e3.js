import{a6 as W,l as Y,T as z,a7 as G}from"./entry.b1f3177f.js";import{c as i,a as J}from"./sha256.4a30d400.js";import{H as Q,C as F,I as T,l as $,u as X,b as K,s as q,f as D,p as I}from"./pool.2865e333.js";import{C as Z,V as H}from"./index.9fc92916.js";import{D as c}from"./decimal.0e8aa3f1.js";function C(o){const s={launchpad:i[o||"Sui"].launchpad,ido:i[o||"Sui"].ido,xcetus:i[o||"Sui"].xcetus,xcetus_dividends:i[o||"Sui"].xcetus_dividends,cetus_faucet:i[o||"Sui"].cetus_faucet,xtoken:i[o||"Sui"].xtoken,xtoken_dividends:i[o||"Sui"].xtoken_dividends,token_faucet:i[o||"Sui"].token_faucet,booster:i[o||"Sui"].booster,maker_bonus:i[o||"Sui"].maker_bonus,liquidity_stratefy:i[o||"Sui"].liquidity_stratefy,vaults:i[o||"Sui"].vaults},S={fullRpcUrl:localStorage.getItem(`${o}-currentRpclocal2`)||i[o||"Sui"].fullRpcUrl,simulationAccount:i[o||"Sui"].simulationAccount,cetus_config:i[o||"Sui"].cetus_config,clmm_pool:i[o||"Sui"].clmm_pool,integrate:i[o||"Sui"].integrate,deepbook:i[o||"Sui"].deepbook,deepbook_endpoint_v2:i[o||"Sui"].deepbook_endpoint_v2,aggregatorUrl:i[o||"Sui"].aggregatorUrl},n=new Q(S),e=W(new Z(s,n)),d=J(),b=Y(()=>d);z(()=>{b.value.address&&(n.senderAddress=b.value.address)});const h=async()=>{console.log(e,"sdk###");const t=await e.Vaults.getVaultList();return t&&t.data||[]},j=async t=>await e.Vaults.getVault(t),x=async t=>{console.log(t,"###coinType");const u=await e.ClmmSDK.fullClient.getBalance({owner:n.senderAddress,coinType:t});return u&&u.totalBalance},r=t=>({transactionBlock:t,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:h,getLpBalance:x,deposit:async t=>{const{lowerTick:u,upperTick:a,coinAmount:y,fix_amount_a:p,slippage:_,curSqrtPrice:k,rewarder_coin_types:f}=t;console.log(t,"params###");const g=F.estLiquidityAndcoinAmountFromOneAmounts(u,a,y,p,!0,_,k),l=p?y.toString():g.tokenMaxA.toString(),m=p?g.tokenMaxB.toString():y.toString(),A=await e.Vaults.deposit({vault_id:t.id,clmm_pool:t.clmm_pool,lp_token_type:t.lp_token_type,amount_a:l,amount_b:m,fix_amount_a:p,slippage:_,coinTypeA:t.coinTypeA,coinTypeB:t.coinTypeB,rewarder_coin_types:[]});return r(A)},remove:async t=>{const{lowerSqrtPrice:u,upperSqrtPrice:a,lpTokenAmount:y,curSqrtPrice:p,slippage:_,rewarder_coin_types:k}=t;console.log(t,"params##");const f=F.getCoinAmountFromLiquidity(y,p,u,a,!0),g=T(f.coinA.toString()).mul(T(1-_)),l=T(f.coinB.toString()).mul(T(1-_));console.log(f.coinA.toString(),"##.toString()"),console.log(t.lpTokenAmount.toString(),g.toString(),l.toString(),"params##");const m=await e.Vaults.remove({vault_id:t.id,clmm_pool:t.clmm_pool,lp_token_type:t.lp_token_type,coinTypeA:t.coinTypeA,coinTypeB:t.coinTypeB,lp_token_amount:y.toString(),min_amount_a:$(g.toString(),0)||"",min_amount_b:$(l.toString(),0)||"",rewarder_coin_types:[]});return r(m)},getAutoPool:j}}const nt=G("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return X()}},actions:{async getAutoPoolList(){const s=await C("Sui").getAutoPools();console.log(s,"list###");const S=this.getPoolStore,n=s.map(e=>({...S.poolConfigObj[e.pool_id],id:e.id,lp_token_type:e.lp_token_type,autoPoolPositionInfo:e.positins[0],is_pause:e.is_pause,total_supply:e.total_supply,liquidity:e.liquidity}));this.autoPoolList=n,this.autoPoolObj=Object.fromEntries(n.map((e,d)=>[e.address,e])),console.log(n,"##autoPoolList")},async getMyAutoPoolPosition(){var d,b,h,j,x,r,v;const o=C("Sui"),s=this.autoPoolList,S=K("Sui"),n=[],{RATES:e}=this.getPoolStore;for(let w=0;w<s.length;w++){const t=s[w],u=await o.getLpBalance(s[w].lp_token_type);console.log(u,"balance##");const a=(await S.getTokenListByCoinType([s[w].lp_token_type]))[0];console.log(a,"lpInfo##");const y=((d=e[t.coinA.address])==null?void 0:d.price)||"",p=((b=e[t.coinB.address])==null?void 0:b.price)||"",_=t.autoPoolPositionInfo.tick_lower_index,k=t.autoPoolPositionInfo.tick_upper_index;console.log(s[w],"list[i]"),console.log((h=t==null?void 0:t.object)==null?void 0:h.current_sqrt_price,"##poolInfo?.object?.current_sqrt_price");const f={tick_lower_index:_,tick_upper_index:k,current_sqrt_price:(j=t==null?void 0:t.object)==null?void 0:j.current_sqrt_price,liquidity:H.get_share_liquidity_by_amount({liquidity:t==null?void 0:t.liquidity,total_supply:t==null?void 0:t.total_supply},u)},g=S.getCoinAmountFromLiquidity({pool:{...t,current_sqrt_price:(x=t==null?void 0:t.object)==null?void 0:x.current_sqrt_price},position:f,roundUp:!0}),l=g.coinaAmount,m=g.coinbAmount,A=new c(y).mul(new c(l)).toNumber(),B=new c(p).mul(new c(m)).toNumber(),O=A>0&&A<.01?"<0.01":q(A,2),M=B>0&&B<.01?"<0.01":q(B,2);let U=0;Number(u)>0&&(U=new c(u).div(Math.pow(10,a.decimals)));const R=y&&p?q(new c(A).add(new c(B)).toString(),2):"",V=t.total_supply;let P=0;U>0&&V>0&&(P=new c(U).mul(Math.pow(10,a.decimals)).div(new c(V)).mul(100).toNumber()),console.log(P,"##myShare");const E=new c(1).div(Math.pow(10,t.decimals)).toNumber();let L=0;P>1?L=q(P,2):P>0&&P<E?L=`<${E}`:P==0?L=0:L=D(P,1),console.log(u,U.toString(),"###balance"),this.positionInfoObj[t.id]={tick_lower_index:_,tick_upper_index:k,current_sqrt_price:(r=t==null?void 0:t.object)==null?void 0:r.current_sqrt_price,myLiquidity:I(u,a.decimals),amountA:l,amountB:m,...t,lpInfo:a,myAmountAUSD:O,myAmountBUSD:M,myLiquidityUSD:R,myShare:L},n.push({tick_lower_index:_,tick_upper_index:k,current_sqrt_price:(v=t==null?void 0:t.object)==null?void 0:v.current_sqrt_price,myLiquidity:I(u,a.decimals),amountA:l,amountB:m,...t,lpInfo:a,myAmountAUSD:O,myAmountBUSD:M,myLiquidityUSD:R,myShare:L})}this.positionInfoList=n,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(o){var B,O;const s=C("Sui"),S=K("Sui"),n=await s.getAutoPool(o);console.log("newPoolInfo:",n),console.log("this.positionInfoObj[id]:",this.positionInfoObj[o]);const e={...this.positionInfoObj[o],autoPoolPositionInfo:n.positins[0]},d=await s.getLpBalance(e.lp_token_type),b=(await S.getTokenListByCoinType([e.lp_token_type]))[0];console.log(d,"###balance updatePositionItem");const h=e.autoPoolPositionInfo.tick_lower_index,j=e.autoPoolPositionInfo.tick_upper_index,x={tick_lower_index:h,tick_upper_index:j,current_sqrt_price:e.object.current_sqrt_price,liquidity:H.get_share_liquidity_by_amount({liquidity:n==null?void 0:n.liquidity,total_supply:n==null?void 0:n.total_supply},d)},r=S.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.object.current_sqrt_price,...e},position:x,roundUp:!0});console.log(r,"amountInfo###");const v=r.coinaAmount,w=r.coinbAmount,{RATES:t}=this.getPoolStore,u=n.total_supply,a=((B=t[e.coinA.address])==null?void 0:B.price)||0,y=((O=t[e.coinB.address])==null?void 0:O.price)||0,p=new c(a).mul(new c(r==null?void 0:r.coinaAmount)).toNumber(),_=new c(y).mul(new c(r==null?void 0:r.coinbAmount)).toNumber(),k=p>0&&p<.01?"<0.01":q(p,2),f=_>0&&_<.01?"<0.01":q(_,2);let g=new c(0);Number(d)>0&&(g=new c(d).div(Math.pow(10,b.decimals)));const l=new c(g).mul(Math.pow(10,e.lpInfo.decimals)).div(new c(u)).mul(100).toNumber();let m=0;const A=new c(1).div(Math.pow(10,e.decimals)).toNumber();l>1?m=q(l,2):l>0&&l<A?m=`<${A}`:m=D(l,1),this.positionInfoObj[o]={...e,tick_lower_index:h,tick_upper_index:j,current_sqrt_price:e.object.current_sqrt_price,myLiquidity:q(I(d,b.decimals),2),amountA:v,amountB:w,myShare:m,myAmountAUSD:k,myAmountBUSD:f},console.log(this.positionInfoObj[o],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){const{data:o}=await fetch(`${i.Sui.api}/v2/sui/auto_pools`).then(s=>s.json());o&&o.pools&&o.pools.length>0&&(this.apyObj=Object.fromEntries(o.pools.map((s,S)=>[s.object_id,{...s,apr:D(s.apr.replace("%",""),2)+"%"}])),console.log(this.apyObj,"data##"))}}});export{C as a,nt as u};
