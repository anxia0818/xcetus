import{a6 as co,l as lo,T as uo,a7 as ro}from"./entry.4414a18f.js";import{c as _,a as ao}from"./sha256.0ac155a0.js";import{I as po,e as V,C as Q,J as E,l as eo,u as _o,b as io,a as H,s as v,T as no,K as so,p as Z}from"./pool.cba66722.js";import{C as mo,V as Y}from"./index.27fb2275.js";import{D as t}from"./decimal.0e8aa3f1.js";function oo(e){const p={launchpad:_[e||"Sui"].launchpad,ido:_[e||"Sui"].ido,xcetus:_[e||"Sui"].xcetus,xcetus_dividends:_[e||"Sui"].xcetus_dividends,cetus_faucet:_[e||"Sui"].cetus_faucet,xtoken:_[e||"Sui"].xtoken,xtoken_dividends:_[e||"Sui"].xtoken_dividends,token_faucet:_[e||"Sui"].token_faucet,booster:_[e||"Sui"].booster,maker_bonus:_[e||"Sui"].maker_bonus,liquidity_stratefy:_[e||"Sui"].liquidity_stratefy,vaults:_[e||"Sui"].vaults},f={fullRpcUrl:localStorage.getItem(`${e}-currentRpclocal2`)||_[e||"Sui"].fullRpcUrl,simulationAccount:_[e||"Sui"].simulationAccount,cetus_config:_[e||"Sui"].cetus_config,clmm_pool:_[e||"Sui"].clmm_pool,integrate:_[e||"Sui"].integrate,deepbook:_[e||"Sui"].deepbook,deepbook_endpoint_v2:_[e||"Sui"].deepbook_endpoint_v2,aggregatorUrl:_[e||"Sui"].aggregatorUrl},l=new po(f),i=co(new mo(p,l)),w=ao(),U=lo(()=>w);uo(()=>{U.value.address&&(l.senderAddress=U.value.address)});const K=async()=>{console.log(i,"sdk###");const o=await i.Vaults.getVaultList();return o&&o.data||[]},h=async o=>await i.Vaults.getVault(o),n=async o=>{if(console.log(o,"###coinType"),l.senderAddress){const u=await i.ClmmSDK.fullClient.getBalance({owner:l.senderAddress,coinType:o});return u&&u.totalBalance}else return 0},A=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:K,getLpBalance:n,deposit:async o=>{const{lowerTick:u,upperTick:b,slippage:m,rewarder_coin_types:T,isOnlyA:g,isOnlyB:P,currentTickIndex:d}=o;console.log(o,"params###");let r=o.fix_amount_a,y,D,j;if(g||P){const k=await i.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:b,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool});k?(y=new V(k.swapOutAmount),D=new V(o.curSqrtPrice),j={swap_amount:k.swapInAmount,a2b:r},r=!r):(D=new V(o.curSqrtPrice),y=new V(o.coinAmount))}else D=o.curSqrtPrice,y=new V(o.coinAmount);let B,q,L;console.log(u,d,b,"####138"),d>=u&&d<=b?(B=Q.estLiquidityAndcoinAmountFromOneAmounts(u,b,y,r,!0,m,D),q=r?y.toString():B.tokenMaxA.toString(),L=r?B.tokenMaxB.toString():y.toString()):d<u?(q=y.toNumber(),L=0):d>b&&(q=0,L=y.toNumber());const W=await i.Vaults.deposit({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:q,amount_b:L,fix_amount_a:r,slippage:m,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:j});return A(W)},remove:async o=>{const{lowerTick:u,upperTick:b,coinTypeA:m,coinTypeB:T,receiveAmount:g,clmm_pool:P,lowerSqrtPrice:d,upperSqrtPrice:r,fix_amount_a:y,curSqrtPrice:D,slippage:j,rewarder_coin_types:B,id:q,liquidity:L,swapParams:W,isOnlyA:k,isOnlyB:x}=o,S=await h(q),F=await l.Pool.getPool(S.pool_id);let a,c,M,N,I,R,$;console.log(g,"##receiveAmount"),k||x?(a=await i.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:b,curSqrtPrice:F.current_sqrt_price,fix_amount_a:y,receive_amount:g,coinTypeA:m,coinTypeB:T,clmm_pool:P}),console.log(a,"swapResut###"),a&&(c=Q.getCoinAmountFromLiquidity(new V(a.liquidity),new V(F.current_sqrt_price),d,r,!1),M=Y.get_protocol_fee_amount(S,c.coinA.toString()),N=Y.get_protocol_fee_amount(S,c.coinB.toString()),I=Y.get_lp_amount_by_liquidity(S,a.liquidity),R=E(c.coinA.toString()).mul(E(1-o.slippage)),$=E(c.coinB.toString()).mul(E(1-o.slippage)))):(c=Q.getCoinAmountFromLiquidity(new V(L),D,d,r,!1),M=Y.get_protocol_fee_amount(S,c.coinA.toString()),N=Y.get_protocol_fee_amount(S,c.coinB.toString()),I=o.lpTokenAmount,R=E(c.coinA.toString()).mul(E(1-o.slippage)),$=E(c.coinB.toString()).mul(E(1-o.slippage)),console.log(M,N,"##protocol_fee_amount_b"));const C={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:I.toString(),min_amount_a:eo(R,0)||"",min_amount_b:eo($,0)||"",rewarder_coin_types:[]};console.log(C,"##removeParams"),(k||x)&&(C.swapParams={a2b:!y,swap_amount:a==null?void 0:a.swapInAmount});const G=await i.Vaults.remove(C);return A(G)},getAutoPool:h,calculateDepositSwapAmount:async o=>{const{lowerTick:u,upperTick:b,curSqrtPrice:m,fix_amount_a:T,input_amount:g,coinTypeA:P,coinTypeB:d,clmm_pool:r}=o;return console.log(o,"params###"),await i.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:b,curSqrtPrice:m,fix_amount_a:T,input_amount:g,coinTypeA:P,coinTypeB:d,clmm_pool:r})},calculateRemoveSwapAmount:async o=>{const{lowerTick:u,upperTick:b,curSqrtPrice:m,fix_amount_a:T,receiveAmount:g,coinTypeA:P,coinTypeB:d,clmm_pool:r}=o;return console.log(o,"params###"),await i.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:b,curSqrtPrice:m,fix_amount_a:T,receive_amount:g,coinTypeA:P,coinTypeB:d,clmm_pool:r})}}}const fo=ro("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return _o()}},actions:{async getAutoPoolList(){const p=await oo("Sui").getAutoPools();console.log(p,"list###");const f=this.getPoolStore,l=p.map(i=>({...f.poolConfigObj[i.pool_id],id:i.id,lp_token_type:i.lp_token_type,autoPoolPositionInfo:i.positins[0],is_pause:i.is_pause,total_supply:i.total_supply,liquidity:i.liquidity,protocol_fee_rate:i.protocol_fee_rate}));this.autoPoolList=l,this.autoPoolObj=Object.fromEntries(l.map((i,w)=>[i.address,i])),this.getMyAutoPoolPosition(),console.log(l,"##autoPoolList")},async getMyAutoPoolPosition(){var w,U,K;const e=oo("Sui"),p=this.autoPoolList,f=io("Sui"),l=[],{RATES:i}=this.getPoolStore;for(let h=0;h<p.length;h++){const n=p[h];console.log(n,"poolINfo###");const A=await f.getPool(n.address),s=await e.getLpBalance(p[h].lp_token_type);console.log(s,"balance##");const O=(await f.getTokenListByCoinType([p[h].lp_token_type]))[0];console.log(O,"lpInfo##");const X=((w=i[n.coinA.address])==null?void 0:w.price)||"",J=((U=i[n.coinB.address])==null?void 0:U.price)||"",o=n.autoPoolPositionInfo.tick_lower_index,u=n.autoPoolPositionInfo.tick_upper_index,b={tick_lower_index:o,tick_upper_index:u,current_sqrt_price:A==null?void 0:A.current_sqrt_price,liquidity:Number(s)>0?Y.get_share_liquidity_by_amount({liquidity:n==null?void 0:n.liquidity,total_supply:n==null?void 0:n.total_supply},s):0},m=await f.getCoinAmountFromLiquidity({pool:{...n,current_sqrt_price:A==null?void 0:A.current_sqrt_price},position:b,roundUp:!1});console.log(m,"##amountInfo");const T=m.coinaAmount,g=m.coinbAmount;console.log(n.protocol_fee_rate,"##newPoolInfo.protocol_fee_rate");const P=T,d=g,r=n.coinA.decimals,y=n.coinB.decimals,D=f.TickMath.tickIndexToPrice(Number(o),r,y).toString(),j=f.TickMath.tickIndexToPrice(Number(u),r,y).toString(),B=new t(X).mul(new t(T)).toNumber(),q=new t(J).mul(new t(g)).toNumber(),L=B>0&&B<.01?"<$0.01":`$${H(v(B,2))}`,W=q>0&&q<.01?"<$0.01":`$${H(v(q,2))}`,k=no.sqrtPriceX64ToPrice(A.current_sqrt_price,r,y);let x,S;console.log(n.total_supply,"##poolInfo.total_supply");const F=await f.getCoinAmountFromLiquidity({pool:{...n,tick_lower_index:o,tick_upper_index:u,current_sqrt_price:A==null?void 0:A.current_sqrt_price},position:{...b,liquidity:n.liquidity},roundUp:!1}),a=new t(F.coinaAmount).toNumber(),c=new t(F.coinbAmount).toNumber();console.log(a,c,k.toString(),"###116");const M=v(new t(a).mul(new t(X)).toNumber(),2),N=v(new t(c).mul(new t(J)).toNumber(),2);if(console.log(A,"newPool##"),console.log(T,g,"###131"),a>0&&c>0){const to=new t(a).mul(k).add(new t(c));x=new t(a).mul(k).div(to).mul(100).toNumber().toFixed(2),S=new t(c).div(to).mul(100).toNumber().toFixed(2)}else T>=0?(x=100,S=0):g>=0?(x=0,S=100):(x=50,S=50);let I=0;Number(s)>0&&(I=new t(s).div(Math.pow(10,O.decimals)));const R=X&&J?v(new t(B).add(new t(q)).toString(),2):"",$=n.total_supply;console.log(X,J,m==null?void 0:m.coinaAmount,m==null?void 0:m.coinbAmount,"myLiquidityUSD###");let C=0;I>0&&$>0&&(C=new t(I).mul(Math.pow(10,O.decimals)).div(new t($)).mul(100).toNumber()),console.log(C,"##myShare");const G=new t(1).div(Math.pow(10,n.decimals)).toNumber();let z=0;C>1?z=v(C,2):C>0&&C<G?z=`<${G}`:C==0?z=0:z=so(C,1),console.log(s,I.toString(),"###balance"),this.positionInfoObj[n.id]={tick_lower_index:o,tick_upper_index:u,current_sqrt_price:A.current_sqrt_price,myLiquidity:Z(s,O.decimals),amountA:P,amountB:d,...n,lpInfo:O,myAmountAUSD:L,myAmountBUSD:W,myLiquidityUSD:R,myShare:z,minPrice:D,maxPrice:j,poolCoinARatio:x,poolCoinBRatio:S,poolCoinANum:a,poolCoinBNum:c,poolCoinAUSD:M,poolCoinBUSD:N},l.push({tick_lower_index:o,tick_upper_index:u,current_sqrt_price:(K=n==null?void 0:n.object)==null?void 0:K.current_sqrt_price,myLiquidity:Z(s,O.decimals),amountA:P,amountB:d,...n,lpInfo:O,myAmountAUSD:L,myAmountBUSD:W,myLiquidityUSD:R,myShare:z,minPrice:D,maxPrice:j,poolCoinARatio:x,poolCoinBRatio:S,poolCoinANum:a,poolCoinBNum:c,poolCoinAUSD:M,poolCoinBUSD:N})}this.positionInfoList=l,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(e){var I,R;const p=oo("Sui"),f=io("Sui"),l=await p.getAutoPool(e),i=await f.getPool(l.pool_id);console.log("newPoolInfo:",l),console.log("this.positionInfoObj[id]:",this.positionInfoObj[e]);const w={...this.positionInfoObj[e],autoPoolPositionInfo:l.positins[0]},U=await p.getLpBalance(w.lp_token_type),K=(await f.getTokenListByCoinType([w.lp_token_type]))[0];console.log(U,"###balance updatePositionItem");const h=w.autoPoolPositionInfo.tick_lower_index,n=w.autoPoolPositionInfo.tick_upper_index,A={tick_lower_index:h,tick_upper_index:n,current_sqrt_price:i.current_sqrt_price,liquidity:Y.get_share_liquidity_by_amount({liquidity:l==null?void 0:l.liquidity,total_supply:l==null?void 0:l.total_supply},U)},s=f.getCoinAmountFromLiquidity({pool:{current_sqrt_price:i.current_sqrt_price,...w},position:A,roundUp:!1});console.log(s,"amountInfo###");const O=s.coinaAmount,X=s.coinbAmount,J=s.coinaAmount,o=s.coinbAmount,{RATES:u}=this.getPoolStore,b=l.total_supply,m=2,T=2,g=((I=u[w.coinA.address])==null?void 0:I.price)||0,P=((R=u[w.coinB.address])==null?void 0:R.price)||0,d=new t(g).mul(new t(s==null?void 0:s.coinaAmount)).toNumber(),r=new t(P).mul(new t(s==null?void 0:s.coinbAmount)).toNumber(),y=d>0&&d<.01?"<$0.01":`$${H(v(d,2))}`,D=r>0&&r<.01?"<$0.01":`$${H(v(r,2))}`;let j=new t(0);Number(U)>0&&(j=new t(U).div(Math.pow(10,K.decimals)));const B=new t(j).mul(Math.pow(10,w.lpInfo.decimals)).div(new t(b)).mul(100).toNumber();let q=0;const L=new t(1).div(Math.pow(10,w.decimals)).toNumber(),W=g&&P?v(new t(d).add(new t(r)).toString(),2):"";console.log(g,P,s==null?void 0:s.coinaAmount,s==null?void 0:s.coinbAmount,"myLiquidityUSD###"),B>1?q=v(B,2):B>0&&B<L?q=`<${L}`:q=so(B,1);let k,x;const S=no.sqrtPriceX64ToPrice(i.current_sqrt_price,m,T),F=await f.getCoinAmountFromLiquidity({pool:{...w,tick_lower_index:h,tick_upper_index:n,current_sqrt_price:i==null?void 0:i.current_sqrt_price},position:{...A,liquidity:l.liquidity},roundUp:!1}),a=new t(F.coinaAmount).toNumber(),c=new t(F.coinbAmount).toNumber();console.log(a,c,S.toString(),"###116");const M=v(new t(a).mul(new t(g)).toNumber(),2),N=v(new t(c).mul(new t(P)).toNumber(),2);if(console.log(i,"newPool##"),a>0&&c>0){const $=new t(a).mul(S).add(new t(c));k=new t(a).mul(S).div($).mul(100).toNumber().toFixed(2),x=new t(c).div($).mul(100).toNumber().toFixed(2)}else O>0?(k=100,x=0):X>0?(k=0,x=100):(k=50,x=50);this.positionInfoObj[e]={...w,tick_lower_index:h,tick_upper_index:n,current_sqrt_price:i.current_sqrt_price,myLiquidity:Z(U,K.decimals),amountA:J,amountB:o,myShare:q,myAmountAUSD:y,myAmountBUSD:D,myLiquidityUSD:W,poolCoinARatio:k,poolCoinBRatio:x,poolCoinANum:a,poolCoinBNum:c,poolCoinAUSD:M,poolCoinBUSD:N},console.log(this.positionInfoObj[e],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:e}=await fetch(`${_.Sui.api}/v2/sui/auto_pools`).then(p=>p.json());e&&e.pools&&e.pools.length>0&&(this.apyObj=Object.fromEntries(e.pools.map((p,f)=>[p.object_id,{...p,apr:p.apr.replace("%","")>0&&p.apr.replace("%","")<.01?"<0.01%":v(p.apr.replace("%",""),2)+"%",resultApr:p.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}}}});export{oo as a,fo as u};
