import{a6 as G,l as H,T as Q,a7 as X}from"./entry.b55559e5.js";import{c as s,a as Z}from"./sha256.f6ab0a85.js";import{I as N,C as J,e as oo,J as I,l as W,u as to,b as Y,a as C,s as x,f as z,p as M}from"./pool.38cf1c19.js";import{C as eo,V as $}from"./index.a9181396.js";import{D as i}from"./decimal.0e8aa3f1.js";function R(e){const p={launchpad:s[e||"Sui"].launchpad,ido:s[e||"Sui"].ido,xcetus:s[e||"Sui"].xcetus,xcetus_dividends:s[e||"Sui"].xcetus_dividends,cetus_faucet:s[e||"Sui"].cetus_faucet,xtoken:s[e||"Sui"].xtoken,xtoken_dividends:s[e||"Sui"].xtoken_dividends,token_faucet:s[e||"Sui"].token_faucet,booster:s[e||"Sui"].booster,maker_bonus:s[e||"Sui"].maker_bonus,liquidity_stratefy:s[e||"Sui"].liquidity_stratefy,vaults:s[e||"Sui"].vaults},f={fullRpcUrl:localStorage.getItem(`${e}-currentRpclocal2`)||s[e||"Sui"].fullRpcUrl,simulationAccount:s[e||"Sui"].simulationAccount,cetus_config:s[e||"Sui"].cetus_config,clmm_pool:s[e||"Sui"].clmm_pool,integrate:s[e||"Sui"].integrate,deepbook:s[e||"Sui"].deepbook,deepbook_endpoint_v2:s[e||"Sui"].deepbook_endpoint_v2,aggregatorUrl:s[e||"Sui"].aggregatorUrl},n=new N(f),t=G(new eo(p,n)),g=Z(),k=H(()=>g);Q(()=>{k.value.address&&(n.senderAddress=k.value.address)});const L=async()=>{console.log(t,"sdk###");const o=await t.Vaults.getVaultList();return o&&o.data||[]},P=async o=>await t.Vaults.getVault(o),v=async o=>{if(console.log(o,"###coinType"),n.senderAddress){const c=await t.ClmmSDK.fullClient.getBalance({owner:n.senderAddress,coinType:o});return c&&c.totalBalance}else return 0},l=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:L,getLpBalance:v,deposit:async o=>{const{lowerTick:c,upperTick:u,coinAmount:y,fix_amount_a:_,slippage:a,curSqrtPrice:q,rewarder_coin_types:j}=o;console.log(o,"params###");const d=J.estLiquidityAndcoinAmountFromOneAmounts(c,u,y,_,!0,a,q),m=_?y.toString():d.tokenMaxA.toString(),r=_?d.tokenMaxB.toString():y.toString(),S=await t.Vaults.deposit({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:m,amount_b:r,fix_amount_a:_,slippage:a,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[]});return l(S)},remove:async o=>{const{lowerSqrtPrice:c,upperSqrtPrice:u,lpTokenAmount:y,curSqrtPrice:_,slippage:a,rewarder_coin_types:q,id:j}=o;console.log(o.lpTokenAmount.toString(),"params##");const d=await P(j),m=await n.Pool.getPool(d.pool_id),r=J.getCoinAmountFromLiquidity(y,new oo(m.current_sqrt_price),c,u,!1),S=I(r.coinA.toString()).mul(I(1-a)),h=I(r.coinB.toString()).mul(I(1-a));console.log(r.coinA.toString(),"##.toString()"),console.log(o.lpTokenAmount.toString(),S.toString(),h.toString(),"params##");const A=$.get_protocol_fee_amount(d,r.coinA.toString()),w=$.get_protocol_fee_amount(d,r.coinB.toString());console.log(d,"##vault"),console.log(m,"newPool##"),console.log(S.toString(),h.toString(),w,A,"###protocol_fee_amount_a");const D=await t.Vaults.remove({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:y.toString(),min_amount_a:W(I(r.coinA.toString()).sub(A).toString(),0)||"",min_amount_b:W(I(r.coinB.toString()).sub(w).toString(),0)||"",rewarder_coin_types:[]});return l(D)},getAutoPool:P}}const ro=X("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return to()}},actions:{async getAutoPoolList(){const p=await R("Sui").getAutoPools();console.log(p,"list###");const f=this.getPoolStore,n=p.map(t=>({...f.poolConfigObj[t.pool_id],id:t.id,lp_token_type:t.lp_token_type,autoPoolPositionInfo:t.positins[0],is_pause:t.is_pause,total_supply:t.total_supply,liquidity:t.liquidity,protocol_fee_rate:t.protocol_fee_rate}));this.autoPoolList=n,this.autoPoolObj=Object.fromEntries(n.map((t,g)=>[t.address,t])),this.getMyAutoPoolPosition(),console.log(n,"##autoPoolList")},async getMyAutoPoolPosition(){var g,k,L,P,v,l,T;const e=R("Sui"),p=this.autoPoolList,f=Y("Sui"),n=[],{RATES:t}=this.getPoolStore;for(let b=0;b<p.length;b++){const o=p[b];console.log(o,"poolINfo###");const c=await e.getLpBalance(p[b].lp_token_type);console.log(c,"balance##");const u=(await f.getTokenListByCoinType([p[b].lp_token_type]))[0];console.log(u,"lpInfo##");const y=((g=t[o.coinA.address])==null?void 0:g.price)||"",_=((k=t[o.coinB.address])==null?void 0:k.price)||"",a=o.autoPoolPositionInfo.tick_lower_index,q=o.autoPoolPositionInfo.tick_upper_index;console.log(p[b],"list[i]"),console.log((L=o==null?void 0:o.object)==null?void 0:L.current_sqrt_price,"##poolInfo?.object?.current_sqrt_price");const j={tick_lower_index:a,tick_upper_index:q,current_sqrt_price:(P=o==null?void 0:o.object)==null?void 0:P.current_sqrt_price,liquidity:Number(c)>0?$.get_share_liquidity_by_amount({liquidity:o==null?void 0:o.liquidity,total_supply:o==null?void 0:o.total_supply},c):0};console.log(o,"##position");const d=f.getCoinAmountFromLiquidity({pool:{...o,current_sqrt_price:(v=o==null?void 0:o.object)==null?void 0:v.current_sqrt_price},position:j,roundUp:!1}),m=d.coinaAmount,r=d.coinbAmount;console.log(o.protocol_fee_rate,"##newPoolInfo.protocol_fee_rate");const S=m,h=r,A=new i(y).mul(new i(m)).toNumber(),w=new i(_).mul(new i(r)).toNumber(),D=A>0&&A<.01?"<$0.01":`$${C(x(A,2))}`,V=w>0&&w<.01?"<$0.01":`$${C(x(w,2))}`;let O=0;Number(c)>0&&(O=new i(c).div(Math.pow(10,u.decimals)));const E=y&&_?x(new i(A).add(new i(w)).toString(),2):"",F=o.total_supply;let B=0;O>0&&F>0&&(B=new i(O).mul(Math.pow(10,u.decimals)).div(new i(F)).mul(100).toNumber()),console.log(B,"##myShare");const K=new i(1).div(Math.pow(10,o.decimals)).toNumber();let U=0;B>1?U=x(B,2):B>0&&B<K?U=`<${K}`:B==0?U=0:U=z(B,1),console.log(c,O.toString(),"###balance"),this.positionInfoObj[o.id]={tick_lower_index:a,tick_upper_index:q,current_sqrt_price:(l=o==null?void 0:o.object)==null?void 0:l.current_sqrt_price,myLiquidity:M(c,u.decimals),amountA:S,amountB:h,...o,lpInfo:u,myAmountAUSD:D,myAmountBUSD:V,myLiquidityUSD:E,myShare:U},n.push({tick_lower_index:a,tick_upper_index:q,current_sqrt_price:(T=o==null?void 0:o.object)==null?void 0:T.current_sqrt_price,myLiquidity:M(c,u.decimals),amountA:S,amountB:h,...o,lpInfo:u,myAmountAUSD:D,myAmountBUSD:V,myLiquidityUSD:E,myShare:U})}this.positionInfoList=n,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(e){var A,w;const p=R("Sui"),f=Y("Sui"),n=await p.getAutoPool(e);console.log("newPoolInfo:",n),console.log("this.positionInfoObj[id]:",this.positionInfoObj[e]);const t={...this.positionInfoObj[e],autoPoolPositionInfo:n.positins[0]},g=await p.getLpBalance(t.lp_token_type),k=(await f.getTokenListByCoinType([t.lp_token_type]))[0];console.log(g,"###balance updatePositionItem");const L=t.autoPoolPositionInfo.tick_lower_index,P=t.autoPoolPositionInfo.tick_upper_index,v={tick_lower_index:L,tick_upper_index:P,current_sqrt_price:t.object.current_sqrt_price,liquidity:$.get_share_liquidity_by_amount({liquidity:n==null?void 0:n.liquidity,total_supply:n==null?void 0:n.total_supply},g)},l=f.getCoinAmountFromLiquidity({pool:{current_sqrt_price:t.object.current_sqrt_price,...t},position:v,roundUp:!1});console.log(l,"amountInfo###"),l.coinaAmount,l.coinbAmount;const T=l.coinaAmount,b=l.coinbAmount,{RATES:o}=this.getPoolStore,c=n.total_supply,u=((A=o[t.coinA.address])==null?void 0:A.price)||0,y=((w=o[t.coinB.address])==null?void 0:w.price)||0,_=new i(u).mul(new i(l==null?void 0:l.coinaAmount)).toNumber(),a=new i(y).mul(new i(l==null?void 0:l.coinbAmount)).toNumber(),q=_>0&&_<.01?"<$0.01":`$${C(x(_,2))}`,j=a>0&&a<.01?"<$0.01":`$${C(x(a,2))}`;let d=new i(0);Number(g)>0&&(d=new i(g).div(Math.pow(10,k.decimals)));const m=new i(d).mul(Math.pow(10,t.lpInfo.decimals)).div(new i(c)).mul(100).toNumber();let r=0;const S=new i(1).div(Math.pow(10,t.decimals)).toNumber(),h=u&&y?x(new i(_).add(new i(a)).toString(),2):"";m>1?r=x(m,2):m>0&&m<S?r=`<${S}`:r=z(m,1),this.positionInfoObj[e]={...t,tick_lower_index:L,tick_upper_index:P,current_sqrt_price:t.object.current_sqrt_price,myLiquidity:M(g,k.decimals),amountA:T,amountB:b,myShare:r,myAmountAUSD:q,myAmountBUSD:j,myLiquidityUSD:h},console.log(this.positionInfoObj[e],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){}}});export{R as a,ro as u};
