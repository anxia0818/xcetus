import{C as V,X as c}from"./index.c5eb0457.js";import{w as U,s as l}from"./pool.68b91df5.js";import{c as r,a as W}from"./sha256.97b1e8c2.js";import{D as u}from"./decimal.0e8aa3f1.js";import{a3 as A,m as K,M as B}from"./entry.06373f20.js";function H(a){const w={launchpad:r[a||"Sui"].launchpad,ido:r[a||"Sui"].ido,xcetus:r[a||"Sui"].xcetus,xcetus_dividends:r[a||"Sui"].xcetus_dividends,cetus_faucet:r[a||"Sui"].cetus_faucet,xtoken:r[a||"Sui"].xtoken,xtoken_dividends:r[a||"Sui"].xtoken_dividends,token_faucet:r[a||"Sui"].token_faucet,booster:r[a||"Sui"].booster,maker_bonus:r[a||"Sui"].maker_bonus},v={fullRpcUrl:localStorage.getItem(`${a}-currentRpclocalnew`)||r[a||"Sui"].fullRpcUrl,simulationAccount:r[a||"Sui"].simulationAccount,cetus_config:r[a||"Sui"].cetus_config,clmm_pool:r[a||"Sui"].clmm_pool,integrate:r[a||"Sui"].integrate,deepbook:r[a||"Sui"].deepbook,deepbook_endpoint_v2:r[a||"Sui"].deepbook_endpoint_v2,aggregatorUrl:r[a||"Sui"].aggregatorUrl},C=new U(v),n=A(new V(w,C)),p=W(),g=K(()=>p);B(()=>{g.value.address&&(n.ClmmSDK.senderAddress=g.value.address)});const y=async e=>{const t=await n.XCetusModule.getOwnerLockCetuss(e);return console.log(t,"===>lockWhales"),t},f=async(e,t)=>{const o=c.getAvailableXCetus(e,t);return console.log(o,"==>availableXwhale"),o},S=async e=>{const t=await n.XCetusModule.getOwnerCetusCoins(e);return console.log(t,"===>coins"),t},M=async e=>await n.XCetusModule.getOwnerVeNFT(e),_=async(e,t)=>{const o={amount:e};t&&(o.venft_id=t);const s=await n.XCetusModule.convertPayload(o);return i(s)},X=async()=>{const e=await n.XCetusModule.mintVeNFTPayload();return i(e)},k=async(e,t)=>{const o=await n.XCetusModule.redeemNum(e,t);return console.log(o,"result===>"),{amountOut:o.amountOut,percent:l(new u(o.percent).mul(new u(100)).toString(),2)}},D=async(e,t)=>{const o=await n.XCetusModule.reverseRedeemNum(e,t);return{amountOut:o.amountOut,percent:l(new u(o.percent).mul(new u(100)).toString(),2)}},x=async(e,t,o)=>{const s=await n.XCetusModule.redeemLockPayload({venft_id:t,amount:e,lock_day:o});return console.log(s,"tx===>"),i(s)},T=e=>c.getLockingCetuss(e),b=async(e,t)=>{const o=await n.XCetusModule.getLockCetus(e);if(o&&c.isLocked(o)){const s=n.XCetusModule.cancelRedeemPayload({venft_id:t,lock_id:e});return i(s)}},P=async(e,t)=>{const o=await n.XCetusModule.getLockCetus(e);if(o&&!c.isLocked(o)){const s=await n.XCetusModule.redeemPayload({venft_id:t,lock_id:e});return i(s)}},O=e=>{const t=Date.parse(new Date().toString())/1e3,o=new u(t).sub(e.start_time).div(new u(e.interval_day).mul(60)).toFixed(0,u.ROUND_UP),s=new u(e.start_time).add(new u(o).mul(60*e.interval_day));return console.log(s,"===>nextStartTime"),s.toString()},R=async()=>{const e=await n.XCetusModule.getDividendManager();console.log("dividendManager:",e);const t=O(e);return console.log(t,"===>nextStartTime"),{nextStartTime:t,...e}},I=async(e,t)=>{const o=await n.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);return{rewards:o&&o.rewards||[]}},F=async e=>{const t=await n.XCetusModule.getDividendManager();if(console.log("dividendManager: ",t),t.bonus_types.length>0){const o=await n.XCetusModule.redeemDividendPayload(e,t.bonus_types);return i(o)}},L=async e=>{const t=await n.XCetusModule.getDividendManager(),o=await n.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);console.log("dividendManager: ",t);const s=c.buildDividendRewardTypeList(o.rewards);console.log(s,"===>bonus_types");const d=await n.XCetusModule.redeemDividendV2Payload(e,s,[n.XCetusModule.buileXTokenCoinType()]);return i(d)},h=async e=>{const t=await n.XCetusModule.getOwnerVeNFT(e);if(console.log("nfts: ",t),t){const o=await n.XCetusModule.getXcetusManager();console.log("xcetusManager: ",o);const s=new u(t.xcetus_balance).div(o.treasury).mul(100).toString();return console.log("rate: ",s),Number(s)>0&&Number(s)<.01?"<0.01":l(s,2)}else return 0},i=e=>({transactionBlock:e,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}}),m=e=>{const t=Date.now()/1e3,{start_time:o,interval_day:s}=e,d=Math.ceil((t-o)/(s*60));return console.log(t,"===>currentTime"),console.log(o,"===>start_time"),console.log(t-o,"===>currentTime-start_time"),console.log((t-o)/(s*60),"(currentTime - start_time) / (interval_day * 60)"),d};return{getOwnerLockCetuss:y,getOwnerCetusCoins:S,getOwnerVeNFT:M,depositCetus:_,getMintVeNFTPayload:X,redeemNum:k,getRedeemLockPayload:x,getAvailableXCetus:f,getLockingCetuss:T,getCancelRedeemPayload:b,getVeNFTDividendInfo:I,reverseRedeemNum:D,getRedeemPayload:P,getRedeemDividendPayload:F,getMyShare:h,getDividendManager:R,getPeriod:m,getRedeemDividendV2Payload:L,getPhaseDividendInfo:async e=>{console.log(e,"===>dividendManager");const t=m(e);console.log(t,"===>preiod");const o=await n.XCetusModule.getPhaseDividendInfo(e.dividends.size);return console.log(o,"==>phaseDividendInfo"),o}}}export{H as u};
