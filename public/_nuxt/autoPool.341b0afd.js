import{a8 as wo,C as So,V as bo,a9 as fo}from"./entry.48af4727.js";import{c as g,a as qo}from"./sha256.e9158d3c.js";import{J as ko,b as O,K as z,T as lo,C as so,f as mo,s as w,u as Po,L as To,e as _o,a as co,j as go,p as no}from"./pool.1cf00051.js";import{C as Bo,V as G}from"./index.ce8371c6.js";import{D as t}from"./decimal.0bdeb344.js";function uo(e){const a={launchpad:g[e||"Sui"].launchpad,ido:g[e||"Sui"].ido,xcetus:g[e||"Sui"].xcetus,xcetus_dividends:g[e||"Sui"].xcetus_dividends,cetus_faucet:g[e||"Sui"].cetus_faucet,xtoken:g[e||"Sui"].xtoken,xtoken_dividends:g[e||"Sui"].xtoken_dividends,token_faucet:g[e||"Sui"].token_faucet,booster:g[e||"Sui"].booster,maker_bonus:g[e||"Sui"].maker_bonus,liquidity_stratefy:g[e||"Sui"].liquidity_stratefy,vaults:g[e||"Sui"].vaults},p={fullRpcUrl:localStorage.getItem(`${e}-currentRpclocal2`)||g[e||"Sui"].fullRpcUrl,simulationAccount:g[e||"Sui"].simulationAccount,cetus_config:g[e||"Sui"].cetus_config,clmm_pool:g[e||"Sui"].clmm_pool,integrate:g[e||"Sui"].integrate,deepbook:g[e||"Sui"].deepbook,deepbook_endpoint_v2:g[e||"Sui"].deepbook_endpoint_v2,aggregatorUrl:g[e||"Sui"].aggregatorUrl},u=new ko(p),n=wo(new Bo(a,u)),c=qo(),N=So(()=>c);bo(()=>{N.value.address&&(u.senderAddress=N.value.address)});const Z=async()=>{console.log(n,"sdk###");const o=await n.Vaults.getVaultList();return o&&o.data||[]},D=async o=>await n.Vaults.getVault(o),i=async o=>{if(console.log(o,"###coinType"),u.senderAddress){const l=await n.ClmmSDK.fullClient.getBalance({owner:u.senderAddress,coinType:o});return l&&l.totalBalance}else return 0},m=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:Z,getLpBalance:i,getVault:async o=>{const l=await n.Vaults.getVault(o);return console.log(l,"vault##292"),l},deposit:async o=>{const{lowerTick:l,upperTick:S,slippage:T,rewarder_coin_types:v,isOnlyA:b,isOnlyB:q,currentTickIndex:B,decimal_b:C}=o;console.log(o,"params###");let d=o.fix_amount_a,y,s,f,x=B;if(b||q){const r=await n.Vaults.calculateDepositSwapAmount({lowerTick:l,upperTick:S,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,use_route:!0},!0);console.log(r,"swapResut##211"),r?(s=new O(r.afterSqrtPrice),y=r.fixAmountA===d?new O(z(o.coinAmount).sub(r.swapInAmount).toString()):new O(r.swapOutAmount),f={swap_amount:r.swapInAmount,a2b:d,input_amount:o.coinAmount,route_obj:r.routeObj},d=r.fixAmountA,x=lo.sqrtPriceX64ToTickIndex(new O(r.afterSqrtPrice))):(s=new O(o.curSqrtPrice),y=new O(o.coinAmount))}else s=o.curSqrtPrice,y=new O(o.coinAmount);let K,I,A;console.log(l,B,S,"####138"),x>=l&&x<=S?(K=so.estLiquidityAndcoinAmountFromOneAmounts(l,S,y,d,!0,T,s),I=d?y.toString():K.tokenMaxA.toString(),A=d?K.tokenMaxB.toString():y.toString()):x<l?(I=y.toNumber(),A=0):x>S&&(I=0,A=y.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:I,amount_b:A,fix_amount_a:d,slippage:T,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:f},"params171");const h=await n.Vaults.deposit({lowerTick:l,upperTick:S,vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:I,amount_b:A,fix_amount_a:d,slippage:T,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,swapParams:f});return m(h)},remove:async o=>{const{lowerTick:l,upperTick:S,coinTypeA:T,coinTypeB:v,receiveAmount:b,clmm_pool:q,lowerSqrtPrice:B,upperSqrtPrice:C,fix_amount_a:d,curSqrtPrice:y,slippage:s,rewarder_coin_types:f,id:x,liquidity:K,swapParams:I,isOnlyA:A,isOnlyB:h,sliderVal:r,positionInfo:Y}=o;console.log(r,"sliderVal##");const R=await D(x),H=await u.Pool.getPool(R.pool_id);let L,k,V,$,F,Q,P;if(console.log(b,"##receiveAmount"),A||h){if(L=await n.Vaults.calculateRemoveSwapAmount({lowerTick:l,upperTick:S,curSqrtPrice:H.current_sqrt_price,fix_amount_a:d,receive_amount:b,coinTypeA:T,coinTypeB:v,clmm_pool:q,use_route:!0}),console.log(L,"swapResut###"),L){const U=G.get_share_liquidity_by_amount(R,Y.balance);k=so.getCoinAmountFromLiquidity(new O(r==100?U:L.liquidity),new O(H.current_sqrt_price),B,C,!1),V=G.get_protocol_fee_amount(R,k.coinA.toString()),$=G.get_protocol_fee_amount(R,k.coinB.toString()),F=r==100?Y.balance:G.get_lp_amount_by_liquidity(R,L.liquidity),Q=z(k.coinA.toString()).mul(z(1-o.slippage)),P=z(k.coinB.toString()).mul(z(1-o.slippage)),console.log(Q.toString(),"##minAmountA"),console.log(P.toString(),"##minAmountA")}}else{const U=G.get_share_liquidity_by_amount(R,r==100?Y.balance:o.lpTokenAmount);console.log(U,"#removeLiquidity"),k=so.getCoinAmountFromLiquidity(new O(U),y,B,C,!1),k=so.getCoinAmountFromLiquidity(new O(U),y,B,C,!1),console.log(k,"#coinAmountscoinAmounts"),F=o.lpTokenAmount,Q=z(k.coinA.toString()).mul(z(1-o.slippage)),P=z(k.coinB.toString()).mul(z(1-o.slippage)),console.log(V,$,"##protocol_fee_amount_b"),console.log(Q.toString(),"##minAmountA"),console.log(P.toString(),"##minAmountA"),console.log(o,"params###246")}console.log(F,"lpTokenAmount remove");const X={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:F,min_amount_a:mo(Q,0)||"",min_amount_b:mo(P,0)||"",rewarder_coin_types:[],slippage:o.slippage};console.log(X,"##removeParams"),(A||h)&&(X.swapParams={a2b:!d,swap_amount:L==null?void 0:L.swapInAmount,route_obj:L.routeObj});const M=await n.Vaults.remove(X);return m(M)},getAutoPool:D,calculateDepositSwapAmount:async o=>{const{lowerTick:l,upperTick:S,curSqrtPrice:T,fix_amount_a:v,input_amount:b,coinTypeA:q,coinTypeB:B,clmm_pool:C,slippage:d,decimals:y}=o;console.log(o,"params###");const s=await n.Vaults.calculateDepositSwapAmount({lowerTick:l,upperTick:S,curSqrtPrice:T,fix_amount_a:v,input_amount:b,coinTypeA:q,coinTypeB:B,clmm_pool:C,use_route:!0},!0);if(console.log(s,"##swapResut"),s){const f=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:w(f.sub(f.mul(d)).toNumber(),y)}}return s},calculateRemoveSwapAmount:async o=>{const{lowerTick:l,upperTick:S,curSqrtPrice:T,fix_amount_a:v,receiveAmount:b,coinTypeA:q,coinTypeB:B,clmm_pool:C,slippage:d,decimals:y}=o;console.log(o,"params###");const s=await n.Vaults.calculateRemoveSwapAmount({lowerTick:l,upperTick:S,curSqrtPrice:T,fix_amount_a:v,receive_amount:b,coinTypeA:q,coinTypeB:B,clmm_pool:C,use_route:!0});if(console.log(s,"###swapResut calculateRemoveSwapAmount"),s){const f=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:w(f.sub(f.mul(d)).toNumber(),y)}}return s}}}const Lo=fo("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING",slippage:localStorage.getItem("cetus-auto-slippage")||"0.1"}),getters:{getPoolStore(){return Po()}},actions:{async getAutoPoolList(){const a=await uo("Sui").getAutoPools();console.log(a,"list###");const p=this.getPoolStore,u=a.map(n=>({...p.poolConfigObj[n.pool_id],id:n.id,lp_token_type:n.lp_token_type,autoPoolPositionInfo:n.positins[0],is_pause:n.is_pause,total_supply:n.total_supply,liquidity:n.liquidity,protocol_fee_rate:n.protocol_fee_rate,max_quota:n.max_quota,quota_based_type:To(n.quota_based_type).full_address}));this.autoPoolList=u,this.autoPoolObj=Object.fromEntries(u.map((n,c)=>[n.address,n])),this.getMyAutoPoolPosition(),console.log(u,"##autoPoolList")},async getMyAutoPoolPosition(){var c,N,Z;const e=uo("Sui"),a=this.autoPoolList,p=_o("Sui"),u=[],{RATES:n}=this.getPoolStore;for(let D=0;D<a.length;D++){const i=a[D];console.log(i,"poolINfo###");const m=await p.getPool(i.address),_=await e.getLpBalance(a[D].lp_token_type);console.log(_,"balance##");const j=(await p.getTokenListByCoinType([a[D].lp_token_type]))[0];console.log(j,"lpInfo##");const J=((c=n[i.coinA.address])==null?void 0:c.price)||"",W=((N=n[i.coinB.address])==null?void 0:N.price)||"",E=i.autoPoolPositionInfo.tick_lower_index,o=i.autoPoolPositionInfo.tick_upper_index,l={tick_lower_index:E,tick_upper_index:o,current_sqrt_price:m==null?void 0:m.current_sqrt_price,liquidity:Number(_)>0?G.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},_):0},S=await p.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:m==null?void 0:m.current_sqrt_price},position:l,roundUp:!1});console.log(S,"##amountInfo");const T=S.coinaAmount,v=S.coinbAmount,b=T,q=v,B=i.coinA.decimals,C=i.coinB.decimals,d=p.TickMath.tickIndexToPrice(Number(E),B,C).toString(),y=p.TickMath.tickIndexToPrice(Number(o),B,C).toString(),s=new t(J).mul(new t(T)).toNumber(),f=new t(W).mul(new t(v)).toNumber(),x=s>0&&s<.01?"<$0.01":`$${co(w(s,2))}`,K=f>0&&f<.01?"<$0.01":`$${co(w(f,2))}`,I=lo.sqrtPriceX64ToPrice(m.current_sqrt_price,B,C),A=await p.getCoinAmountFromLiquidity({pool:{...i,tick_lower_index:E,tick_upper_index:o,current_sqrt_price:m==null?void 0:m.current_sqrt_price},position:{...l,liquidity:i.liquidity},roundUp:!1}),h=new t(A.coinaAmount).toNumber(),r=new t(A.coinbAmount).toNumber();console.log(h,r,I.toString(),"###116");const Y=w(new t(h).mul(new t(J)).toNumber(),2),R=w(new t(r).mul(new t(W)).toNumber(),2);console.log(m,"newPool##"),console.log(h,r,"###131");const{ratioA:H,ratioB:L}=G.calculateDepositRatio(E,o,new O.BN(m==null?void 0:m.current_sqrt_price));console.log(H.toString(),L.toString(),"###139");const k=Number(w(H.toString(),2))*100,V=100-k;console.log(h,r,k,V,"###147");let $=0;Number(_)>0&&($=new t(_).div(Math.pow(10,j.decimals)));const F=J&&W?w(new t(s).add(new t(f)).toString(),2):"--",Q=i.total_supply;let P=0;$>0&&Q>0&&(P=new t($).mul(Math.pow(10,j.decimals)).div(new t(Q)).mul(100).toNumber()),console.log(P,"##myShare");const X=new t(1).div(Math.pow(10,i.decimals)).toNumber();let M=0;if(P>1)M=w(P,2);else if(P>0&&P<X)M=`<${X}`;else if(P==0)M=0;else{const po=go(P),Ao=po==-1?2:po+2;M=w(P,Ao)}console.log(_,$.toString(),"###balance");const U=(await p.getTokenListByCoinType([i.quota_based_type]))[0],oo=no(i.max_quota,U.decimals);console.log(i.quota_based_type,U,oo,"##quoteCoinInfo");const to=U.address==i.coin_b_address,eo=to?new t(A.coinaAmount).mul(i.price).add(A.coinbAmount):new t(A.coinaAmount).mul(1/i.price).add(A.coinbAmount),io=eo.toNumber(),ro=oo,yo=to?new t(b).mul(i.price).add(q):new t(b).mul(1/i.price).add(q),ao=new t(ro).sub(yo).mul(W).toNumber();console.log(ao,"##remainingTokenUSD"),console.log(eo.toNumber(),"#poolTokenNum"),this.positionInfoObj[i.id]={tick_lower_index:E,tick_upper_index:o,current_sqrt_price:m.current_sqrt_price,myLiquidity:no(_,j.decimals),amountA:b,amountB:q,...i,lpInfo:j,myAmountAUSD:x,myAmountBUSD:K,myLiquidityUSD:F,myShare:M,minPrice:d,maxPrice:y,poolCoinARatio:k,poolCoinBRatio:V,poolCoinANum:h,poolCoinBNum:r,poolCoinAUSD:Y,poolCoinBUSD:R,quoteUSD:ro,poolUSD:io,balance:_,quoteCoinInfo:U,remainingTokenUSD:ao},u.push({tick_lower_index:E,tick_upper_index:o,current_sqrt_price:(Z=i==null?void 0:i.object)==null?void 0:Z.current_sqrt_price,myLiquidity:no(_,j.decimals),amountA:b,amountB:q,...i,lpInfo:j,myAmountAUSD:x,myAmountBUSD:K,myLiquidityUSD:F,myShare:M,minPrice:d,maxPrice:y,poolCoinARatio:k,poolCoinBRatio:V,poolCoinANum:h,poolCoinBNum:r,poolCoinAUSD:Y,poolCoinBUSD:R,quoteUSD:ro,poolUSD:io,balance:_})}this.positionInfoList=u,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(e){var oo,to;const a=uo("Sui"),p=_o("Sui"),u=await a.getAutoPool(e),n=await p.getPool(u.pool_id);console.log("newPoolInfo:",u),console.log("newPool:",n),console.log("this.positionInfoObj[id]:",this.positionInfoObj[e]);const c={...this.positionInfoObj[e],autoPoolPositionInfo:u.positins[0]},N=await a.getLpBalance(c.lp_token_type),Z=(await p.getTokenListByCoinType([c.lp_token_type]))[0];console.log(N,"###balance updatePositionItem");const D=c.autoPoolPositionInfo.tick_lower_index,i=c.autoPoolPositionInfo.tick_upper_index,m={tick_lower_index:D,tick_upper_index:i,current_sqrt_price:n.current_sqrt_price,liquidity:G.get_share_liquidity_by_amount({liquidity:u==null?void 0:u.liquidity,total_supply:u==null?void 0:u.total_supply},N)},_=p.getCoinAmountFromLiquidity({pool:{current_sqrt_price:n.current_sqrt_price,...c},position:m,roundUp:!1});console.log(_,"amountInfo###");const j=_.coinaAmount,J=_.coinbAmount,{RATES:W}=this.getPoolStore,E=u.total_supply,o=lo.sqrtPriceX64ToPrice(n.current_sqrt_price,c.coinA.decimals,c.coinB.decimals),l=2,S=2,T=((oo=W[c.coinA.address])==null?void 0:oo.price)||0,v=((to=W[c.coinB.address])==null?void 0:to.price)||0,b=new t(T).mul(new t(_==null?void 0:_.coinaAmount)).toNumber(),q=new t(v).mul(new t(_==null?void 0:_.coinbAmount)).toNumber(),B=b>0&&b<.01?"<$0.01":`$${co(w(b,2))}`,C=q>0&&q<.01?"<$0.01":`$${co(w(q,2))}`;let d=new t(0);Number(N)>0&&(d=new t(N).div(Math.pow(10,Z.decimals)));const y=T&&v?w(new t(b).add(new t(q)).toString(),2):"--",s=new t(d).mul(Math.pow(10,c.lpInfo.decimals)).div(new t(E)).mul(100).toNumber();console.log(s,"##myShare");const f=new t(1).div(Math.pow(10,c.decimals)).toNumber();let x=0;if(s>1)x=w(s,2);else if(s>0&&s<f)x=`<${f}`;else if(s==0)x=0;else{const eo=go(s),io=eo==-1?2:eo+2;x=w(s,io)}const K=lo.sqrtPriceX64ToPrice(n.current_sqrt_price,l,S),I=await p.getCoinAmountFromLiquidity({pool:{...c,tick_lower_index:D,tick_upper_index:i,current_sqrt_price:n==null?void 0:n.current_sqrt_price},position:{...m,liquidity:u.liquidity},roundUp:!1}),A=new t(I.coinaAmount).toNumber(),h=new t(I.coinbAmount).toNumber();console.log(A,h,K.toString(),"###116");const r=w(new t(A).mul(new t(T)).toNumber(),2),Y=w(new t(h).mul(new t(v)).toNumber(),2);console.log(n,"newPool##"),console.log(A,h,"###poolCoinBNum");const{ratioA:R,ratioB:H}=G.calculateDepositRatio(D,i,new O.BN(n==null?void 0:n.current_sqrt_price));console.log(R.toString(),H.toString(),"###139");const L=Number(w(R.toString(),2))*100,k=100-L,V=(await p.getTokenListByCoinType([c.quota_based_type]))[0],$=no(c.max_quota,V.decimals);console.log(c.quota_based_type,V,$,"##quoteCoinInfo");const F=V.address==c.coin_b_address,P=(F?new t(I.coinaAmount).mul(c.price).add(I.coinbAmount):new t(I.coinaAmount).mul(1/c.price).add(I.coinbAmount)).toNumber(),X=$,M=F?new t(j).mul(c.price).add(J):new t(j).mul(1/c.price).add(J),U=new t(X).sub(M).mul(v).toNumber();console.log(U,"##remainingTokenUSD"),this.positionInfoObj[e]={...c,tick_lower_index:D,tick_upper_index:i,current_sqrt_price:n.current_sqrt_price,myLiquidity:no(N,Z.decimals),amountA:j,amountB:J,myShare:x,myAmountAUSD:B,myAmountBUSD:C,myLiquidityUSD:y,poolCoinARatio:L,poolCoinBRatio:k,poolCoinANum:A,poolCoinBNum:h,poolCoinAUSD:r,poolCoinBUSD:Y,quoteUSD:X,poolUSD:P,balance:N,price:o,quoteCoinInfo:V,remainingTokenUSD:U},console.log(this.positionInfoObj[e],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:e}=await fetch(`${g.Sui.api}/v2/sui/auto_pools`).then(a=>a.json());e&&e.pools&&e.pools.length>0&&(this.apyObj=Object.fromEntries(e.pools.map((a,p)=>[a.object_id,{...a,apr:a.apr.replace("%","")>0&&a.apr.replace("%","")<.01?"<0.01%":w(a.apr.replace("%",""),2)+"%",resultApr:a.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(e){const a=uo("Sui"),{status:p}=await a.getVault(e);this.currentAutoPoolStatus=p,this.updatePositionItem(e),console.log(p,"status##")},setSlippage(e){console.log(e,"slippage##"),this.slippage=e,localStorage.setItem("cetus-auto-slippage",e)}}});export{uo as a,Lo as u};
