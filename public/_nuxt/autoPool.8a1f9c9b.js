import{a8 as So,C as bo,V as fo,a9 as qo}from"./entry.198f9d98.js";import{c as y,a as ko}from"./sha256.c09cedd1.js";import{J as Po,K as go,b as N,L as z,T as uo,C as io,f as po,s as S,u as To,e as mo,a as so,j as _o,p as eo}from"./pool.52163722.js";import{C as Bo,V as G}from"./index.ad6a2549.js";import{D as t}from"./decimal.0bdeb344.js";function co(e){const p={launchpad:y[e||"Sui"].launchpad,ido:y[e||"Sui"].ido,xcetus:y[e||"Sui"].xcetus,xcetus_dividends:y[e||"Sui"].xcetus_dividends,cetus_faucet:y[e||"Sui"].cetus_faucet,xtoken:y[e||"Sui"].xtoken,xtoken_dividends:y[e||"Sui"].xtoken_dividends,token_faucet:y[e||"Sui"].token_faucet,booster:y[e||"Sui"].booster,maker_bonus:y[e||"Sui"].maker_bonus,liquidity_stratefy:y[e||"Sui"].liquidity_stratefy,vaults:y[e||"Sui"].vaults},m={fullRpcUrl:localStorage.getItem(`${e}-currentRpclocal2`)||y[e||"Sui"].fullRpcUrl,simulationAccount:y[e||"Sui"].simulationAccount,cetus_config:y[e||"Sui"].cetus_config,clmm_pool:y[e||"Sui"].clmm_pool,integrate:y[e||"Sui"].integrate,deepbook:y[e||"Sui"].deepbook,deepbook_endpoint_v2:y[e||"Sui"].deepbook_endpoint_v2,aggregatorUrl:y[e||"Sui"].aggregatorUrl},c=new Po(m),n=So(new Bo(p,c)),l=ko(),j=bo(()=>l);fo(()=>{j.value.address&&(c.senderAddress=j.value.address)});const Y=async()=>{console.log(n,"sdk###");const o=await n.Vaults.getVaultList();return o&&o.data||[]},D=async o=>{const u=await n.Vaults.getVault(o);return console.log(u,"vault##"),{...u,quota_based_type:go(u.quota_based_type).full_address}},i=async o=>{if(console.log(o,"###coinType"),c.senderAddress){const u=await n.ClmmSDK.fullClient.getBalance({owner:c.senderAddress,coinType:o});return u&&u.totalBalance}else return 0},_=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:Y,getLpBalance:i,getVault:async o=>{const u=await n.Vaults.getVault(o);return console.log(u,"vault##292"),u},deposit:async o=>{const{lowerTick:u,upperTick:b,slippage:P,rewarder_coin_types:v,isOnlyA:T,isOnlyB:I,currentTickIndex:B,decimal_b:C}=o;console.log(o,"params###");let g=o.fix_amount_a,A,s,f,x=B;if(T||I){const r=await n.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:b,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,use_route:!0},!0);console.log(r,"swapResut##211"),r?(s=new N(r.afterSqrtPrice),A=r.fixAmountA===g?new N(z(o.coinAmount).sub(r.swapInAmount).toString()):new N(r.swapOutAmount),f={swap_amount:r.swapInAmount,a2b:g,input_amount:o.coinAmount,route_obj:r.routeObj},g=r.fixAmountA,x=uo.sqrtPriceX64ToTickIndex(new N(r.afterSqrtPrice))):(s=new N(o.curSqrtPrice),A=new N(o.coinAmount))}else s=o.curSqrtPrice,A=new N(o.coinAmount);let Q,w,a;console.log(u,B,b,"####138"),x>=u&&x<=b?(Q=io.estLiquidityAndcoinAmountFromOneAmounts(u,b,A,g,!0,P,s),w=g?A.toString():Q.tokenMaxA.toString(),a=g?Q.tokenMaxB.toString():A.toString()):x<u?(w=A.toNumber(),a=0):x>b&&(w=0,a=A.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:w,amount_b:a,fix_amount_a:g,slippage:P,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:f},"params171");const h=await n.Vaults.deposit({lowerTick:u,upperTick:b,vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:w,amount_b:a,fix_amount_a:g,slippage:P,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,swapParams:f});return _(h)},remove:async o=>{const{lowerTick:u,upperTick:b,coinTypeA:P,coinTypeB:v,receiveAmount:T,clmm_pool:I,lowerSqrtPrice:B,upperSqrtPrice:C,fix_amount_a:g,curSqrtPrice:A,slippage:s,rewarder_coin_types:f,id:x,liquidity:Q,swapParams:w,isOnlyA:a,isOnlyB:h,sliderVal:r,positionInfo:F}=o;console.log(r,"sliderVal##");const U=await D(x),Z=await c.Pool.getPool(U.pool_id);let L,k,R,M,E,X,q;if(console.log(T,"##receiveAmount"),a||h){if(L=await n.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:b,curSqrtPrice:Z.current_sqrt_price,fix_amount_a:g,receive_amount:T,coinTypeA:P,coinTypeB:v,clmm_pool:I,use_route:!0}),console.log(L,"swapResut###"),L){const O=G.get_share_liquidity_by_amount(U,F.balance);k=io.getCoinAmountFromLiquidity(new N(r==100?O:L.liquidity),new N(Z.current_sqrt_price),B,C,!1),R=G.get_protocol_fee_amount(U,k.coinA.toString()),M=G.get_protocol_fee_amount(U,k.coinB.toString()),E=r==100?F.balance:G.get_lp_amount_by_liquidity(U,L.liquidity),X=z(k.coinA.toString()).mul(z(1-o.slippage)),q=z(k.coinB.toString()).mul(z(1-o.slippage)),console.log(X.toString(),"##minAmountA"),console.log(q.toString(),"##minAmountA")}}else{const O=G.get_share_liquidity_by_amount(U,r==100?F.balance:o.lpTokenAmount);console.log(O,"#removeLiquidity"),k=io.getCoinAmountFromLiquidity(new N(O),A,B,C,!1),k=io.getCoinAmountFromLiquidity(new N(O),A,B,C,!1),console.log(k,"#coinAmountscoinAmounts"),E=o.lpTokenAmount,X=z(k.coinA.toString()).mul(z(1-o.slippage)),q=z(k.coinB.toString()).mul(z(1-o.slippage)),console.log(R,M,"##protocol_fee_amount_b"),console.log(X.toString(),"##minAmountA"),console.log(q.toString(),"##minAmountA"),console.log(o,"params###246")}console.log(E,"lpTokenAmount remove");const W={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:E,min_amount_a:po(X,0)||"",min_amount_b:po(q,0)||"",rewarder_coin_types:[],slippage:o.slippage};console.log(W,"##removeParams"),(a||h)&&(W.swapParams={a2b:!g,swap_amount:L==null?void 0:L.swapInAmount,route_obj:L.routeObj});const V=await n.Vaults.remove(W);return _(V)},getAutoPool:D,calculateDepositSwapAmount:async o=>{const{lowerTick:u,upperTick:b,curSqrtPrice:P,fix_amount_a:v,input_amount:T,coinTypeA:I,coinTypeB:B,clmm_pool:C,slippage:g,decimals:A}=o;console.log(o,"params###");const s=await n.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:b,curSqrtPrice:P,fix_amount_a:v,input_amount:T,coinTypeA:I,coinTypeB:B,clmm_pool:C,use_route:!0},!0);if(console.log(s,"##swapResut"),s){const f=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:S(f.sub(f.mul(g)).toNumber(),A)}}return s},calculateRemoveSwapAmount:async o=>{const{lowerTick:u,upperTick:b,curSqrtPrice:P,fix_amount_a:v,receiveAmount:T,coinTypeA:I,coinTypeB:B,clmm_pool:C,slippage:g,decimals:A}=o;console.log(o,"params###");const s=await n.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:b,curSqrtPrice:P,fix_amount_a:v,receive_amount:T,coinTypeA:I,coinTypeB:B,clmm_pool:C,use_route:!0});if(console.log(s,"###swapResut calculateRemoveSwapAmount"),s){const f=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:S(f.sub(f.mul(g)).toNumber(),A)}}return s}}}const Lo=qo("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING",slippage:localStorage.getItem("cetus-auto-slippage")||"0.1"}),getters:{getPoolStore(){return To()}},actions:{async getAutoPoolList(){const p=await co("Sui").getAutoPools();console.log(p,"list###");const m=this.getPoolStore,c=p.map(n=>({...m.poolConfigObj[n.pool_id],id:n.id,lp_token_type:n.lp_token_type,autoPoolPositionInfo:n.positins[0],is_pause:n.is_pause,total_supply:n.total_supply,liquidity:n.liquidity,protocol_fee_rate:n.protocol_fee_rate,max_quota:n.max_quota,quota_based_type:go(n.quota_based_type).full_address}));this.autoPoolList=c,this.autoPoolObj=Object.fromEntries(c.map((n,l)=>[n.address,n])),this.getMyAutoPoolPosition(),console.log(c,"##autoPoolList")},async getMyAutoPoolPosition(){var l,j,Y;const e=co("Sui"),p=this.autoPoolList,m=mo("Sui"),c=[],{RATES:n}=this.getPoolStore;for(let D=0;D<p.length;D++){const i=p[D];console.log(i,"poolINfo###");const _=await m.getPool(i.address),d=await e.getLpBalance(p[D].lp_token_type);console.log(d,"balance##");const $=(await m.getTokenListByCoinType([p[D].lp_token_type]))[0];console.log($,"lpInfo##");const H=((l=n[i.coinA.address])==null?void 0:l.price)||"",J=((j=n[i.coinB.address])==null?void 0:j.price)||"",K=i.autoPoolPositionInfo.tick_lower_index,o=i.autoPoolPositionInfo.tick_upper_index,u={tick_lower_index:K,tick_upper_index:o,current_sqrt_price:_==null?void 0:_.current_sqrt_price,liquidity:Number(d)>0?G.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},d):0},b=await m.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:_==null?void 0:_.current_sqrt_price},position:u,roundUp:!1});console.log(b,"##amountInfo");const P=b.coinaAmount,v=b.coinbAmount,T=P,I=v,B=i.coinA.decimals,C=i.coinB.decimals,g=m.TickMath.tickIndexToPrice(Number(K),B,C).toString(),A=m.TickMath.tickIndexToPrice(Number(o),B,C).toString(),s=new t(H).mul(new t(P)).toNumber(),f=new t(J).mul(new t(v)).toNumber(),x=s>0&&s<.01?"<$0.01":`$${so(S(s,2))}`,Q=f>0&&f<.01?"<$0.01":`$${so(S(f,2))}`,w=uo.sqrtPriceX64ToPrice(_.current_sqrt_price,B,C),a=await m.getCoinAmountFromLiquidity({pool:{...i,tick_lower_index:K,tick_upper_index:o,current_sqrt_price:_==null?void 0:_.current_sqrt_price},position:{...u,liquidity:i.liquidity},roundUp:!1}),h=new t(a.coinaAmount).toNumber(),r=new t(a.coinbAmount).toNumber();console.log(h,r,w.toString(),"###116");const F=S(new t(h).mul(new t(H)).toNumber(),2),U=S(new t(r).mul(new t(J)).toNumber(),2);console.log(_,"newPool##"),console.log(h,r,"###131");const{ratioA:Z,ratioB:L}=G.calculateDepositRatio(K,o,new N.BN(_==null?void 0:_.current_sqrt_price));console.log(Z.toString(),L.toString(),"###139");const k=Number(S(Z.toString(),2))*100,R=100-k;console.log(h,r,k,R,"###147");let M=0;Number(d)>0&&(M=new t(d).div(Math.pow(10,$.decimals)));const E=H&&J?S(new t(s).add(new t(f)).toString(),2):"--",X=i.total_supply;let q=0;M>0&&X>0&&(q=new t(M).mul(Math.pow(10,$.decimals)).div(new t(X)).mul(100).toNumber()),console.log(q,"##myShare");const W=new t(1).div(Math.pow(10,i.decimals)).toNumber();let V=0;if(q>1)V=S(q,2);else if(q>0&&q<W)V=`<${W}`;else if(q==0)V=0;else{const ao=_o(q),wo=ao==-1?2:ao+2;V=S(q,wo)}console.log(d,M.toString(),"###balance");const O=(await m.getTokenListByCoinType([i.quota_based_type]))[0],oo=eo(i.max_quota,O.decimals);console.log(i.quota_based_type,O,oo,"##quoteCoinInfo");const to=O.address==i.coin_b_address,no=to?new t(a.coinaAmount).mul(i.price).add(a.coinbAmount):new t(a.coinaAmount).mul(1/i.price).add(a.coinbAmount),yo=no.toNumber(),lo=oo,Ao=to?new t(a.coinaAmount).mul(i.price).add(a.coinbAmount):new t(a.coinaAmount).mul(1/i.price).add(a.coinbAmount),ro=new t(lo).sub(Ao).mul(J).toNumber();console.log(ro,"remainingTokenUSD##"),console.log(no.toNumber(),"#poolTokenNum"),this.positionInfoObj[i.id]={tick_lower_index:K,tick_upper_index:o,current_sqrt_price:_.current_sqrt_price,myLiquidity:eo(d,$.decimals),amountA:T,amountB:I,...i,lpInfo:$,myAmountAUSD:x,myAmountBUSD:Q,myLiquidityUSD:E,myShare:V,minPrice:g,maxPrice:A,poolCoinARatio:k,poolCoinBRatio:R,poolCoinANum:h,poolCoinBNum:r,poolCoinAUSD:F,poolCoinBUSD:U,quoteUSD:lo,poolUSD:Number(F)+Number(U),balance:d,quoteCoinInfo:O,remainingTokenUSD:ro},c.push({tick_lower_index:K,tick_upper_index:o,current_sqrt_price:(Y=i==null?void 0:i.object)==null?void 0:Y.current_sqrt_price,myLiquidity:eo(d,$.decimals),amountA:T,amountB:I,...i,lpInfo:$,myAmountAUSD:x,myAmountBUSD:Q,myLiquidityUSD:E,myShare:V,minPrice:g,maxPrice:A,poolCoinARatio:k,poolCoinBRatio:R,poolCoinANum:h,poolCoinBNum:r,poolCoinAUSD:F,poolCoinBUSD:U,quoteUSD:lo,poolUSD:yo,balance:d})}this.positionInfoList=c,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(e){var O,oo;const p=co("Sui"),m=mo("Sui"),c=await p.getAutoPool(e),n=await m.getPool(c.pool_id);console.log("newPoolInfo:",c),console.log("newPool:",n),console.log("this.positionInfoObj[id]:",this.positionInfoObj[e]);const l={...this.positionInfoObj[e],autoPoolPositionInfo:c.positins[0]},j=await p.getLpBalance(l.lp_token_type),Y=(await m.getTokenListByCoinType([l.lp_token_type]))[0];console.log(j,"###balance updatePositionItem");const D=l.autoPoolPositionInfo.tick_lower_index,i=l.autoPoolPositionInfo.tick_upper_index,_={tick_lower_index:D,tick_upper_index:i,current_sqrt_price:n.current_sqrt_price,liquidity:G.get_share_liquidity_by_amount({liquidity:c==null?void 0:c.liquidity,total_supply:c==null?void 0:c.total_supply},j)},d=m.getCoinAmountFromLiquidity({pool:{current_sqrt_price:n.current_sqrt_price,...l},position:_,roundUp:!1});console.log(d,"amountInfo###");const $=d.coinaAmount,H=d.coinbAmount,{RATES:J}=this.getPoolStore,K=c.total_supply,o=uo.sqrtPriceX64ToPrice(n.current_sqrt_price,l.coinA.decimals,l.coinB.decimals),u=2,b=2,P=((O=J[l.coinA.address])==null?void 0:O.price)||0,v=((oo=J[l.coinB.address])==null?void 0:oo.price)||0,T=new t(P).mul(new t(d==null?void 0:d.coinaAmount)).toNumber(),I=new t(v).mul(new t(d==null?void 0:d.coinbAmount)).toNumber(),B=T>0&&T<.01?"<$0.01":`$${so(S(T,2))}`,C=I>0&&I<.01?"<$0.01":`$${so(S(I,2))}`;let g=new t(0);Number(j)>0&&(g=new t(j).div(Math.pow(10,Y.decimals)));const A=P&&v?S(new t(T).add(new t(I)).toString(),2):"--",s=new t(g).mul(Math.pow(10,l.lpInfo.decimals)).div(new t(K)).mul(100).toNumber();console.log(s,"##myShare");const f=new t(1).div(Math.pow(10,l.decimals)).toNumber();let x=0;if(s>1)x=S(s,2);else if(s>0&&s<f)x=`<${f}`;else if(s==0)x=0;else{const to=_o(s),no=to==-1?2:to+2;x=S(s,no)}const Q=uo.sqrtPriceX64ToPrice(n.current_sqrt_price,u,b),w=await m.getCoinAmountFromLiquidity({pool:{...l,tick_lower_index:D,tick_upper_index:i,current_sqrt_price:n==null?void 0:n.current_sqrt_price},position:{..._,liquidity:c.liquidity},roundUp:!1}),a=new t(w.coinaAmount).toNumber(),h=new t(w.coinbAmount).toNumber();console.log(a,h,Q.toString(),"###116");const r=S(new t(a).mul(new t(P)).toNumber(),2),F=S(new t(h).mul(new t(v)).toNumber(),2);console.log(n,"newPool##"),console.log(a,h,"###poolCoinBNum");const{ratioA:U,ratioB:Z}=G.calculateDepositRatio(D,i,new N.BN(n==null?void 0:n.current_sqrt_price));console.log(U.toString(),Z.toString(),"###139");const L=Number(S(U.toString(),2))*100,k=100-L,R=(await m.getTokenListByCoinType([c.quota_based_type]))[0],M=eo(c.max_quota,R.decimals);console.log(c.quota_based_type,R,M,"##quoteCoinInfo");const E=R.address==l.coin_b_address;(E?new t(w.coinaAmount).mul(l.price).add(w.coinbAmount):new t(w.coinaAmount).mul(1/l.price).add(w.coinbAmount)).toNumber();const q=M,W=E?new t(w.coinaAmount).mul(l.price).add(w.coinbAmount):new t(w.coinaAmount).mul(1/l.price).add(w.coinbAmount),V=new t(q).sub(W).mul(v).toNumber();console.log(V,"remainingTokenUSD##"),this.positionInfoObj[e]={...l,tick_lower_index:D,tick_upper_index:i,current_sqrt_price:n.current_sqrt_price,myLiquidity:eo(j,Y.decimals),amountA:$,amountB:H,myShare:x,myAmountAUSD:B,myAmountBUSD:C,myLiquidityUSD:A,poolCoinARatio:L,poolCoinBRatio:k,poolCoinANum:a,poolCoinBNum:h,poolCoinAUSD:r,poolCoinBUSD:F,quoteUSD:q,poolUSD:Number(r)+Number(F),balance:j,price:o,quoteCoinInfo:R,remainingTokenUSD:V},console.log(this.positionInfoObj[e],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:e}=await fetch(`${y.Sui.api}/v2/sui/auto_pools`).then(p=>p.json());e&&e.pools&&e.pools.length>0&&(this.apyObj=Object.fromEntries(e.pools.map((p,m)=>[p.object_id,{...p,apr:p.apr.replace("%","")>0&&p.apr.replace("%","")<.01?"<0.01%":S(p.apr.replace("%",""),2)+"%",resultApr:p.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(e){const p=co("Sui"),{status:m}=await p.getVault(e);this.currentAutoPoolStatus=m,this.updatePositionItem(e),console.log(m,"status##")},setSlippage(e){console.log(e,"slippage##"),this.slippage=e,localStorage.setItem("cetus-auto-slippage",e)}}});export{co as a,Lo as u};
