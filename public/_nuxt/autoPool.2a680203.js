import{a6 as $,l as V,T as K,a7 as H}from"./entry.f66a095f.js";import{c as r,a as W}from"./sha256.6e689c4a.js";import{H as Y,C as E,I as v,l as F,u as z,b as T,s as b,f as O,p as C}from"./pool.d7777846.js";import{C as G}from"./index.832ca389.js";import{D as n}from"./decimal.0e8aa3f1.js";function M(t){const l={launchpad:r[t||"Sui"].launchpad,ido:r[t||"Sui"].ido,xcetus:r[t||"Sui"].xcetus,xcetus_dividends:r[t||"Sui"].xcetus_dividends,cetus_faucet:r[t||"Sui"].cetus_faucet,xtoken:r[t||"Sui"].xtoken,xtoken_dividends:r[t||"Sui"].xtoken_dividends,token_faucet:r[t||"Sui"].token_faucet,booster:r[t||"Sui"].booster,maker_bonus:r[t||"Sui"].maker_bonus,liquidity_stratefy:r[t||"Sui"].liquidity_stratefy,vaults:r[t||"Sui"].vaults},i={fullRpcUrl:localStorage.getItem(`${t}-currentRpclocal2`)||r[t||"Sui"].fullRpcUrl,simulationAccount:r[t||"Sui"].simulationAccount,cetus_config:r[t||"Sui"].cetus_config,clmm_pool:r[t||"Sui"].clmm_pool,integrate:r[t||"Sui"].integrate,deepbook:r[t||"Sui"].deepbook,deepbook_endpoint_v2:r[t||"Sui"].deepbook_endpoint_v2,aggregatorUrl:r[t||"Sui"].aggregatorUrl},e=new Y(i),s=$(new G(l,e)),y=W(),f=V(()=>y);K(()=>{f.value.address&&(e.senderAddress=f.value.address)});const P=async()=>{console.log(s,"sdk###");const o=await s.Vaults.getVaultList();return o&&o.data||[]},B=async o=>{console.log(o,"###coinType");const u=await s.ClmmSDK.fullClient.getBalance({owner:e.senderAddress,coinType:o});return u&&u.totalBalance},a=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:P,getLpBalance:B,deposit:async o=>{const{lowerTick:u,upperTick:c,coinAmount:m,fix_amount_a:d,slippage:S,curSqrtPrice:p,rewarder_coin_types:h}=o;console.log(o,"params###");const g=E.estLiquidityAndcoinAmountFromOneAmounts(u,c,m,d,!0,S,p),A=d?m.toString():g.tokenMaxA.toString(),w=d?g.tokenMaxB.toString():m.toString(),_=await s.Vaults.deposit({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:A,amount_b:w,fix_amount_a:d,slippage:S,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:h});return a(_)},remove:async o=>{const{lowerSqrtPrice:u,upperSqrtPrice:c,lpTokenAmount:m,curSqrtPrice:d,slippage:S,rewarder_coin_types:p}=o,h=E.getCoinAmountFromLiquidity(m,d,u,c,!0),g=v(h.coinA.toString()).mul(v(1-S)),A=v(h.coinB.toString()).mul(v(1-S));console.log(o.lpTokenAmount.toString(),g.toString(),A.toString(),"params##");const w=await s.Vaults.remove({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:m.toString(),min_amount_a:F(g.toString(),0)||"",min_amount_b:F(A.toString(),0)||"",rewarder_coin_types:p});return a(w)}}}const oo=H("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return z()}},actions:{async getAutoPoolList(){const l=await M("Sui").getAutoPools();console.log(l,"list###");const i=this.getPoolStore,e=l.map(s=>({...i.poolConfigObj[s.pool_id],id:s.id,lp_token_type:s.lp_token_type,autoPoolPositionInfo:s.positins[0],is_pause:s.is_pause}));this.autoPoolList=e,this.autoPoolObj=Object.fromEntries(e.map((s,y)=>[s.address,s])),console.log(e,"##autoPoolList")},async getMyAutoPoolPosition(){var y,f,P,B,a,L;const t=M("Sui"),l=this.autoPoolList,i=T("Sui"),e=[],{RATES:s}=this.getPoolStore;for(let q=0;q<l.length;q++){const o=l[q],u=await t.getLpBalance(l[q].lp_token_type),c=(await i.getTokenListByCoinType([l[q].lp_token_type]))[0];console.log(c,"lpInfo##");const m=((y=s[o.coinA.address])==null?void 0:y.price)||"",d=((f=s[o.coinB.address])==null?void 0:f.price)||"",S=o.autoPoolPositionInfo.tick_lower_index,p=o.autoPoolPositionInfo.tick_upper_index,h={tick_lower_index:S,tick_upper_index:p,current_sqrt_price:(P=o==null?void 0:o.object)==null?void 0:P.current_sqrt_price,liquidity:u},g=i.getCoinAmountFromLiquidity({pool:{current_sqrt_price:(B=o==null?void 0:o.object)==null?void 0:B.current_sqrt_price,...o},position:h,roundUp:!1}),A=g.coinaAmount,w=g.coinbAmount,_=new n(m).mul(new n(A)).toString(),k=new n(d).mul(new n(w)).toString();let x=0;Number(u)>0&&(x=new n(u).div(Math.pow(10,c.decimals)));const I=m&&d?b(new n(_).add(new n(k)).toString(),2):"",U=o.autoPoolPositionInfo.liquidity;let j=0;x>0&&U>0&&(j=new n(x).mul(Math.pow(10,c.decimals)).div(new n(U)).mul(100).toNumber()),console.log(j,"##myShare");const R=new n(1).div(Math.pow(10,o.decimals)).toNumber();let D=0;j>1?D=b(j,2):j>0&&j<R?D=`<${R}`:D=O(j,1),console.log(u,x.toString(),"###balance"),this.positionInfoObj[o.address]={tick_lower_index:S,tick_upper_index:p,current_sqrt_price:(a=o==null?void 0:o.object)==null?void 0:a.current_sqrt_price,myLiquidity:C(u,c.decimals),amountA:A,amountB:w,...o,lpInfo:c,myAmountAUSD:_,myAmountBUSD:k,myLiquidityUSD:I,myShare:D},e.push({tick_lower_index:S,tick_upper_index:p,current_sqrt_price:(L=o==null?void 0:o.object)==null?void 0:L.current_sqrt_price,myLiquidity:C(u,c.decimals),amountA:A,amountB:w,...o,lpInfo:c,myAmountAUSD:_,myAmountBUSD:k,myLiquidityUSD:I,myShare:D})}this.positionInfoList=e,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async getUserPositionUSD(){const{RATES:t}=this.getPoolStore,l=T("Sui");console.log(this.positionInfoList,"###this.positionInfoList"),this.positionInfoList.forEach(i=>{var _,k;const e=((_=t[i.coinA.address])==null?void 0:_.price)||"",s=((k=t[i.coinB.address])==null?void 0:k.price)||"",y=new n(e).mul(new n(i==null?void 0:i.amountA)).toString(),f=new n(s).mul(new n(i==null?void 0:i.amountB)).toString(),P=2,B=2,a=b(y,P),L=b(f,B),q=e&&s?new n(a).add(new n(L)).toString():"",o=i.myLiquidity,u=i.autoPoolPositionInfo.liquidity;console.log(o,u,"####totalLiquidity");let c=0;o>0&&u>0&&(c=new n(o).mul(Math.pow(10,i.lpInfo.decimals)).div(new n(u)).mul(100).toNumber()),console.log(c,"##myShare");const m=new n(1).div(Math.pow(10,i.decimals)).toNumber();let d=0;c>1?d=b(c,2):c>0&&c<m?d=`<${m}`:d=O(c,1);const S={tick_lower_index:i.tick_lower_index,tick_upper_index:i.tick_upper_index,current_sqrt_price:i.object.current_sqrt_price,liquidity:u},p=l.getCoinAmountFromLiquidity({pool:{current_sqrt_price:i.object.current_sqrt_price,...i},position:S,roundUp:!1});console.log(p,"poolAmountInfo##");const h=new n(e).mul(new n(p==null?void 0:p.coinaAmount)).toString(),g=new n(s).mul(new n(p==null?void 0:p.coinbAmount)).toString(),A=b(h,P),w=b(g,B);console.log(p,"###poolAmountInfo"),console.log(c,"###myShare"),console.log(y,f,"##myPosition"),this.positionInfoObj[i.address]={...this.positionInfoObj[i.address],myAmountAUSD:a,myAmountBUSD:L,myLiquidityUSD:q,myShare:d,poolAmoutnA:A,poolAmoutnB:w},console.log(this.positionInfoObj,"###this.positionInfoObj")})},async updatePositionItem(t){var I,U;const l=M("Sui"),i=T("Sui"),e=this.positionInfoObj[t],s=await l.getLpBalance(e.lp_token_type),y=(await i.getTokenListByCoinType([e.lp_token_type]))[0];console.log(s,"###balance updatePositionItem");const f=e.autoPoolPositionInfo.tick_lower_index,P=e.autoPoolPositionInfo.tick_upper_index,B={tick_lower_index:f,tick_upper_index:P,current_sqrt_price:e.object.current_sqrt_price,liquidity:s},a=i.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.object.current_sqrt_price,...e},position:B,roundUp:!1});console.log(a,"amountInfo###");const L=a.coinaAmount,q=a.coinbAmount,{RATES:o}=this.getPoolStore,u=e.autoPoolPositionInfo.liquidity,c=2,m=2,d=((I=o[e.coinA.address])==null?void 0:I.price)||0,S=((U=o[e.coinB.address])==null?void 0:U.price)||0,p=new n(d).mul(new n(a==null?void 0:a.coinaAmount)).toString(),h=new n(S).mul(new n(a==null?void 0:a.coinbAmount)).toString(),g=b(p,c),A=b(h,m);let w=new n(0);Number(s)>0&&(w=new n(s).div(Math.pow(10,y.decimals)));const _=new n(w).mul(Math.pow(10,e.lpInfo.decimals)).div(new n(u)).mul(100).toNumber();let k=0;const x=new n(1).div(Math.pow(10,e.decimals)).toNumber();_>1?k=b(_,2):_>0&&_<x?k=`<${x}`:k=O(_,1),this.positionInfoObj[e.address]={...e,tick_lower_index:f,tick_upper_index:P,current_sqrt_price:e.object.current_sqrt_price,myLiquidity:b(C(s,y.decimals),2),amountA:L,amountB:q,myShare:k,myAmountAUSD:g,myAmountBUSD:A}},async getAutoPoolAPY(){const{data:t}=await fetch(`${r.Sui.api}/v2/sui/auto_pools`).then(l=>l.json());t&&t.pools&&t.pools.length>0&&(this.apyObj=Object.fromEntries(t.pools.map((l,i)=>[l.object_id,{...l,apr:O(l.apr.replace("%",""),2)+"%"}])),console.log(this.apyObj,"data##"))}}});export{M as a,oo as u};
