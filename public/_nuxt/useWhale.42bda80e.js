import{C as L,X as i}from"./index.83a6ef43.js";import{F as V,s as l}from"./pool.a2091332.js";import{c as a}from"./sha256.7b3cb811.js";import{u as A}from"./wallet.4c197225.js";import{D as d}from"./decimal.0bdeb344.js";import{a6 as W,l as E,R as U}from"./entry.0f228881.js";function H(r){const m={launchpad:a[r||"Sui"].launchpad,ido:a[r||"Sui"].ido,xcetus:a[r||"Sui"].xcetus,xcetus_dividends:a[r||"Sui"].xcetus_dividends,cetus_faucet:a[r||"Sui"].cetus_faucet,xtoken:a[r||"Sui"].xtoken,xtoken_dividends:a[r||"Sui"].xtoken_dividends,token_faucet:a[r||"Sui"].token_faucet,booster:a[r||"Sui"].booster,maker_bonus:a[r||"Sui"].maker_bonus},w={fullRpcUrl:localStorage.getItem(`${r}-currentRpclocal2`)||a[r||"Sui"].fullRpcUrl,simulationAccount:a[r||"Sui"].simulationAccount,cetus_config:a[r||"Sui"].cetus_config,clmm_pool:a[r||"Sui"].clmm_pool,integrate:a[r||"Sui"].integrate,deepbook:a[r||"Sui"].deepbook,deepbook_endpoint_v2:a[r||"Sui"].deepbook_endpoint_v2,aggregatorUrl:a[r||"Sui"].aggregatorUrl},v=new V(w),n=W(new L(m,v)),f=A(),g=E(()=>f);U(()=>{g.value.address&&(n.ClmmSDK.senderAddress=g.value.address)});const C=async e=>{const t=await n.XCetusModule.getOwnerLockCetuss(e);return console.log(t,"===>lockWhales"),t},y=async(e,t)=>{const o=i.getAvailableXCetus(e,t);return console.log(o,"==>availableXwhale"),o},p=async e=>{const t=await n.XCetusModule.getOwnerCetusCoins(e);return console.log(t,"===>coins"),t},M=async e=>await n.XCetusModule.getOwnerVeNFT(e),S=async(e,t)=>{const o={amount:e};t&&(o.venft_id=t);const s=await n.XCetusModule.convertPayload(o);return u(s)},X=async()=>{const e=await n.XCetusModule.mintVeNFTPayload();return u(e)},k=async(e,t)=>{const o=await n.XCetusModule.redeemNum(e,t);return console.log(o,"result===>"),{amountOut:o.amountOut,percent:l(new d(o.percent).mul(new d(100)).toString(),2)}},_=async(e,t)=>{const o=await n.XCetusModule.reverseRedeemNum(e,t);return{amountOut:o.amountOut,percent:l(new d(o.percent).mul(new d(100)).toString(),2)}},D=async(e,t,o)=>{const s=await n.XCetusModule.redeemLockPayload({venft_id:t,amount:e,lock_day:o});return console.log(s,"tx===>"),u(s)},x=e=>i.getLockingCetuss(e),b=async(e,t)=>{const o=await n.XCetusModule.getLockCetus(e);if(o&&i.isLocked(o)){const s=n.XCetusModule.cancelRedeemPayload({venft_id:t,lock_id:e});return u(s)}},T=async(e,t)=>{const o=await n.XCetusModule.getLockCetus(e);if(o&&!i.isLocked(o)){const s=await n.XCetusModule.redeemPayload({venft_id:t,lock_id:e});return u(s)}},P=async()=>{const e=await n.XCetusModule.getDividendManager();console.log("dividendManager:",e);const t=Number(i.getNextStartTime(e).toString());return console.log(t,"===>nextStartTime"),{nextStartTime:t,...e}},I=async(e,t)=>{const o=await n.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);return{rewards:o&&o.rewards||[]}},O=async e=>{const t=await n.XCetusModule.getDividendManager();if(console.log("dividendManager: ",t),t.bonus_types.length>0){const o=await n.XCetusModule.redeemDividendPayload(e,t.bonus_types);return u(o)}},R=e=>{const t=new Set;return e.forEach(o=>{o.rewards.forEach(s=>{s.amount>0&&t.add(s.coin_type)})}),Array.from(t)},h=async e=>{const t=await n.XCetusModule.getDividendManager(),o=await n.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);console.log("veNFTDividendInfo: ",o);const s=R(o.rewards);console.log(s,"===>bonus_types");const c=await n.XCetusModule.redeemDividendV2Payload(e,s,[n.XCetusModule.buileXTokenCoinType()]);return u(c)},F=async e=>{console.log(e,"==>accountAddress");try{const t=await n.XCetusModule.getOwnerVeNFT(e);if(console.log("nfts: ",t),t){const o=await n.XCetusModule.getXcetusManager();console.log("xcetusManager: ",o);const s=new d(t.xcetus_balance).div(o.treasury).mul(100).toString();return console.log("rate: ",s),Number(s)>0&&Number(s)<.001?"<0.001":l(s,3)}else return 0}catch{return"--"}},u=e=>({transactionBlock:e,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getOwnerLockCetuss:C,getOwnerCetusCoins:p,getOwnerVeNFT:M,depositCetus:S,getMintVeNFTPayload:X,redeemNum:k,getRedeemLockPayload:D,getAvailableXCetus:y,getLockingCetuss:x,getCancelRedeemPayload:b,getVeNFTDividendInfo:I,reverseRedeemNum:_,getRedeemPayload:T,getRedeemDividendPayload:O,getMyShare:F,getDividendManager:P,getPeriod:e=>{const t=Date.now()/1e3,{start_time:o,interval_day:s}=e;console.log(e,"#dividendManager");const c=Math.ceil((t-o)/(s*24*3600));return console.log(t,"===>currentTime"),console.log(o,"===>start_time"),console.log(t-o,"===>currentTime-start_time"),console.log((t-o)/(s*60),"(currentTime - start_time) / (interval_day * 60)"),c},getRedeemDividendV2Payload:h,getPhaseDividendInfo:async e=>{const t=await n.XCetusModule.getPhaseDividendInfo(e.dividends.size);return console.log(t,"==>phaseDividendInfo"),t}}}export{H as u};
