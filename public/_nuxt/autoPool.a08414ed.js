import{a6 as E,l as F,T as R,a7 as V}from"./entry.5e6d664c.js";import{c as r,a as $}from"./sha256.fb8506f3.js";import{G as K,C as T,H as h,k as C,u as G,b as j,p as I,s as L,I as M}from"./pool.9d628068.js";import{C as H}from"./index.705ff28f.js";import{D as c}from"./decimal.0e8aa3f1.js";function v(o){const u={launchpad:r[o||"Sui"].launchpad,ido:r[o||"Sui"].ido,xcetus:r[o||"Sui"].xcetus,xcetus_dividends:r[o||"Sui"].xcetus_dividends,cetus_faucet:r[o||"Sui"].cetus_faucet,xtoken:r[o||"Sui"].xtoken,xtoken_dividends:r[o||"Sui"].xtoken_dividends,token_faucet:r[o||"Sui"].token_faucet,booster:r[o||"Sui"].booster,maker_bonus:r[o||"Sui"].maker_bonus,liquidity_stratefy:r[o||"Sui"].liquidity_stratefy,vaults:r[o||"Sui"].vaults},i={fullRpcUrl:localStorage.getItem(`${o}-currentRpclocal2`)||r[o||"Sui"].fullRpcUrl,simulationAccount:r[o||"Sui"].simulationAccount,cetus_config:r[o||"Sui"].cetus_config,clmm_pool:r[o||"Sui"].clmm_pool,integrate:r[o||"Sui"].integrate,deepbook:r[o||"Sui"].deepbook,deepbook_endpoint_v2:r[o||"Sui"].deepbook_endpoint_v2,aggregatorUrl:r[o||"Sui"].aggregatorUrl},e=new K(i),s=E(new H(u,e)),m=$(),A=F(()=>m);R(()=>{A.value.address&&(e.senderAddress=A.value.address)});const f=async()=>{console.log(s,"sdk###");const n=await s.Vaults.getVaultList();return n&&n.data||[]},S=async n=>{console.log(n,"###coinType");const a=await s.ClmmSDK.fullClient.getBalance({owner:e.senderAddress,coinType:n});return a&&a.totalBalance},t=n=>({transactionBlock:n,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:f,getLpBalance:S,deposit:async n=>{const{lowerTick:a,upperTick:p,coinAmount:_,fix_amount_a:d,slippage:g,curSqrtPrice:l,rewarder_coin_types:P}=n;console.log(n,"params###");const b=T.estLiquidityAndcoinAmountFromOneAmounts(a,p,_,d,!0,g,l),q=d?_.toString():b.tokenMaxA.toString(),B=d?b.tokenMaxB.toString():_.toString(),k=await s.Vaults.deposit({vault_id:n.id,clmm_pool:n.clmm_pool,lp_token_type:n.lp_token_type,amount_a:q,amount_b:B,fix_amount_a:d,slippage:g,coinTypeA:n.coinTypeA,coinTypeB:n.coinTypeB,rewarder_coin_types:P});return t(k)},remove:async n=>{const{lowerSqrtPrice:a,upperSqrtPrice:p,lpTokenAmount:_,curSqrtPrice:d,slippage:g,rewarder_coin_types:l}=n,P=T.getCoinAmountFromLiquidity(_,d,a,p,!0),b=h(P.coinA.toString()).mul(h(1-g)),q=h(P.coinB.toString()).mul(h(1-g));console.log(n.lpTokenAmount.toString(),b.toString(),q.toString(),"params##");const B=await s.Vaults.remove({vault_id:n.id,clmm_pool:n.clmm_pool,lp_token_type:n.lp_token_type,coinTypeA:n.coinTypeA,coinTypeB:n.coinTypeB,lp_token_amount:_.toString(),min_amount_a:C(b.toString(),0)||"",min_amount_b:C(q.toString(),0)||"",rewarder_coin_types:l});return t(B)}}}const X=V("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return G()}},actions:{async getAutoPoolList(){const u=await v("Sui").getAutoPools();console.log(u,"list###");const i=this.getPoolStore,e=u.map(s=>({...i.poolConfigObj[s.pool_id],id:s.id,lp_token_type:s.lp_token_type,autoPoolPositionInfo:s.positins[0],is_pause:s.is_pause}));this.autoPoolList=e,this.autoPoolObj=Object.fromEntries(e.map((s,m)=>[s.address,s])),console.log(e,"##autoPoolList")},async getMyAutoPoolPosition(){var s,m,A,f;const o=v("Sui"),u=this.autoPoolList,i=j("Sui"),e=[];for(let S=0;S<u.length;S++){const t=u[S],y=await o.getLpBalance(u[S].lp_token_type),w=(await i.getTokenListByCoinType([u[S].lp_token_type]))[0];console.log(w,"lpInfo##");let n=new c(0);Number(y)>0&&(n=new c(y).div(Math.pow(10,w.decimals))),console.log(y,n.toString(),"###balance");const a=t.autoPoolPositionInfo.tick_lower_index,p=t.autoPoolPositionInfo.tick_upper_index,_={tick_lower_index:a,tick_upper_index:p,current_sqrt_price:(s=t==null?void 0:t.object)==null?void 0:s.current_sqrt_price,liquidity:y},d=i.getCoinAmountFromLiquidity({pool:{current_sqrt_price:(m=t==null?void 0:t.object)==null?void 0:m.current_sqrt_price,...t},position:_,roundUp:!1}),g=d.coinaAmount,l=d.coinbAmount;this.positionInfoObj[t.address]={tick_lower_index:a,tick_upper_index:p,current_sqrt_price:(A=t==null?void 0:t.object)==null?void 0:A.current_sqrt_price,myLiquidity:I(y,w.decimals),amountA:g,amountB:l,...t,lpInfo:w},e.push({tick_lower_index:a,tick_upper_index:p,current_sqrt_price:(f=t==null?void 0:t.object)==null?void 0:f.current_sqrt_price,myLiquidity:I(y,w.decimals),amountA:g,amountB:l,...t,lpInfo:w})}this.positionInfoList=e,console.log(this.positionInfoObj,"this.positionInfoObj###")},async getUserPositionUSD(){const{RATES:o}=this.getPoolStore,u=j("Sui");console.log(this.positionInfoList,"###this.positionInfoList"),this.positionInfoList.forEach(i=>{var k,x;const e=((k=o[i.coinA.address])==null?void 0:k.price)||0,s=((x=o[i.coinB.address])==null?void 0:x.price)||0,m=new c(e).mul(new c(i==null?void 0:i.amountA)).toString(),A=new c(s).mul(new c(i==null?void 0:i.amountB)).toString(),f=2,S=2,t=L(m,f),y=L(A,S),w=new c(t).add(new c(y)).toString(),n=i.myLiquidity,a=i.autoPoolPositionInfo.liquidity;console.log(n,a,"####totalLiquidity");const p=new c(n).mul(Math.pow(10,i.lpInfo.decimals)).div(new c(a)).mul(100).toNumber(),_=new c(1).div(Math.pow(10,i.decimals)).toNumber();let d;p>1?d=L(p,2):p>0&&p<_?d=`<${_}`:d=M(p,1);const g={tick_lower_index:i.tick_lower_index,tick_upper_index:i.tick_upper_index,current_sqrt_price:i.object.current_sqrt_price,liquidity:a},l=u.getCoinAmountFromLiquidity({pool:{current_sqrt_price:i.object.current_sqrt_price,...i},position:g,roundUp:!1});console.log(l,"poolAmountInfo##");const P=new c(e).mul(new c(l==null?void 0:l.coinaAmount)).toString(),b=new c(s).mul(new c(l==null?void 0:l.coinbAmount)).toString(),q=L(P,f),B=L(b,S);console.log(l,"###poolAmountInfo"),console.log(p,"###myShare"),console.log(m,A,"##myPosition"),this.positionInfoObj[i.address]={...this.positionInfoObj[i.address],myAmountAUSD:t,myAmountBUSD:y,myLiquidityUSD:w,myShare:d,poolAmoutnA:q,poolAmoutnB:B},console.log(this.positionInfoObj,"###this.positionInfoObj")})},async updatePositionItem(o){var O,D;const u=v("Sui"),i=j("Sui"),e=this.positionInfoObj[o],s=await u.getLpBalance(e.lp_token_type),m=(await i.getTokenListByCoinType([e.lp_token_type]))[0];console.log(s,"###balance updatePositionItem");const A=e.autoPoolPositionInfo.tick_lower_index,f=e.autoPoolPositionInfo.tick_upper_index,S={tick_lower_index:A,tick_upper_index:f,current_sqrt_price:e.object.current_sqrt_price,liquidity:s},t=i.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.object.current_sqrt_price,...e},position:S,roundUp:!1});console.log(t,"amountInfo###");const y=t.coinaAmount,w=t.coinbAmount,{RATES:n}=this.getPoolStore,a=e.autoPoolPositionInfo.liquidity,p=2,_=2,d=((O=n[e.coinA.address])==null?void 0:O.price)||0,g=((D=n[e.coinB.address])==null?void 0:D.price)||0,l=new c(d).mul(new c(t==null?void 0:t.coinaAmount)).toString(),P=new c(g).mul(new c(t==null?void 0:t.coinbAmount)).toString(),b=L(l,p),q=L(P,_);let B=new c(0);Number(s)>0&&(B=new c(s).div(Math.pow(10,m.decimals)));const k=new c(B).mul(Math.pow(10,e.lpInfo.decimals)).div(new c(a)).mul(100).toNumber();let x;const U=new c(1).div(Math.pow(10,e.decimals)).toNumber();k>1?x=L(k,2):k>0&&k<U?x=`<${U}`:x=M(k,1),this.positionInfoObj[e.address]={...e,tick_lower_index:A,tick_upper_index:f,current_sqrt_price:e.object.current_sqrt_price,myLiquidity:I(s,m.decimals),amountA:y,amountB:w,myShare:x,myAmountAUSD:b,myAmountBUSD:q}},async getAutoPoolAPY(){const{data:o}=await fetch(`${r.Sui.api}/v2/sui/auto_pools`).then(u=>u.json());o&&o.pools&&o.pools.length>0&&(this.apyObj=Object.fromEntries(o.pools.map((u,i)=>[u.clmm_pool,u])),console.log(o,"data##"))}}});export{v as a,X as u};
