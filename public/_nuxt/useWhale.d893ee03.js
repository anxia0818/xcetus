import{a6 as A,l as E,R as W,ae as U}from"./entry.6565eb4e.js";import{H as K,I as B,X as c,s as l}from"./pool.0c3685f1.js";import{c as u,a as j}from"./sha256.c0dc62e1.js";import{D as i}from"./decimal.0bdeb344.js";const q=U(),H=q.public.appEnv;function Q(a){const m={launchpad:u[a||"Sui"].launchpad,ido:u[a||"Sui"].ido,xcetus:u[a||"Sui"].xcetus,xcetus_dividends:u[a||"Sui"].xcetus_dividends,cetus_faucet:u[a||"Sui"].cetus_faucet,xtoken:u[a||"Sui"].xtoken,xtoken_dividends:u[a||"Sui"].xtoken_dividends,token_faucet:u[a||"Sui"].token_faucet,booster:u[a||"Sui"].booster,maker_bonus:u[a||"Sui"].maker_bonus},v={fullRpcUrl:localStorage.getItem(`${a}-currentRpclocal2`)||u[a||"Sui"].fullRpcUrl,simulationAccount:u[a||"Sui"].simulationAccount,cetus_config:u[a||"Sui"].cetus_config,clmm_pool:u[a||"Sui"].clmm_pool,integrate:u[a||"Sui"].integrate,deepbook:u[a||"Sui"].deepbook,deepbook_endpoint_v2:u[a||"Sui"].deepbook_endpoint_v2,aggregatorUrl:u[a||"Sui"].aggregatorUrl},C=new K(v),n=A(new B(m,C)),f=j(),g=E(()=>f);W(()=>{g.value.address&&(n.ClmmSDK.senderAddress=g.value.address)});const p=async e=>{const t=await n.XCetusModule.getOwnerLockCetuss(e);return console.log(t,"===>lockWhales"),t},y=async(e,t)=>{const o=c.getAvailableXCetus(e,t);return console.log(o,"==>availableXwhale"),o},M=async e=>{const t=await n.XCetusModule.getOwnerCetusCoins(e);return console.log(t,"===>coins"),t},S=async e=>await n.XCetusModule.getOwnerVeNFT(e),X=async(e,t)=>{const o={amount:e};t&&(o.venft_id=t);const s=await n.XCetusModule.convertPayload(o);return r(s)},k=async()=>{const e=await n.XCetusModule.mintVeNFTPayload();return r(e)},D=async(e,t)=>{const o=await n.XCetusModule.redeemNum(e,t);return console.log(o,"result===>"),{amountOut:o.amountOut,percent:l(new i(o.percent).mul(new i(100)).toString(),2)}},_=async(e,t)=>{const o=await n.XCetusModule.reverseRedeemNum(e,t);return{amountOut:o.amountOut,percent:l(new i(o.percent).mul(new i(100)).toString(),2)}},x=async(e,t,o)=>{const s=await n.XCetusModule.redeemLockPayload({venft_id:t,amount:e,lock_day:o});return console.log(s,"tx===>"),r(s)},b=e=>c.getLockingCetuss(e),T=async(e,t)=>{const o=await n.XCetusModule.getLockCetus(e);if(o&&c.isLocked(o)){const s=n.XCetusModule.cancelRedeemPayload({venft_id:t,lock_id:e});return r(s)}},P=async(e,t)=>{const o=await n.XCetusModule.getLockCetus(e);if(o&&!c.isLocked(o)){const s=await n.XCetusModule.redeemPayload({venft_id:t,lock_id:e});return r(s)}},I=async()=>{const e=await n.XCetusModule.getDividendManager();console.log("dividendManager:",e);const t=Number(c.getNextStartTime(e).toString());return console.log(t,"===>nextStartTime"),{nextStartTime:t,...e}},h=async(e,t)=>{const o=await n.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);return{rewards:o&&o.rewards||[]}},R=async e=>{const t=await n.XCetusModule.getDividendManager();if(console.log("dividendManager: ",t),t.bonus_types.length>0){const o=await n.XCetusModule.redeemDividendPayload(e,t.bonus_types);return r(o)}},O=e=>{const t=new Set;return e.forEach(o=>{o.rewards.forEach(s=>{s.amount>0&&t.add(s.coin_type)})}),Array.from(t)},F=async e=>{const t=await n.XCetusModule.getDividendManager(),o=await n.XCetusModule.getVeNFTDividendInfo(t.venft_dividends.id,e);console.log("veNFTDividendInfo: ",o);const s=O(o.rewards);console.log(s,"===>bonus_types");const d=await n.XCetusModule.redeemDividendV2Payload(e,s,[n.XCetusModule.buileXTokenCoinType()]);return r(d)},L=async e=>{console.log(e,"==>accountAddress");try{const t=await n.XCetusModule.getOwnerVeNFT(e);if(console.log("nfts: ",t),t){const o=await n.XCetusModule.getXcetusManager();console.log("xcetusManager: ",o);const s=new i(t.xcetus_balance).div(o.treasury).mul(100).toString();return console.log("rate: ",s),Number(s)>0&&Number(s)<.001?"<0.001":l(s,3)}else return 0}catch{return"--"}},V=async()=>{const e=await n.XCetusModule.getXcetusManager();return console.log("xcetusManager: ",e),e},r=e=>({transactionBlock:e,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}}),w=e=>{const t=Date.now()/1e3,{start_time:o,interval_day:s}=e;console.log(e,"#dividendManager");const d=H=="test"?Math.ceil((t-o)/(s*60)):Math.ceil((t-o)/(s*24*3600));return console.log(t,"===>currentTime"),console.log(o,"===>start_time"),console.log(t-o,"===>currentTime-start_time"),console.log((t-o)/(s*60),"(currentTime - start_time) / (interval_day * 60)"),d};return{getOwnerLockCetuss:p,getOwnerCetusCoins:M,getOwnerVeNFT:S,depositCetus:X,getMintVeNFTPayload:k,redeemNum:D,getRedeemLockPayload:x,getAvailableXCetus:y,getLockingCetuss:b,getCancelRedeemPayload:T,getVeNFTDividendInfo:h,reverseRedeemNum:_,getRedeemPayload:P,getRedeemDividendPayload:R,getMyShare:L,getDividendManager:I,getPeriod:w,getRedeemDividendV2Payload:F,getPhaseDividendInfo:async e=>{const t=w(e);console.log(t,"getPhaseDividendInfo period");const o=await n.XCetusModule.getPhaseDividendInfo(String(t));return console.log(o,"==>phaseDividendInfo"),o},getXcetusManager:V}}export{Q as u};
