import{a6 as so,l as co,T as uo,a7 as ro}from"./entry.0305e135.js";import{c as _,a as ao}from"./sha256.86ba14fb.js";import{I as po,e as M,C as Q,J as E,f as eo,u as _o,b as io,a as H,s as I,T as no,K as lo,p as Z}from"./pool.36d56712.js";import{C as mo,V as J}from"./index.b1407aae.js";import{D as t}from"./decimal.0e8aa3f1.js";function oo(e){const r={launchpad:_[e||"Sui"].launchpad,ido:_[e||"Sui"].ido,xcetus:_[e||"Sui"].xcetus,xcetus_dividends:_[e||"Sui"].xcetus_dividends,cetus_faucet:_[e||"Sui"].cetus_faucet,xtoken:_[e||"Sui"].xtoken,xtoken_dividends:_[e||"Sui"].xtoken_dividends,token_faucet:_[e||"Sui"].token_faucet,booster:_[e||"Sui"].booster,maker_bonus:_[e||"Sui"].maker_bonus,liquidity_stratefy:_[e||"Sui"].liquidity_stratefy,vaults:_[e||"Sui"].vaults},S={fullRpcUrl:localStorage.getItem(`${e}-currentRpclocal2`)||_[e||"Sui"].fullRpcUrl,simulationAccount:_[e||"Sui"].simulationAccount,cetus_config:_[e||"Sui"].cetus_config,clmm_pool:_[e||"Sui"].clmm_pool,integrate:_[e||"Sui"].integrate,deepbook:_[e||"Sui"].deepbook,deepbook_endpoint_v2:_[e||"Sui"].deepbook_endpoint_v2,aggregatorUrl:_[e||"Sui"].aggregatorUrl},s=new po(S),i=so(new mo(r,s)),m=ao(),j=co(()=>m);uo(()=>{j.value.address&&(s.senderAddress=j.value.address)});const K=async()=>{console.log(i,"sdk###");const o=await i.Vaults.getVaultList();return o&&o.data||[]},C=async o=>await i.Vaults.getVault(o),n=async o=>{if(console.log(o,"###coinType"),s.senderAddress){const c=await i.ClmmSDK.fullClient.getBalance({owner:s.senderAddress,coinType:o});return c&&c.totalBalance}else return 0},d=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:K,getLpBalance:n,deposit:async o=>{const{lowerTick:c,upperTick:f,slippage:y,rewarder_coin_types:v,isOnlyA:b,isOnlyB:P,currentTickIndex:A}=o;console.log(o,"params###");let a=o.fix_amount_a,u,B,U;if(b||P){const x=await i.Vaults.calculateDepositSwapAmount({lowerTick:c,upperTick:f,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool});console.log(x,"swapResut##211"),x?(u=new M(x.swapOutAmount),B=new M(o.curSqrtPrice),U={swap_amount:x.swapInAmount,a2b:a},a=!a):(B=new M(o.curSqrtPrice),u=new M(o.coinAmount))}else B=o.curSqrtPrice,u=new M(o.coinAmount);let D,h,k;console.log(c,A,f,"####138"),A>=c&&A<=f?(D=Q.estLiquidityAndcoinAmountFromOneAmounts(c,f,u,a,!0,y,B),h=a?u.toString():D.tokenMaxA.toString(),k=a?D.tokenMaxB.toString():u.toString()):A<c?(h=u.toNumber(),k=0):A>f&&(h=0,k=u.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:h,amount_b:k,fix_amount_a:a,slippage:y,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:U},"params171");const R=await i.Vaults.deposit({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:h,amount_b:k,fix_amount_a:a,slippage:y,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:U});return d(R)},remove:async o=>{const{lowerTick:c,upperTick:f,coinTypeA:y,coinTypeB:v,receiveAmount:b,clmm_pool:P,lowerSqrtPrice:A,upperSqrtPrice:a,fix_amount_a:u,curSqrtPrice:B,slippage:U,rewarder_coin_types:D,id:h,liquidity:k,swapParams:R,isOnlyA:x,isOnlyB:L,sliderVal:w}=o;console.log(w,"sliderVal##");const g=await C(h),T=await s.Pool.getPool(g.pool_id);let p,q,N,$,Y,z,O;console.log(b,"##receiveAmount"),x||L?(p=await i.Vaults.calculateRemoveSwapAmount({lowerTick:c,upperTick:f,curSqrtPrice:T.current_sqrt_price,fix_amount_a:u,receive_amount:b,coinTypeA:y,coinTypeB:v,clmm_pool:P}),console.log(p,"swapResut###"),p&&(q=Q.getCoinAmountFromLiquidity(new M(p.liquidity),new M(T.current_sqrt_price),A,a,!1),N=J.get_protocol_fee_amount(g,q.coinA.toString()),$=J.get_protocol_fee_amount(g,q.coinB.toString()),Y=J.get_lp_amount_by_liquidity(g,p.liquidity),z=E(q.coinA.toString()).mul(E(1-o.slippage)),O=E(q.coinB.toString()).mul(E(1-o.slippage)))):(q=Q.getCoinAmountFromLiquidity(new M(k),B,A,a,!1),N=J.get_protocol_fee_amount(g,q.coinA.toString()),$=J.get_protocol_fee_amount(g,q.coinB.toString()),Y=o.lpTokenAmount,z=E(q.coinA.toString()).mul(E(1-o.slippage)),O=E(q.coinB.toString()).mul(E(1-o.slippage)),console.log(N,$,"##protocol_fee_amount_b"));const G={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:Y.toString(),min_amount_a:eo(z,0)||"",min_amount_b:eo(O,0)||"",rewarder_coin_types:[]};console.log(G,"##removeParams"),(x||L)&&(G.swapParams={a2b:!u,swap_amount:p==null?void 0:p.swapInAmount});const V=await i.Vaults.remove(G);return d(V)},getAutoPool:C,calculateDepositSwapAmount:async o=>{const{lowerTick:c,upperTick:f,curSqrtPrice:y,fix_amount_a:v,input_amount:b,coinTypeA:P,coinTypeB:A,clmm_pool:a}=o;return console.log(o,"params###"),await i.Vaults.calculateDepositSwapAmount({lowerTick:c,upperTick:f,curSqrtPrice:y,fix_amount_a:v,input_amount:b,coinTypeA:P,coinTypeB:A,clmm_pool:a})},calculateRemoveSwapAmount:async o=>{const{lowerTick:c,upperTick:f,curSqrtPrice:y,fix_amount_a:v,receiveAmount:b,coinTypeA:P,coinTypeB:A,clmm_pool:a}=o;console.log(o,"params###");const u=await i.Vaults.calculateRemoveSwapAmount({lowerTick:c,upperTick:f,curSqrtPrice:y,fix_amount_a:v,receive_amount:b,coinTypeA:P,coinTypeB:A,clmm_pool:a});return console.log(u,"###swapResut"),u}}}const fo=ro("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return _o()}},actions:{async getAutoPoolList(){const r=await oo("Sui").getAutoPools();console.log(r,"list###");const S=this.getPoolStore,s=r.map(i=>({...S.poolConfigObj[i.pool_id],id:i.id,lp_token_type:i.lp_token_type,autoPoolPositionInfo:i.positins[0],is_pause:i.is_pause,total_supply:i.total_supply,liquidity:i.liquidity,protocol_fee_rate:i.protocol_fee_rate}));this.autoPoolList=s,this.autoPoolObj=Object.fromEntries(s.map((i,m)=>[i.address,i])),this.getMyAutoPoolPosition(),console.log(s,"##autoPoolList")},async getMyAutoPoolPosition(){var m,j,K;const e=oo("Sui"),r=this.autoPoolList,S=io("Sui"),s=[],{RATES:i}=this.getPoolStore;for(let C=0;C<r.length;C++){const n=r[C];console.log(n,"poolINfo###");const d=await S.getPool(n.address),l=await e.getLpBalance(r[C].lp_token_type);console.log(l,"balance##");const F=(await S.getTokenListByCoinType([r[C].lp_token_type]))[0];console.log(F,"lpInfo##");const W=((m=i[n.coinA.address])==null?void 0:m.price)||"",X=((j=i[n.coinB.address])==null?void 0:j.price)||"",o=n.autoPoolPositionInfo.tick_lower_index,c=n.autoPoolPositionInfo.tick_upper_index,f={tick_lower_index:o,tick_upper_index:c,current_sqrt_price:d==null?void 0:d.current_sqrt_price,liquidity:Number(l)>0?J.get_share_liquidity_by_amount({liquidity:n==null?void 0:n.liquidity,total_supply:n==null?void 0:n.total_supply},l):0},y=await S.getCoinAmountFromLiquidity({pool:{...n,current_sqrt_price:d==null?void 0:d.current_sqrt_price},position:f,roundUp:!1});console.log(y,"##amountInfo");const v=y.coinaAmount,b=y.coinbAmount;console.log(n.protocol_fee_rate,"##newPoolInfo.protocol_fee_rate");const P=v,A=b,a=n.coinA.decimals,u=n.coinB.decimals,B=S.TickMath.tickIndexToPrice(Number(o),a,u).toString(),U=S.TickMath.tickIndexToPrice(Number(c),a,u).toString(),D=new t(W).mul(new t(v)).toNumber(),h=new t(X).mul(new t(b)).toNumber(),k=D>0&&D<.01?"<$0.01":`$${H(I(D,2))}`,R=h>0&&h<.01?"<$0.01":`$${H(I(h,2))}`,x=no.sqrtPriceX64ToPrice(d.current_sqrt_price,a,u);let L,w;console.log(n.total_supply,"##poolInfo.total_supply");const g=await S.getCoinAmountFromLiquidity({pool:{...n,tick_lower_index:o,tick_upper_index:c,current_sqrt_price:d==null?void 0:d.current_sqrt_price},position:{...f,liquidity:n.liquidity},roundUp:!1}),T=new t(g.coinaAmount).toNumber(),p=new t(g.coinbAmount).toNumber();console.log(T,p,x.toString(),"###116");const q=I(new t(T).mul(new t(W)).toNumber(),2),N=I(new t(p).mul(new t(X)).toNumber(),2);if(console.log(d,"newPool##"),console.log(T,p,"###131"),T>0&&p>0){const to=new t(T).mul(x).add(new t(p));L=new t(T).mul(x).div(to).mul(100).toNumber().toFixed(2),w=new t(p).div(to).mul(100).toNumber().toFixed(2)}else T>0?(L=100,w=0):p>0?(L=0,w=100):(L=50,w=50);console.log(T,p,L,w,"###147");let $=0;Number(l)>0&&($=new t(l).div(Math.pow(10,F.decimals)));const Y=W&&X?I(new t(D).add(new t(h)).toString(),2):"",z=n.total_supply;let O=0;$>0&&z>0&&(O=new t($).mul(Math.pow(10,F.decimals)).div(new t(z)).mul(100).toNumber()),console.log(O,"##myShare");const G=new t(1).div(Math.pow(10,n.decimals)).toNumber();let V=0;O>1?V=I(O,2):O>0&&O<G?V=`<${G}`:O==0?V=0:V=lo(O,1),console.log(l,$.toString(),"###balance"),this.positionInfoObj[n.id]={tick_lower_index:o,tick_upper_index:c,current_sqrt_price:d.current_sqrt_price,myLiquidity:Z(l,F.decimals),amountA:P,amountB:A,...n,lpInfo:F,myAmountAUSD:k,myAmountBUSD:R,myLiquidityUSD:Y,myShare:V,minPrice:B,maxPrice:U,poolCoinARatio:L,poolCoinBRatio:w,poolCoinANum:T,poolCoinBNum:p,poolCoinAUSD:q,poolCoinBUSD:N},s.push({tick_lower_index:o,tick_upper_index:c,current_sqrt_price:(K=n==null?void 0:n.object)==null?void 0:K.current_sqrt_price,myLiquidity:Z(l,F.decimals),amountA:P,amountB:A,...n,lpInfo:F,myAmountAUSD:k,myAmountBUSD:R,myLiquidityUSD:Y,myShare:V,minPrice:B,maxPrice:U,poolCoinARatio:L,poolCoinBRatio:w,poolCoinANum:T,poolCoinBNum:p,poolCoinAUSD:q,poolCoinBUSD:N})}this.positionInfoList=s,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(e){var q,N;const r=oo("Sui"),S=io("Sui"),s=await r.getAutoPool(e),i=await S.getPool(s.pool_id);console.log("newPoolInfo:",s),console.log("this.positionInfoObj[id]:",this.positionInfoObj[e]);const m={...this.positionInfoObj[e],autoPoolPositionInfo:s.positins[0]},j=await r.getLpBalance(m.lp_token_type),K=(await S.getTokenListByCoinType([m.lp_token_type]))[0];console.log(j,"###balance updatePositionItem");const C=m.autoPoolPositionInfo.tick_lower_index,n=m.autoPoolPositionInfo.tick_upper_index,d={tick_lower_index:C,tick_upper_index:n,current_sqrt_price:i.current_sqrt_price,liquidity:J.get_share_liquidity_by_amount({liquidity:s==null?void 0:s.liquidity,total_supply:s==null?void 0:s.total_supply},j)},l=S.getCoinAmountFromLiquidity({pool:{current_sqrt_price:i.current_sqrt_price,...m},position:d,roundUp:!1});console.log(l,"amountInfo###"),l.coinaAmount,l.coinbAmount;const F=l.coinaAmount,W=l.coinbAmount,{RATES:X}=this.getPoolStore,o=s.total_supply,c=2,f=2,y=((q=X[m.coinA.address])==null?void 0:q.price)||0,v=((N=X[m.coinB.address])==null?void 0:N.price)||0,b=new t(y).mul(new t(l==null?void 0:l.coinaAmount)).toNumber(),P=new t(v).mul(new t(l==null?void 0:l.coinbAmount)).toNumber(),A=b>0&&b<.01?"<$0.01":`$${H(I(b,2))}`,a=P>0&&P<.01?"<$0.01":`$${H(I(P,2))}`;let u=new t(0);Number(j)>0&&(u=new t(j).div(Math.pow(10,K.decimals)));const B=new t(u).mul(Math.pow(10,m.lpInfo.decimals)).div(new t(o)).mul(100).toNumber();let U=0;const D=new t(1).div(Math.pow(10,m.decimals)).toNumber(),h=y&&v?I(new t(b).add(new t(P)).toString(),2):"";console.log(y,v,l==null?void 0:l.coinaAmount,l==null?void 0:l.coinbAmount,"myLiquidityUSD###"),B>1?U=I(B,2):B>0&&B<D?U=`<${D}`:U=lo(B,1);let k,R;const x=no.sqrtPriceX64ToPrice(i.current_sqrt_price,c,f),L=await S.getCoinAmountFromLiquidity({pool:{...m,tick_lower_index:C,tick_upper_index:n,current_sqrt_price:i==null?void 0:i.current_sqrt_price},position:{...d,liquidity:s.liquidity},roundUp:!1}),w=new t(L.coinaAmount).toNumber(),g=new t(L.coinbAmount).toNumber();console.log(w,g,x.toString(),"###116");const T=I(new t(w).mul(new t(y)).toNumber(),2),p=I(new t(g).mul(new t(v)).toNumber(),2);if(console.log(i,"newPool##"),console.log(w,g,"###poolCoinBNum"),w>0&&g>0){const $=new t(w).mul(x).add(new t(g));k=new t(w).mul(x).div($).mul(100).toNumber().toFixed(2),R=new t(g).div($).mul(100).toNumber().toFixed(2)}else w>0?(k=100,R=0):g>0?(k=0,R=100):(k=50,R=50);this.positionInfoObj[e]={...m,tick_lower_index:C,tick_upper_index:n,current_sqrt_price:i.current_sqrt_price,myLiquidity:Z(j,K.decimals),amountA:F,amountB:W,myShare:U,myAmountAUSD:A,myAmountBUSD:a,myLiquidityUSD:h,poolCoinARatio:k,poolCoinBRatio:R,poolCoinANum:w,poolCoinBNum:g,poolCoinAUSD:T,poolCoinBUSD:p},console.log(this.positionInfoObj[e],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:e}=await fetch(`${_.Sui.api}/v2/sui/auto_pools`).then(r=>r.json());e&&e.pools&&e.pools.length>0&&(this.apyObj=Object.fromEntries(e.pools.map((r,S)=>[r.object_id,{...r,apr:r.apr.replace("%","")>0&&r.apr.replace("%","")<.01?"<0.01%":I(r.apr.replace("%",""),2)+"%",resultApr:r.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}}}});export{oo as a,fo as u};
