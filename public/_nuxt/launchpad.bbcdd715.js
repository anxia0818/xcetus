import{C,L as w}from"./index.88f606ca.js";import{v as S,u as O,ae as K}from"./pool.9ac0c0ec.js";import{c as u,a as M,u as B}from"./sha256.19f1dc50.js";import{a0 as W,m as f,O as E,a1 as N}from"./entry.99410600.js";function p(e){const l={launchpad:u[e||"Sui"].launchpad,xcetus:u[e||"Sui"].xcetus,booster:u[e||"Sui"].booster,maker_bonus:u[e||"Sui"].maker_bonus},s={fullRpcUrl:localStorage.getItem(`${e}-currentRpclocal`)||u[e||"Sui"].fullRpcUrl,faucetURL:localStorage.getItem(`${e}-currentRpclocal`)||u[e||"Sui"].faucetURL,faucet:u[e||"Sui"].faucet,simulationAccount:u[e||"Sui"].simulationAccount,cetus_config:u[e||"Sui"].cetus_config,clmm:u[e||"Sui"].clmm},n=new S(s),a=W(new C(l,n)),P=M(),g=f(()=>P);E(()=>{g.value.address&&(a.ClmmSDK.senderAddress=g.value.address)});const A=()=>{const t=new S(s);return new C(l,t)},_=t=>({transactionBlock:t,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}}),k=B();f(()=>k);const I=O();f(()=>I);const T=async t=>{t.setSenderIfNotSet(g.value.address);const o=await t.build({provider:a.ClmmSDK.fullClient});return await a.ClmmSDK.fullClient.dryRunTransactionBlock({transactionBlock:o})},b=async()=>await a.Launchpad.getPools([]),x=async t=>await a.Launchpad.getPool(t),D=async(t,o)=>{const c=o||await a.Launchpad.getPools(),i=[],d=await a.Launchpad.getPurchaseMarks(t);return console.log("purchaseMarks ",d),c.forEach(h=>{for(const m of d)if(m.pool_id===h.pool_address){i.push(h);break}}),i},U=async(t,o)=>{const c=o||await a.Launchpad.getPools(),i=[];return c.forEach(d=>{d.recipient===t&&i.push(d)}),i},v=async t=>{const o=A();o.ClmmSDK.senderAddress=g.value.address;const c=await o.Launchpad.creatPurchasePayload({pool_address:t.pool.pool_address,purchase_amount:t.amount,coin_type_sale:t.pool.coin_type_sale,coin_type_raise:t.pool.coin_type_raise});return _(c)},R=async t=>{const o=await a.Launchpad.creatClaimPayload({pool_address:t.pool.pool_address,coin_type_sale:t.pool.coin_type_sale,coin_type_raise:t.pool.coin_type_raise});return _(o)},L=async t=>{if(console.log("pool: ",t),t.pool_status!=="Settle")throw new Error("The pool is not in settle ");let o=null,c=!1;const i=await a.ClmmSDK.Pool.getPoolImmutables();for(const r of i){if(r.coinTypeA===t.coin_type_sale&&r.coinTypeB===t.coin_type_raise&&Number(r.tickSpacing)===t.tick_spacing){o=await a.ClmmSDK.Pool.getPool(r.poolAddress),console.log("clmmPool: ",o);break}if(r.coinTypeA===t.coin_type_raise&&r.coinTypeB===t.coin_type_sale&&Number(r.tickSpacing)===t.tick_spacing){o=await a.ClmmSDK.Pool.getPool(r.poolAddress),c=!0,console.log("clmmPool: ",o);break}}const d=await a.ClmmSDK.CetusConfig.getTokenListByCoinTypes([t.coin_type_raise,t.coin_type_sale]),h=d[t.coin_type_sale].decimals,m=d[t.coin_type_raise].decimals;let y;if(t.liquidity_rate>0&&o===null)throw new Error("not found clmmPool ");if(o&&t.liquidity_rate>0){console.log(JSON.stringify({pool_address:t.pool_address,coin_type_sale:t.coin_type_sale,coin_type_raise:t.coin_type_raise,clmm_args:{current_price:t.current_price,clmm_pool_address:o.poolAddress,clmm_sqrt_price:o.current_sqrt_price.toString(),opposite:c,sale_decimals:h,raise_decimals:m}}),"txtxtxtxtxt2222");try{y=await a.Launchpad.creatSettlePayload({pool_address:t.pool_address,coin_type_sale:t.coin_type_sale,coin_type_raise:t.coin_type_raise,clmm_args:{current_price:t.current_price,clmm_pool_address:o.poolAddress,clmm_sqrt_price:o.current_sqrt_price.toString(),opposite:c,sale_decimals:h,raise_decimals:m}})}catch(r){console.log(r,"e===>")}}else y=await a.Launchpad.creatSettlePayload({pool_address:t.pool_address,coin_type_sale:t.coin_type_sale,coin_type_raise:t.coin_type_raise});return console.log(y,"txtxtx25211"),y};return{getPoolConfigs:async()=>{const t=await a.ClmmSDK.CetusConfig.getLaunchpadPoolConfigs();return console.log(t,"==>poolConfigs"),t},getLockNFTList:async t=>{if(t.pool_status=="Ended"){const o=await a.Launchpad.getLockNFTList(t.pool_type,t.recipient);return console.log("getLockNFTList: ",o),o}},beforeSettle:L,simulate:T,TickUtil:K,getCmmPoolAddress:async t=>{let o=null;const c=await a.ClmmSDK.Pool.getPoolImmutables();console.log(c,"===>clmmImmutables");for(const i of c){if(i.coinTypeA===t.coin_type_sale&&i.coinTypeB===t.coin_type_raise&&Number(i.tickSpacing)==Number(t.tick_spacing)){o=await a.ClmmSDK.Pool.getPool(i.poolAddress),console.log("clmmPool: ",o);break}if(i.coinTypeA===t.coin_type_raise&&i.coinTypeB===t.coin_type_sale&&Number(i.tickSpacing)==Number(t.tick_spacing)){o=await a.ClmmSDK.Pool.getPool(i.poolAddress),console.log("clmmPool: ",o);break}}return o||null},getLaunchpadAllPools:b,getLaunchpadPoolInfo:x,getJoinPools:D,getOwnerPools:U,getCreatPurchasePayload:v,getCreatClaimPayload:R,getCreatSettlePayload:async t=>{const o=await L(t);return console.log(o,"txtxtxtxtxtxtx111"),_(o)},getCreatWithdrawParams:async t=>{const o=a.Launchpad.creatWithdrawPayload({pool_address:t.pool.pool_address,coin_type_sale:t.pool.coin_type_sale,coin_type_raise:t.pool.coin_type_raise,sale_amount:t.sale_amount,raise_amount:t.raise_amount});return _(o)},getIsWhiteListUser:async(t,o)=>{var i;return await a.Launchpad.isWhiteListUser((i=t.white_summary)==null?void 0:i.white_handle,o)},getCreatUnlockNftPayload:async(t,o)=>{if(t.pool_status=="Ended"){if(o){const c=a.Launchpad.creatUnlockNftPayload({lock_nft:o.lock_nft_id,nft_type:o.nft_type});return _(c)}}else throw new Error("The pool is not in Ended  ")},getIsAdminCap:async t=>await a.Launchpad.isAdminCap(t),getPurchaseMark:async(t,o)=>{console.log("purchaseMark,address",t,[o]);const c=await a.Launchpad.getPurchaseMarks(t,[o]);return console.log("purchaseMark",c),c},getPurchaseAmountVal:async(t,o)=>await a.Launchpad.getPurchaseAmount(o.white_summary.white_handle,t),getUnusedRaiseAmount:async t=>await w.getHistoryWithdrawRaise(a,t),getUnusedSaleAmount:async t=>await w.getHistoryWithdrawSale(a,t),getCoinInfo:async(t,o)=>{const c=await a.ClmmSDK.CetusConfig.getTokenListByCoinTypes([t,o]);return console.log(c,"==>tokenMap"),c}}}const st=N("launchpad",{state:()=>({currentLaunchpadPoolInfo:{},launchpadAllPools:[],launchpadOwnerAllPools:[],launchpadJoinPools:[],haveLaunchpad:!1,launchpadPoolsLoading:!0,getOwnDateLoading:!0,ownIsWhiteList:!1,committedCoinAssetCount:"0",currentPoolNumData:{},idoPoolConfigInfo:{},purchaseMark:{},settlePayTokenAInfo:{},settlePayTokenBInfo:{},getPurchaseAmountLoading:!0,currentTab:"latest"}),actions:{async setSettlePayTokenAInfo(e){this.settlePayTokenAInfo=e},async setSettlePayTokenBInfo(e){this.settlePayTokenBInfo=e},async setGetPurchaseAmountLoading(e){this.getPurchaseAmountLoading=e},async setPurchaseMark(e){this.purchaseMark=e},async setGetOwnDateLoading(e){this.getOwnDateLoading=e},async setCurrentLaunchpadPoolInfo(e){this.currentLaunchpadPoolInfo=e},async setCurrentTab(e){this.currentTab=e},async setCurrentPoolNumData(e){this.currentPoolNumData=e},async setOwnIsWhiteList(e){this.ownIsWhiteList=e},async setMyCountCommittedCoinAsset(e){this.committedCoinAssetCount=e},async setLaunchpadPoolsLoading(e){this.launchpadPoolsLoading=e},async setLaunchpadAllPools(){this.launchpadAllPools=[],this.setLaunchpadPoolsLoading(!0);const l=await p("Sui").getLaunchpadAllPools()||[];this.launchpadAllPools=l.sort((s,n)=>n.activity_end_time-s.activity_end_time),this.setLaunchpadPoolsLoading(!1),console.log("launchpadAllPoolsListlaunchpadAllPoolsList",l)},async setLaunchpadAllPoolsNoLoading(){const l=await p("Sui").getLaunchpadAllPools()||[];this.launchpadAllPools=l.sort((s,n)=>n.activity_end_time-s.activity_end_time),console.log("launchpadAllPoolsListlaunchpadAllPoolsList11",l)},async getCurrentLaunchpadPoolInfo(e){this.setGetPurchaseAmountLoading(!0);const l=p("Sui"),s=await l.getLaunchpadPoolInfo(e)||{},n=await l.getCoinInfo(s.coin_type_raise,s.coin_type_sale);this.currentLaunchpadPoolInfo={raiseCoinInfo:{logoURI:n[s.coin_type_raise].logo_url,...n[s.coin_type_raise]},saleCoinInfo:{logoURI:n[s.coin_type_sale].logo_url,...n[s.coin_type_sale]},...s},this.setGetOwnDateLoading(!1),console.log("currentLaunchpadPoolInfo",this.currentLaunchpadPoolInfo)},async getCurrentLaunchpadPoolInfoNoLoading(e){const l=p("Sui"),s=await l.getLaunchpadPoolInfo(e)||{},n=await l.getCoinInfo(s.coin_type_raise,s.coin_type_sale);this.currentLaunchpadPoolInfo={raiseCoinInfo:{logoURI:n[s.coin_type_raise].logo_url,...n[s.coin_type_raise]},saleCoinInfo:{logoURI:n[s.coin_type_sale].logo_url,...n[s.coin_type_sale]},...s},console.log("currentLaunchpadPoolInfo11",this.currentLaunchpadPoolInfo)},async setLaunchpadJoinPools(e){this.setLaunchpadPoolsLoading(!0);const s=await p("Sui").getJoinPools(e)||[];s.length<1?this.setLaunchpadPoolsLoading(!1):(this.launchpadJoinPools=s.sort((n,a)=>a.activity_end_time-n.activity_end_time),this.setLaunchpadPoolsLoading(!1),console.log("launchpadJoinPoolsListresultresultresult111",s))},async setLaunchpadOwnerAllPools(e,l){const n=await p("Sui").getOwnerPools(e,l)||[];n.length<1?this.haveLaunchpad=!1:(this.launchpadOwnerAllPools=n.sort((a,P)=>P.activity_end_time-a.activity_end_time),this.haveLaunchpad=!0),console.log("resultresultresult111",n)},async getIdoPoolConfigInfo(){const l=await p("Sui").getPoolConfigs(),s={};l.map((n,a)=>{s[n.pool_address]=n}),console.log(l,s,"resres"),this.idoPoolConfigInfo=s||{}}}});export{p as a,st as u};
