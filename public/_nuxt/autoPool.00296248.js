import{a8 as wo,C as So,V as qo,a9 as fo}from"./entry.3104b8e4.js";import{c as g,a as bo}from"./sha256.86091e5e.js";import{I as ko,b as U,J as K,T as uo,C as no,f as _o,s as y,u as Po,e as mo,a as io,j as go,p as lo}from"./pool.c8444d30.js";import{C as Bo,V as z}from"./index.c71b1ae4.js";import{D as t}from"./decimal.0bdeb344.js";function so(n){const a={launchpad:g[n||"Sui"].launchpad,ido:g[n||"Sui"].ido,xcetus:g[n||"Sui"].xcetus,xcetus_dividends:g[n||"Sui"].xcetus_dividends,cetus_faucet:g[n||"Sui"].cetus_faucet,xtoken:g[n||"Sui"].xtoken,xtoken_dividends:g[n||"Sui"].xtoken_dividends,token_faucet:g[n||"Sui"].token_faucet,booster:g[n||"Sui"].booster,maker_bonus:g[n||"Sui"].maker_bonus,liquidity_stratefy:g[n||"Sui"].liquidity_stratefy,vaults:g[n||"Sui"].vaults},m={fullRpcUrl:localStorage.getItem(`${n}-currentRpclocal2`)||g[n||"Sui"].fullRpcUrl,simulationAccount:g[n||"Sui"].simulationAccount,cetus_config:g[n||"Sui"].cetus_config,clmm_pool:g[n||"Sui"].clmm_pool,integrate:g[n||"Sui"].integrate,deepbook:g[n||"Sui"].deepbook,deepbook_endpoint_v2:g[n||"Sui"].deepbook_endpoint_v2,aggregatorUrl:g[n||"Sui"].aggregatorUrl},c=new ko(m),e=wo(new Bo(a,c)),_=bo(),D=So(()=>_);qo(()=>{D.value.address&&(c.senderAddress=D.value.address)});const Z=async()=>{console.log(e,"sdk###");const o=await e.Vaults.getVaultList();return o&&o.data||[]},I=async o=>await e.Vaults.getVault(o),i=async o=>{if(console.log(o,"###coinType"),c.senderAddress){const l=await e.ClmmSDK.fullClient.getBalance({owner:c.senderAddress,coinType:o});return l&&l.totalBalance}else return 0},u=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:Z,getLpBalance:i,getVault:async o=>{const l=await e.Vaults.getVault(o);return console.log(l,"vault##292"),l},deposit:async o=>{const{lowerTick:l,upperTick:w,slippage:S,rewarder_coin_types:h,isOnlyA:P,isOnlyB:v,currentTickIndex:B,decimal_b:L}=o;console.log(o,"params###");let d=o.fix_amount_a,A,s,q,x=B;if(P||v){const r=await e.Vaults.calculateDepositSwapAmount({lowerTick:l,upperTick:w,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,use_route:!0});console.log(r,"swapResut##211"),r?(s=new U(r.afterSqrtPrice),A=r.fixAmountA===d?new U(K(o.coinAmount).sub(r.swapInAmount).toString()):new U(r.swapOutAmount),q={swap_amount:r.swapInAmount,a2b:d,input_amount:o.coinAmount,route_obj:r.routeObj},d=r.fixAmountA,x=uo.sqrtPriceX64ToTickIndex(new U(r.afterSqrtPrice))):(s=new U(o.curSqrtPrice),A=new U(o.coinAmount))}else s=o.curSqrtPrice,A=new U(o.coinAmount);let E,O,f;console.log(l,B,w,"####138"),x>=l&&x<=w?(E=no.estLiquidityAndcoinAmountFromOneAmounts(l,w,A,d,!0,S,s),O=d?A.toString():E.tokenMaxA.toString(),f=d?E.tokenMaxB.toString():A.toString()):x<l?(O=A.toNumber(),f=0):x>w&&(O=0,f=A.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:O,amount_b:f,fix_amount_a:d,slippage:S,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:q},"params171");const T=await e.Vaults.deposit({lowerTick:l,upperTick:w,vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:O,amount_b:f,fix_amount_a:d,slippage:S,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,swapParams:q});return u(T)},remove:async o=>{const{lowerTick:l,upperTick:w,coinTypeA:S,coinTypeB:h,receiveAmount:P,clmm_pool:v,lowerSqrtPrice:B,upperSqrtPrice:L,fix_amount_a:d,curSqrtPrice:A,slippage:s,rewarder_coin_types:q,id:x,liquidity:E,swapParams:O,isOnlyA:f,isOnlyB:T,sliderVal:r,positionInfo:J}=o;console.log(r,"sliderVal##");const R=await I(x),H=await c.Pool.getPool(R.pool_id);let C,b,W,V,Q,$,k;if(console.log(P,"##receiveAmount"),f||T){if(C=await e.Vaults.calculateRemoveSwapAmount({lowerTick:l,upperTick:w,curSqrtPrice:H.current_sqrt_price,fix_amount_a:d,receive_amount:P,coinTypeA:S,coinTypeB:h,clmm_pool:v,use_route:!0}),console.log(C,"swapResut###"),C){const X=z.get_share_liquidity_by_amount(R,J.balance);b=no.getCoinAmountFromLiquidity(new U(r==100?X:C.liquidity),new U(H.current_sqrt_price),B,L,!1),W=z.get_protocol_fee_amount(R,b.coinA.toString()),V=z.get_protocol_fee_amount(R,b.coinB.toString()),Q=r==100?J.balance:z.get_lp_amount_by_liquidity(R,C.liquidity),$=K(b.coinA.toString()).mul(K(1-o.slippage)),k=K(b.coinB.toString()).mul(K(1-o.slippage)),console.log($.toString(),"##minAmountA"),console.log(k.toString(),"##minAmountA")}}else{const X=z.get_share_liquidity_by_amount(R,r==100?J.balance:o.lpTokenAmount);console.log(X,"#removeLiquidity"),b=no.getCoinAmountFromLiquidity(new U(X),A,B,L,!1),b=no.getCoinAmountFromLiquidity(new U(X),A,B,L,!1),console.log(b,"#coinAmountscoinAmounts"),Q=o.lpTokenAmount,$=K(b.coinA.toString()).mul(K(1-o.slippage)),k=K(b.coinB.toString()).mul(K(1-o.slippage)),console.log(W,V,"##protocol_fee_amount_b"),console.log($.toString(),"##minAmountA"),console.log(k.toString(),"##minAmountA"),console.log(o,"params###246")}console.log(Q,"lpTokenAmount remove");const Y={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:Q,min_amount_a:_o($,0)||"",min_amount_b:_o(k,0)||"",rewarder_coin_types:[],slippage:o.slippage};console.log(Y,"##removeParams"),(f||T)&&(Y.swapParams={a2b:!d,swap_amount:C==null?void 0:C.swapInAmount,route_obj:C.routeObj});const F=await e.Vaults.remove(Y);return u(F)},getAutoPool:I,calculateDepositSwapAmount:async o=>{const{lowerTick:l,upperTick:w,curSqrtPrice:S,fix_amount_a:h,input_amount:P,coinTypeA:v,coinTypeB:B,clmm_pool:L,slippage:d,decimals:A}=o;console.log(o,"params###");const s=await e.Vaults.calculateDepositSwapAmount({lowerTick:l,upperTick:w,curSqrtPrice:S,fix_amount_a:h,input_amount:P,coinTypeA:v,coinTypeB:B,clmm_pool:L,use_route:!0});if(console.log(s,"##swapResut"),s){const q=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:y(q.sub(q.mul(d)).toNumber(),A)}}return s},calculateRemoveSwapAmount:async o=>{const{lowerTick:l,upperTick:w,curSqrtPrice:S,fix_amount_a:h,receiveAmount:P,coinTypeA:v,coinTypeB:B,clmm_pool:L,slippage:d,decimals:A}=o;console.log(o,"params###");const s=await e.Vaults.calculateRemoveSwapAmount({lowerTick:l,upperTick:w,curSqrtPrice:S,fix_amount_a:h,receive_amount:P,coinTypeA:v,coinTypeB:B,clmm_pool:L,use_route:!0});if(console.log(s,"###swapResut calculateRemoveSwapAmount"),s){const q=new t(s.swapOutAmount);return{...s,swapOutAmountLimit:y(q.sub(q.mul(d)).toNumber(),A)}}return s}}}const Lo=fo("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING",slippage:localStorage.getItem("cetus-auto-slippage")||"0.1"}),getters:{getPoolStore(){return Po()}},actions:{async getAutoPoolList(){const a=await so("Sui").getAutoPools();console.log(a,"list###");const m=this.getPoolStore,c=a.map(e=>({...m.poolConfigObj[e.pool_id],id:e.id,lp_token_type:e.lp_token_type,autoPoolPositionInfo:e.positins[0],is_pause:e.is_pause,total_supply:e.total_supply,liquidity:e.liquidity,protocol_fee_rate:e.protocol_fee_rate,max_quota:e.max_quota,quota_based_type:e.quota_based_type}));this.autoPoolList=c,this.autoPoolObj=Object.fromEntries(c.map((e,_)=>[e.address,e])),this.getMyAutoPoolPosition(),console.log(c,"##autoPoolList")},async getMyAutoPoolPosition(){var _,D,Z;const n=so("Sui"),a=this.autoPoolList,m=mo("Sui"),c=[],{RATES:e}=this.getPoolStore;for(let I=0;I<a.length;I++){const i=a[I];console.log(i,"poolINfo###");const u=await m.getPool(i.address),p=await n.getLpBalance(a[I].lp_token_type);console.log(p,"balance##");const j=(await m.getTokenListByCoinType([a[I].lp_token_type]))[0];console.log(j,"lpInfo##");const G=((_=e[i.coinA.address])==null?void 0:_.price)||"",M=((D=e[i.coinB.address])==null?void 0:D.price)||"",N=i.autoPoolPositionInfo.tick_lower_index,o=i.autoPoolPositionInfo.tick_upper_index,l={tick_lower_index:N,tick_upper_index:o,current_sqrt_price:u==null?void 0:u.current_sqrt_price,liquidity:Number(p)>0?z.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},p):0},w=await m.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:u==null?void 0:u.current_sqrt_price},position:l,roundUp:!1});console.log(w,"##amountInfo");const S=w.coinaAmount,h=w.coinbAmount,P=S,v=h,B=i.coinA.decimals,L=i.coinB.decimals,d=m.TickMath.tickIndexToPrice(Number(N),B,L).toString(),A=m.TickMath.tickIndexToPrice(Number(o),B,L).toString(),s=new t(G).mul(new t(S)).toNumber(),q=new t(M).mul(new t(h)).toNumber(),x=s>0&&s<.01?"<$0.01":`$${io(y(s,2))}`,E=q>0&&q<.01?"<$0.01":`$${io(y(q,2))}`,O=uo.sqrtPriceX64ToPrice(u.current_sqrt_price,B,L),f=await m.getCoinAmountFromLiquidity({pool:{...i,tick_lower_index:N,tick_upper_index:o,current_sqrt_price:u==null?void 0:u.current_sqrt_price},position:{...l,liquidity:i.liquidity},roundUp:!1}),T=new t(f.coinaAmount).toNumber(),r=new t(f.coinbAmount).toNumber();console.log(T,r,O.toString(),"###116");const J=y(new t(T).mul(new t(G)).toNumber(),2),R=y(new t(r).mul(new t(M)).toNumber(),2);console.log(u,"newPool##"),console.log(T,r,"###131");const{ratioA:H,ratioB:C}=z.calculateDepositRatio(N,o,new U.BN(u==null?void 0:u.current_sqrt_price));console.log(H.toString(),C.toString(),"###139");const b=Number(y(H.toString(),2))*100,W=100-b;console.log(T,r,b,W,"###147");let V=0;Number(p)>0&&(V=new t(p).div(Math.pow(10,j.decimals)));const Q=G&&M?y(new t(s).add(new t(q)).toString(),2):"--",$=i.total_supply;let k=0;V>0&&$>0&&(k=new t(V).mul(Math.pow(10,j.decimals)).div(new t($)).mul(100).toNumber()),console.log(k,"##myShare");const Y=new t(1).div(Math.pow(10,i.decimals)).toNumber();let F=0;if(k>1)F=y(k,2);else if(k>0&&k<Y)F=`<${Y}`;else if(k==0)F=0;else{const po=go(k),yo=po==-1?2:po+2;F=y(k,yo)}console.log(p,V.toString(),"###balance");const X={tick_lower_index:N,tick_upper_index:o,current_sqrt_price:u==null?void 0:u.current_sqrt_price,liquidity:i.max_liquidity_quota},oo=await m.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:u==null?void 0:u.current_sqrt_price},position:X,roundUp:!1}),to=new t(G).mul(new t(oo.coinaAmount)),eo=new t(M).mul(new t(oo.coinbAmount)),co=new t(G).mul(new t(f.coinaAmount)),Ao=new t(M).mul(new t(f.coinbAmount)),ro=to.add(eo).toNumber(),ao=co.add(Ao).toNumber();this.positionInfoObj[i.id]={tick_lower_index:N,tick_upper_index:o,current_sqrt_price:u.current_sqrt_price,myLiquidity:lo(p,j.decimals),amountA:P,amountB:v,...i,lpInfo:j,myAmountAUSD:x,myAmountBUSD:E,myLiquidityUSD:Q,myShare:F,minPrice:d,maxPrice:A,poolCoinARatio:b,poolCoinBRatio:W,poolCoinANum:T,poolCoinBNum:r,poolCoinAUSD:J,poolCoinBUSD:R,quoteUSD:ro,poolUSD:ao,balance:p},c.push({tick_lower_index:N,tick_upper_index:o,current_sqrt_price:(Z=i==null?void 0:i.object)==null?void 0:Z.current_sqrt_price,myLiquidity:lo(p,j.decimals),amountA:P,amountB:v,...i,lpInfo:j,myAmountAUSD:x,myAmountBUSD:E,myLiquidityUSD:Q,myShare:F,minPrice:d,maxPrice:A,poolCoinARatio:b,poolCoinBRatio:W,poolCoinANum:T,poolCoinBNum:r,poolCoinAUSD:J,poolCoinBUSD:R,quoteUSD:ro,poolUSD:ao,balance:p})}this.positionInfoList=c,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(n){var oo,to;const a=so("Sui"),m=mo("Sui"),c=await a.getAutoPool(n),e=await m.getPool(c.pool_id);console.log("newPoolInfo:",c),console.log("newPool:",e),console.log("this.positionInfoObj[id]:",this.positionInfoObj[n]);const _={...this.positionInfoObj[n],autoPoolPositionInfo:c.positins[0]},D=await a.getLpBalance(_.lp_token_type),Z=(await m.getTokenListByCoinType([_.lp_token_type]))[0];console.log(D,"###balance updatePositionItem");const I=_.autoPoolPositionInfo.tick_lower_index,i=_.autoPoolPositionInfo.tick_upper_index,u={tick_lower_index:I,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,liquidity:z.get_share_liquidity_by_amount({liquidity:c==null?void 0:c.liquidity,total_supply:c==null?void 0:c.total_supply},D)},p=m.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.current_sqrt_price,..._},position:u,roundUp:!1});console.log(p,"amountInfo###"),p.coinaAmount,p.coinbAmount;const j=p.coinaAmount,G=p.coinbAmount,{RATES:M}=this.getPoolStore,N=c.total_supply,o=uo.sqrtPriceX64ToPrice(e.current_sqrt_price,_.coinA.decimals,_.coinB.decimals),l=2,w=2,S=((oo=M[_.coinA.address])==null?void 0:oo.price)||0,h=((to=M[_.coinB.address])==null?void 0:to.price)||0,P=new t(S).mul(new t(p==null?void 0:p.coinaAmount)).toNumber(),v=new t(h).mul(new t(p==null?void 0:p.coinbAmount)).toNumber(),B=P>0&&P<.01?"<$0.01":`$${io(y(P,2))}`,L=v>0&&v<.01?"<$0.01":`$${io(y(v,2))}`;let d=new t(0);Number(D)>0&&(d=new t(D).div(Math.pow(10,Z.decimals)));const A=S&&h?y(new t(P).add(new t(v)).toString(),2):"--",s=new t(d).mul(Math.pow(10,_.lpInfo.decimals)).div(new t(N)).mul(100).toNumber();console.log(s,"##myShare");const q=new t(1).div(Math.pow(10,_.decimals)).toNumber();let x=0;if(s>1)x=y(s,2);else if(s>0&&s<q)x=`<${q}`;else if(s==0)x=0;else{const eo=go(s),co=eo==-1?2:eo+2;x=y(s,co)}const E=uo.sqrtPriceX64ToPrice(e.current_sqrt_price,l,w),O=await m.getCoinAmountFromLiquidity({pool:{..._,tick_lower_index:I,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:{...u,liquidity:c.liquidity},roundUp:!1}),f=new t(O.coinaAmount).toNumber(),T=new t(O.coinbAmount).toNumber();console.log(f,T,E.toString(),"###116");const r=y(new t(f).mul(new t(S)).toNumber(),2),J=y(new t(T).mul(new t(h)).toNumber(),2);console.log(e,"newPool##"),console.log(f,T,"###poolCoinBNum");const{ratioA:R,ratioB:H}=z.calculateDepositRatio(I,i,new U.BN(e==null?void 0:e.current_sqrt_price));console.log(R.toString(),H.toString(),"###139");const C=Number(y(R.toString(),2))*100,b=100-C,W={tick_lower_index:I,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price,liquidity:_.max_liquidity_quota},V=await m.getCoinAmountFromLiquidity({pool:{..._,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:W,roundUp:!1}),Q=new t(S).mul(new t(V.coinaAmount)),$=new t(h).mul(new t(V.coinbAmount)),k=new t(S).mul(new t(O.coinaAmount)),Y=new t(h).mul(new t(O.coinbAmount)),F=Q.add($).toNumber(),X=k.add(Y).toNumber();this.positionInfoObj[n]={..._,tick_lower_index:I,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,myLiquidity:lo(D,Z.decimals),amountA:j,amountB:G,myShare:x,myAmountAUSD:B,myAmountBUSD:L,myLiquidityUSD:A,poolCoinARatio:C,poolCoinBRatio:b,poolCoinANum:f,poolCoinBNum:T,poolCoinAUSD:r,poolCoinBUSD:J,quoteUSD:F,poolUSD:X,balance:D,price:o},console.log(this.positionInfoObj[n],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:n}=await fetch(`${g.Sui.api}/v2/sui/auto_pools`).then(a=>a.json());n&&n.pools&&n.pools.length>0&&(this.apyObj=Object.fromEntries(n.pools.map((a,m)=>[a.object_id,{...a,apr:a.apr.replace("%","")>0&&a.apr.replace("%","")<.01?"<0.01%":y(a.apr.replace("%",""),2)+"%",resultApr:a.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(n){const a=so("Sui"),{status:m}=await a.getVault(n);this.currentAutoPoolStatus=m,this.updatePositionItem(n),console.log(m,"status##")},setSlippage(n){console.log(n,"slippage##"),this.slippage=n,localStorage.setItem("cetus-auto-slippage",n)}}});export{so as a,Lo as u};
