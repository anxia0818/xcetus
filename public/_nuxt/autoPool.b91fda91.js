import{a8 as qo,C as fo,V as ko,a9 as Po}from"./entry.4094fb39.js";import{c as b,a as To}from"./sha256.7c8d670f.js";import{M as Bo,N as wo,b as j,O as Y,T as ao,C as so,o as go,s as L,u as xo,e as yo,a as lo,f as Ao,p as uo}from"./pool.4427db39.js";import{C as vo,V as Z}from"./index.ab35997e.js";import{D as t}from"./decimal.0bdeb344.js";function ro(n){const m={launchpad:b[n||"Sui"].launchpad,ido:b[n||"Sui"].ido,xcetus:b[n||"Sui"].xcetus,xcetus_dividends:b[n||"Sui"].xcetus_dividends,cetus_faucet:b[n||"Sui"].cetus_faucet,xtoken:b[n||"Sui"].xtoken,xtoken_dividends:b[n||"Sui"].xtoken_dividends,token_faucet:b[n||"Sui"].token_faucet,booster:b[n||"Sui"].booster,maker_bonus:b[n||"Sui"].maker_bonus,liquidity_stratefy:b[n||"Sui"].liquidity_stratefy,vaults:b[n||"Sui"].vaults},g={fullRpcUrl:localStorage.getItem(`${n}-currentRpclocal2`)||b[n||"Sui"].fullRpcUrl,simulationAccount:b[n||"Sui"].simulationAccount,cetus_config:b[n||"Sui"].cetus_config,clmm_pool:b[n||"Sui"].clmm_pool,integrate:b[n||"Sui"].integrate,deepbook:b[n||"Sui"].deepbook,deepbook_endpoint_v2:b[n||"Sui"].deepbook_endpoint_v2,aggregatorUrl:b[n||"Sui"].aggregatorUrl},l=new Bo(g),e=qo(new vo(m,l)),r=To(),R=fo(()=>r);ko(()=>{R.value.address&&(l.senderAddress=R.value.address)});const oo=async()=>{console.log(e,"sdk###");const o=await e.Vaults.getVaultList();return o&&o.data||[]},O=async o=>{const u=await e.Vaults.getVault(o);return console.log(u,"vault##"),{...u,quota_based_type:wo(u.quota_based_type).full_address}},i=async o=>{if(console.log(o,"###coinType"),l.senderAddress){const u=await e.ClmmSDK.fullClient.getBalance({owner:l.senderAddress,coinType:o});return u&&u.totalBalance}else return 0},y=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:oo,getLpBalance:i,getVault:async o=>{const u=await e.Vaults.getVault(o);return console.log(u,"vault##292"),u},deposit:async o=>{const{lowerTick:u,upperTick:A,slippage:q,rewarder_coin_types:v,isOnlyA:f,isOnlyB:k,currentTickIndex:w,decimal_b:N}=o;console.log(o,"params###");let a=o.fix_amount_a,S,P,_,c=w;if(f||k){let s;try{s=await e.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:A,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,use_route:!0,priceSplitPoint:q},!0)}catch{s=await e.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:A,curSqrtPrice:o.curSqrtPrice,fix_amount_a:o.fix_amount_a,input_amount:o.coinAmount,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,clmm_pool:o.clmm_pool,use_route:!1,priceSplitPoint:q},!0)}console.log(s,"swapResut##211"),s?(P=new j(s.afterSqrtPrice),S=s.fixAmountA===a?new j(Y(o.coinAmount).sub(s.swapInAmount).toString()):new j(s.swapOutAmount),_={swap_amount:s.swapInAmount,a2b:a,input_amount:o.coinAmount,route_obj:s.routeObj},a=s.fixAmountA,c=ao.sqrtPriceX64ToTickIndex(new j(s.afterSqrtPrice))):(P=new j(o.curSqrtPrice),S=new j(o.coinAmount))}else P=o.curSqrtPrice,S=new j(o.coinAmount);let B,d,V;console.log(u,w,A,"####138"),c>=u&&c<=A?(B=so.estLiquidityAndcoinAmountFromOneAmounts(u,A,S,a,!0,q,P),d=a?S.toString():B.tokenMaxA.toString(),V=a?B.tokenMaxB.toString():S.toString()):c<u?(d=S.toNumber(),V=0):c>A&&(d=0,V=S.toNumber()),console.log({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:d,amount_b:V,fix_amount_a:a,slippage:q,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[],swapParams:_},"params171");const p=await e.Vaults.deposit({lowerTick:u,upperTick:A,vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:d,amount_b:V,fix_amount_a:a,slippage:q,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,swapParams:_});return y(p)},remove:async o=>{const{lowerTick:u,upperTick:A,coinTypeA:q,coinTypeB:v,receiveAmount:f,clmm_pool:k,lowerSqrtPrice:w,upperSqrtPrice:N,fix_amount_a:a,curSqrtPrice:S,slippage:P,rewarder_coin_types:_,id:c,liquidity:B,swapParams:d,isOnlyA:V,isOnlyB:p,sliderVal:s,positionInfo:D,maxLiquidity:$}=o;console.log(s,"sliderVal##");const C=await O(c),z=await l.Pool.getPool(C.pool_id);let U,x,J,F,X,M,G;const h=Z.get_share_liquidity_by_amount(C,s==100?D.balance:o.lpTokenAmount);if(console.log(f,"##receiveAmount"),V||p){try{U=await e.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:A,curSqrtPrice:z.current_sqrt_price,fix_amount_a:a,receive_amount:f,coinTypeA:q,coinTypeB:v,clmm_pool:k,use_route:!0,priceSplitPoint:P,removeLiquidity:s==100?h:"",maxLiquidity:$})}catch(E){console.log(E,"e251"),U=await e.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:A,curSqrtPrice:z.current_sqrt_price,fix_amount_a:a,receive_amount:f,coinTypeA:q,coinTypeB:v,clmm_pool:k,use_route:!1,priceSplitPoint:P,removeLiquidity:s==100?h:"",maxLiquidity:$})}if(console.log(U,"swapResut###"),U){const E=Z.get_share_liquidity_by_amount(C,D.balance);x=so.getCoinAmountFromLiquidity(new j(s==100?E:U.liquidity),new j(z.current_sqrt_price),w,N,!1),J=Z.get_protocol_fee_amount(C,x.coinA.toString()),F=Z.get_protocol_fee_amount(C,x.coinB.toString()),X=s==100?D.balance:Z.get_lp_amount_by_liquidity(C,U.liquidity),M=Y(x.coinA.toString()).mul(Y(1-o.slippage)),G=Y(x.coinB.toString()).mul(Y(1-o.slippage)),console.log(M.toString(),"##minAmountA"),console.log(G.toString(),"##minAmountA")}}else console.log(h,"#removeLiquidity"),x=so.getCoinAmountFromLiquidity(new j(h),S,w,N,!1),x=so.getCoinAmountFromLiquidity(new j(h),S,w,N,!1),console.log(x,"#coinAmountscoinAmounts"),X=o.lpTokenAmount,M=Y(x.coinA.toString()).mul(Y(1-o.slippage)),G=Y(x.coinB.toString()).mul(Y(1-o.slippage)),console.log(J,F,"##protocol_fee_amount_b"),console.log(M.toString(),"##minAmountA"),console.log(G.toString(),"##minAmountA"),console.log(o,"params###246");console.log(X,"lpTokenAmount remove");const W={vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:X,min_amount_a:go(M,0)||"",min_amount_b:go(G,0)||"",rewarder_coin_types:[],slippage:o.slippage};console.log(W,"##removeParams"),(V||p)&&(W.swapParams={a2b:!a,swap_amount:U==null?void 0:U.swapInAmount,route_obj:U.routeObj});const K=await e.Vaults.remove(W);return y(K)},getAutoPool:O,calculateDepositSwapAmount:async o=>{const{lowerTick:u,upperTick:A,curSqrtPrice:q,fix_amount_a:v,input_amount:f,coinTypeA:k,coinTypeB:w,clmm_pool:N,slippage:a,decimals:S,request_id:P}=o;console.log(o,"params###");let _;try{_=await e.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:A,curSqrtPrice:q,fix_amount_a:v,input_amount:f,coinTypeA:k,coinTypeB:w,clmm_pool:N,use_route:!0,priceSplitPoint:a,request_id:P},!0)}catch(c){String(c)=="Error: route unavailable"&&(console.log(c,"e432"),_=await e.Vaults.calculateDepositSwapAmount({lowerTick:u,upperTick:A,curSqrtPrice:q,fix_amount_a:v,input_amount:f,coinTypeA:k,coinTypeB:w,clmm_pool:N,use_route:!1,priceSplitPoint:a,request_id:P},!0))}if(console.log(_,"##swapResut"),_){const c=new t(_.swapOutAmount);return{..._,swapOutAmountLimit:L(c.sub(c.mul(a)).toNumber(),S)}}return _},calculateRemoveSwapAmount:async o=>{const{lowerTick:u,upperTick:A,curSqrtPrice:q,fix_amount_a:v,receiveAmount:f,coinTypeA:k,coinTypeB:w,clmm_pool:N,slippage:a,decimals:S,liquidity:P,maxLiquidity:_,request_id:c}=o;console.log(o,"params###");let B;try{B=await e.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:A,curSqrtPrice:q,fix_amount_a:v,receive_amount:f,coinTypeA:k,coinTypeB:w,clmm_pool:N,use_route:!0,priceSplitPoint:a,removeLiquidity:P,maxLiquidity:_,request_id:c})}catch(d){String(d)=="Error: route unavailable"&&(console.log(d,"e432"),B=await e.Vaults.calculateRemoveSwapAmount({lowerTick:u,upperTick:A,curSqrtPrice:q,fix_amount_a:v,receive_amount:f,coinTypeA:k,coinTypeB:w,clmm_pool:N,use_route:!1,priceSplitPoint:a,removeLiquidity:P,maxLiquidity:_,request_id:c}))}if(console.log(B,"###swapResut calculateRemoveSwapAmount"),B){const d=new t(B.swapOutAmount);return console.log(d.toNumber(),"swapOutAmount.toNumber()"),{...B,swapOutAmountLimit:L(d.sub(d.mul(a)).toNumber(),S)}}return B}}}const Io=Po("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{},currentAutoPoolStatus:"STATUS_RUNNING",slippage:localStorage.getItem("cetus-auto-slippage")||"0.1"}),getters:{getPoolStore(){return xo()}},actions:{async getAutoPoolList(){const m=await ro("Sui").getAutoPools();console.log(m,"list###");const g=this.getPoolStore,l=m.map(e=>({...g.poolConfigObj[e.pool_id],id:e.id,lp_token_type:e.lp_token_type,autoPoolPositionInfo:e.positins[0],is_pause:e.is_pause,total_supply:e.total_supply,liquidity:e.liquidity,protocol_fee_rate:e.protocol_fee_rate,max_quota:e.max_quota,quota_based_type:wo(e.quota_based_type).full_address}));this.autoPoolList=l,this.autoPoolObj=Object.fromEntries(l.map((e,r)=>[e.address,e])),this.getMyAutoPoolPosition(),console.log(l,"##autoPoolList")},async getMyAutoPoolPosition(){var r,R,oo;const n=ro("Sui"),m=this.autoPoolList,g=yo("Sui"),l=[],{RATES:e}=this.getPoolStore;for(let O=0;O<m.length;O++){const i=m[O];console.log(i,"poolINfo###");const y=await g.getPool(i.address),I=await n.getLpBalance(m[O].lp_token_type);console.log(I,"balance##");const T=(await g.getTokenListByCoinType([m[O].lp_token_type]))[0];console.log(T,"lpInfo##");const to=((r=e[i.coinA.address])==null?void 0:r.price)||"",H=((R=e[i.coinB.address])==null?void 0:R.price)||"",Q=i.autoPoolPositionInfo.tick_lower_index,o=i.autoPoolPositionInfo.tick_upper_index,u=Number(I)>0?Z.get_share_liquidity_by_amount({liquidity:i==null?void 0:i.liquidity,total_supply:i==null?void 0:i.total_supply},I):0,A={tick_lower_index:Q,tick_upper_index:o,current_sqrt_price:y==null?void 0:y.current_sqrt_price,liquidity:u},q=await g.getCoinAmountFromLiquidity({pool:{...i,current_sqrt_price:y==null?void 0:y.current_sqrt_price},position:A,roundUp:!1});console.log(q,"##amountInfo");const v=q.coinaAmount,f=q.coinbAmount,k=v,w=f,N=i.coinA.decimals,a=i.coinB.decimals,S=g.TickMath.tickIndexToPrice(Number(Q),N,a).toString(),P=g.TickMath.tickIndexToPrice(Number(o),N,a).toString(),_=new t(to).mul(new t(v)).toNumber(),c=new t(H).mul(new t(f)).toNumber(),B=_>0&&_<.01?"<$0.01":`$${lo(L(_,2))}`,d=c>0&&c<.01?"<$0.01":`$${lo(L(c,2))}`,V=ao.sqrtPriceX64ToPrice(y.current_sqrt_price,N,a),p=await g.getCoinAmountFromLiquidity({pool:{...i,tick_lower_index:Q,tick_upper_index:o,current_sqrt_price:y==null?void 0:y.current_sqrt_price},position:{...A,liquidity:i.liquidity},roundUp:!1}),s=new t(p.coinaAmount).toNumber(),D=new t(p.coinbAmount).toNumber();console.log(s,D,V.toString(),"###116");const $=L(new t(s).mul(new t(to)).toNumber(),2),C=L(new t(D).mul(new t(H)).toNumber(),2);console.log(y,"newPool##"),console.log(s,D,to,H,Number($)+Number(C),"###poolCoinBNum");const{ratioA:z,ratioB:U}=Z.calculateDepositRatio(Q,o,new j.BN(y==null?void 0:y.current_sqrt_price));console.log(z,U.toString(),"###139");const x=z.mul(100).toNumber().toFixed(0),J=100-Number(x);console.log(s,D,x,J,"###147");let F=0;Number(I)>0&&(F=new t(I).div(Math.pow(10,T.decimals)));const X=new t(_).add(new t(c)).toNumber(),M=to&&H?X>0&&X<.01?"<0.01":L(new t(_).add(new t(c)).toString(),2):"--",G=i.total_supply;let h=0;F>0&&G>0&&(h=new t(F).mul(Math.pow(10,T.decimals)).div(new t(G)).mul(100).toNumber()),console.log(h,"##myShare");const W=new t(1).div(Math.pow(10,i.decimals)).toNumber();let K=0;if(h>1)K=L(h,2);else if(h>0&&h<W)K=`<${W}`;else if(h==0)K=0;else{const _o=Ao(h),bo=_o==-1?2:_o+2;K=L(h,bo)}console.log(I,F.toString(),"###balance");const E=(await g.getTokenListByCoinType([i.quota_based_type]))[0],no=uo(i.max_quota,E.decimals);console.log(i.quota_based_type,E,no,"##quoteCoinInfo");const eo=E.address==i.coin_b_address,io=eo?new t(p.coinaAmount).mul(i.price).add(p.coinbAmount):new t(p.coinaAmount).mul(1/i.price).add(p.coinbAmount),co=io.toNumber();console.log(eo,co,"#isQuotaCoin");const po=no,So=eo?new t(p.coinaAmount).mul(i.price).add(p.coinbAmount):new t(p.coinaAmount).mul(1/i.price).add(p.coinbAmount),mo=new t(po).sub(So).mul(H).toNumber();console.log(mo,"remainingTokenUSD##"),console.log(io.toNumber(),"#poolTokenNum"),this.positionInfoObj[i.id]={tick_lower_index:Q,tick_upper_index:o,current_sqrt_price:y.current_sqrt_price,myLiquidity:uo(I,T.decimals),amountA:k,amountB:w,...i,lpInfo:T,myAmountAUSD:B,myAmountBUSD:d,myLiquidityUSD:M,myShare:K,minPrice:S,maxPrice:P,poolCoinARatio:x,poolCoinBRatio:J,poolCoinANum:s,poolCoinBNum:D,poolCoinAUSD:$,poolCoinBUSD:C,quoteUSD:po,poolUSD:Number($)+Number(C),balance:I,quoteCoinInfo:E,remainingTokenUSD:mo,currentDeposit:co,positionLiquidity:u},l.push({tick_lower_index:Q,tick_upper_index:o,current_sqrt_price:(oo=i==null?void 0:i.object)==null?void 0:oo.current_sqrt_price,myLiquidity:uo(I,T.decimals),amountA:k,amountB:w,...i,lpInfo:T,myAmountAUSD:B,myAmountBUSD:d,myLiquidityUSD:M,myShare:K,minPrice:S,maxPrice:P,poolCoinARatio:x,poolCoinBRatio:J,poolCoinANum:s,poolCoinBNum:D,poolCoinAUSD:$,poolCoinBUSD:C,quoteUSD:po,poolUSD:Number($)+Number(C),balance:I})}this.positionInfoList=l,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(n){var no,eo;const m=ro("Sui"),g=yo("Sui"),l=await m.getAutoPool(n),e=await g.getPool(l.pool_id);console.log("newPoolInfo:",l),console.log("newPool:",e),console.log("this.positionInfoObj[id]:",this.positionInfoObj[n]);const r={...this.positionInfoObj[n],autoPoolPositionInfo:l.positins[0],...e},R=await m.getLpBalance(r.lp_token_type),oo=(await g.getTokenListByCoinType([r.lp_token_type]))[0];console.log(R,"###balance updatePositionItem");const O=r.autoPoolPositionInfo.tick_lower_index,i=r.autoPoolPositionInfo.tick_upper_index,y=Z.get_share_liquidity_by_amount({liquidity:l==null?void 0:l.liquidity,total_supply:l==null?void 0:l.total_supply},R),I={tick_lower_index:O,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,liquidity:y};console.log(r,"poolInfo##301");const T=g.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.current_sqrt_price,...r},position:I,roundUp:!1});console.log(T,"amountInfo###");const to=T.coinaAmount,H=T.coinbAmount,{RATES:Q}=this.getPoolStore,o=l.total_supply,u=ao.sqrtPriceX64ToPrice(e.current_sqrt_price,r.coinA.decimals,r.coinB.decimals),A=2,q=2,v=((no=Q[r.coinA.address])==null?void 0:no.price)||0,f=((eo=Q[r.coinB.address])==null?void 0:eo.price)||0,k=new t(v).mul(new t(T==null?void 0:T.coinaAmount)).toNumber(),w=new t(f).mul(new t(T==null?void 0:T.coinbAmount)).toNumber(),N=k>0&&k<.01?"<$0.01":`$${lo(L(k,2))}`,a=w>0&&w<.01?"<$0.01":`$${lo(L(w,2))}`;let S=new t(0);Number(R)>0&&(S=new t(R).div(Math.pow(10,oo.decimals)));const P=new t(k).add(new t(w)).toNumber(),_=v&&f?P>0&&P<.01?"<0.01":L(new t(k).add(new t(w)).toString(),2):"--",c=new t(S).mul(Math.pow(10,r.lpInfo.decimals)).div(new t(o)).mul(100).toNumber();console.log(c,"##myShare");const B=new t(1).div(Math.pow(10,r.decimals)).toNumber();let d=0;if(c>1)d=L(c,2);else if(c>0&&c<B)d=`<${B}`;else if(c==0)d=0;else{const io=Ao(c),co=io==-1?2:io+2;d=L(c,co)}const V=ao.sqrtPriceX64ToPrice(e.current_sqrt_price,A,q),p=await g.getCoinAmountFromLiquidity({pool:{...r,tick_lower_index:O,tick_upper_index:i,current_sqrt_price:e==null?void 0:e.current_sqrt_price},position:{...I,liquidity:l.liquidity},roundUp:!1}),s=new t(p.coinaAmount).toNumber(),D=new t(p.coinbAmount).toNumber();console.log(s,D,V.toString(),"###116");const $=L(new t(s).mul(new t(v)).toNumber(),2),C=L(new t(D).mul(new t(f)).toNumber(),2);console.log(e,"newPool##"),console.log(s,D,v,f,Number($)+Number(C),"###poolCoinBNum");const{ratioA:z,ratioB:U}=Z.calculateDepositRatio(O,i,new j.BN(e==null?void 0:e.current_sqrt_price));console.log(z,U.toString(),"###139");const x=z.mul(100).toNumber().toFixed(0),J=100-Number(x),F=(await g.getTokenListByCoinType([l.quota_based_type]))[0],X=uo(l.max_quota,F.decimals);console.log(l.quota_based_type,F,X,"##quoteCoinInfo");const M=F.address==r.coin_b_address,h=(M?new t(p.coinaAmount).mul(r.price).add(p.coinbAmount):new t(p.coinaAmount).mul(1/r.price).add(p.coinbAmount)).toNumber(),W=X,K=M?new t(p.coinaAmount).mul(r.price).add(p.coinbAmount):new t(p.coinaAmount).mul(1/r.price).add(p.coinbAmount),E=new t(W).sub(K).mul(f).toNumber();console.log(E,"remainingTokenUSD##"),this.positionInfoObj[n]={...r,tick_lower_index:O,tick_upper_index:i,current_sqrt_price:e.current_sqrt_price,myLiquidity:uo(R,oo.decimals),amountA:to,amountB:H,myShare:d,myAmountAUSD:N,myAmountBUSD:a,myLiquidityUSD:_,poolCoinARatio:x,poolCoinBRatio:J,poolCoinANum:s,poolCoinBNum:D,poolCoinAUSD:$,poolCoinBUSD:C,quoteUSD:W,poolUSD:Number($)+Number(C),balance:R,price:u,quoteCoinInfo:F,remainingTokenUSD:E,currentDeposit:h,positionLiquidity:y,liquidity:l==null?void 0:l.liquidity},console.log(this.positionInfoObj[n],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){try{const{data:n}=await fetch(`${b.Sui.api}/v2/sui/auto_pools`).then(m=>m.json());n&&n.pools&&n.pools.length>0&&(this.apyObj=Object.fromEntries(n.pools.map((m,g)=>[m.object_id,{...m,apr:m.apr.replace("%","")>0&&m.apr.replace("%","")<.01?"<0.01%":L(m.apr.replace("%",""),2)+"%",resultApr:m.apr.replace("%","")}])),console.log(this.apyObj,"data##"))}catch{this.apyObj={}}},async getVault(n){const m=ro("Sui"),{status:g}=await m.getVault(n);this.currentAutoPoolStatus=g,this.updatePositionItem(n),console.log(g,"status##")},setSlippage(n){console.log(n,"slippage##"),this.slippage=n,localStorage.setItem("cetus-auto-slippage",n)}}});export{ro as a,Io as u};
