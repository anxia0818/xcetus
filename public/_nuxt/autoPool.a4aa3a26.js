import{a6 as W,l as Y,T as z,a7 as G}from"./entry.384f5a5a.js";import{c as n,a as J}from"./sha256.ed3fa298.js";import{H as Q,C as E,I as T,l as F,u as X,b as $,s as q,f as K,p as D}from"./pool.34d9f7a1.js";import{C as Z,V as H}from"./index.f1ebe715.js";import{D as c}from"./decimal.0e8aa3f1.js";function I(o){const i={launchpad:n[o||"Sui"].launchpad,ido:n[o||"Sui"].ido,xcetus:n[o||"Sui"].xcetus,xcetus_dividends:n[o||"Sui"].xcetus_dividends,cetus_faucet:n[o||"Sui"].cetus_faucet,xtoken:n[o||"Sui"].xtoken,xtoken_dividends:n[o||"Sui"].xtoken_dividends,token_faucet:n[o||"Sui"].token_faucet,booster:n[o||"Sui"].booster,maker_bonus:n[o||"Sui"].maker_bonus,liquidity_stratefy:n[o||"Sui"].liquidity_stratefy,vaults:n[o||"Sui"].vaults},S={fullRpcUrl:localStorage.getItem(`${o}-currentRpclocal2`)||n[o||"Sui"].fullRpcUrl,simulationAccount:n[o||"Sui"].simulationAccount,cetus_config:n[o||"Sui"].cetus_config,clmm_pool:n[o||"Sui"].clmm_pool,integrate:n[o||"Sui"].integrate,deepbook:n[o||"Sui"].deepbook,deepbook_endpoint_v2:n[o||"Sui"].deepbook_endpoint_v2,aggregatorUrl:n[o||"Sui"].aggregatorUrl},s=new Q(S),e=W(new Z(i,s)),d=J(),b=Y(()=>d);z(()=>{b.value.address&&(s.senderAddress=b.value.address)});const h=async()=>{console.log(e,"sdk###");const t=await e.Vaults.getVaultList();return t&&t.data||[]},j=async t=>await e.Vaults.getVault(t),x=async t=>{console.log(t,"###coinType");const r=await e.ClmmSDK.fullClient.getBalance({owner:s.senderAddress,coinType:t});return r&&r.totalBalance},u=t=>({transactionBlock:t,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:h,getLpBalance:x,deposit:async t=>{const{lowerTick:r,upperTick:a,coinAmount:y,fix_amount_a:p,slippage:_,curSqrtPrice:k,rewarder_coin_types:f}=t;console.log(t,"params###");const g=E.estLiquidityAndcoinAmountFromOneAmounts(r,a,y,p,!0,_,k),l=p?y.toString():g.tokenMaxA.toString(),m=p?g.tokenMaxB.toString():y.toString(),A=await e.Vaults.deposit({vault_id:t.id,clmm_pool:t.clmm_pool,lp_token_type:t.lp_token_type,amount_a:l,amount_b:m,fix_amount_a:p,slippage:_,coinTypeA:t.coinTypeA,coinTypeB:t.coinTypeB,rewarder_coin_types:[]});return u(A)},remove:async t=>{const{lowerSqrtPrice:r,upperSqrtPrice:a,lpTokenAmount:y,curSqrtPrice:p,slippage:_,rewarder_coin_types:k}=t;console.log(t,"params##");const f=E.getCoinAmountFromLiquidity(y,p,r,a,!0),g=T(f.coinA.toString()).mul(T(1-_)),l=T(f.coinB.toString()).mul(T(1-_));console.log(f.coinA.toString(),"##.toString()"),console.log(t.lpTokenAmount.toString(),g.toString(),l.toString(),"params##");const m=await e.Vaults.remove({vault_id:t.id,clmm_pool:t.clmm_pool,lp_token_type:t.lp_token_type,coinTypeA:t.coinTypeA,coinTypeB:t.coinTypeB,lp_token_amount:y.toString(),min_amount_a:F(g.toString(),0)||"",min_amount_b:F(l.toString(),0)||"",rewarder_coin_types:[]});return u(m)},getAutoPool:j}}const nt=G("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return X()}},actions:{async getAutoPoolList(){const i=await I("Sui").getAutoPools();console.log(i,"list###");const S=this.getPoolStore,s=i.map(e=>({...S.poolConfigObj[e.pool_id],id:e.id,lp_token_type:e.lp_token_type,autoPoolPositionInfo:e.positins[0],is_pause:e.is_pause,total_supply:e.total_supply,liquidity:e.liquidity}));this.autoPoolList=s,this.autoPoolObj=Object.fromEntries(s.map((e,d)=>[e.address,e])),console.log(s,"##autoPoolList")},async getMyAutoPoolPosition(){var d,b,h,j,x,u,v;const o=I("Sui"),i=this.autoPoolList,S=$("Sui"),s=[],{RATES:e}=this.getPoolStore;for(let w=0;w<i.length;w++){const t=i[w],r=await o.getLpBalance(i[w].lp_token_type);console.log(r,"balance##");const a=(await S.getTokenListByCoinType([i[w].lp_token_type]))[0];console.log(a,"lpInfo##");const y=((d=e[t.coinA.address])==null?void 0:d.price)||"",p=((b=e[t.coinB.address])==null?void 0:b.price)||"",_=t.autoPoolPositionInfo.tick_lower_index,k=t.autoPoolPositionInfo.tick_upper_index;console.log(i[w],"list[i]"),console.log((h=t==null?void 0:t.object)==null?void 0:h.current_sqrt_price,"##poolInfo?.object?.current_sqrt_price");const f={tick_lower_index:_,tick_upper_index:k,current_sqrt_price:(j=t==null?void 0:t.object)==null?void 0:j.current_sqrt_price,liquidity:H.get_share_liquidity_by_amount({liquidity:t==null?void 0:t.liquidity,total_supply:t==null?void 0:t.total_supply},r)},g=S.getCoinAmountFromLiquidity({pool:{...t,current_sqrt_price:(x=t==null?void 0:t.object)==null?void 0:x.current_sqrt_price},position:f,roundUp:!0}),l=g.coinaAmount,m=g.coinbAmount,A=new c(y).mul(new c(l)).toNumber(),B=new c(p).mul(new c(m)).toNumber(),O=A>0&&A<.01?"<0.01":q(A,2),C=B>0&&B<.01?"<0.01":q(B,2);let U=0;Number(r)>0&&(U=new c(r).div(Math.pow(10,a.decimals)));const M=y&&p?q(new c(A).add(new c(B)).toString(),2):"",R=t.total_supply;let P=0;U>0&&R>0&&(P=new c(U).mul(Math.pow(10,a.decimals)).div(new c(R)).mul(100).toNumber()),console.log(P,"##myShare");const V=new c(1).div(Math.pow(10,t.decimals)).toNumber();let L=0;P>1?L=q(P,2):P>0&&P<V?L=`<${V}`:P==0?L=0:L=K(P,1),console.log(r,U.toString(),"###balance"),this.positionInfoObj[t.id]={tick_lower_index:_,tick_upper_index:k,current_sqrt_price:(u=t==null?void 0:t.object)==null?void 0:u.current_sqrt_price,myLiquidity:D(r,a.decimals),amountA:l,amountB:m,...t,lpInfo:a,myAmountAUSD:O,myAmountBUSD:C,myLiquidityUSD:M,myShare:L},s.push({tick_lower_index:_,tick_upper_index:k,current_sqrt_price:(v=t==null?void 0:t.object)==null?void 0:v.current_sqrt_price,myLiquidity:D(r,a.decimals),amountA:l,amountB:m,...t,lpInfo:a,myAmountAUSD:O,myAmountBUSD:C,myLiquidityUSD:M,myShare:L})}this.positionInfoList=s,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async updatePositionItem(o){var B,O;const i=I("Sui"),S=$("Sui"),s=await i.getAutoPool(o);console.log("newPoolInfo:",s),console.log("this.positionInfoObj[id]:",this.positionInfoObj[o]);const e={...this.positionInfoObj[o],autoPoolPositionInfo:s.positins[0]},d=await i.getLpBalance(e.lp_token_type),b=(await S.getTokenListByCoinType([e.lp_token_type]))[0];console.log(d,"###balance updatePositionItem");const h=e.autoPoolPositionInfo.tick_lower_index,j=e.autoPoolPositionInfo.tick_upper_index,x={tick_lower_index:h,tick_upper_index:j,current_sqrt_price:e.object.current_sqrt_price,liquidity:H.get_share_liquidity_by_amount({liquidity:s==null?void 0:s.liquidity,total_supply:s==null?void 0:s.total_supply},d)},u=S.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.object.current_sqrt_price,...e},position:x,roundUp:!0});console.log(u,"amountInfo###");const v=u.coinaAmount,w=u.coinbAmount,{RATES:t}=this.getPoolStore,r=s.total_supply,a=((B=t[e.coinA.address])==null?void 0:B.price)||0,y=((O=t[e.coinB.address])==null?void 0:O.price)||0,p=new c(a).mul(new c(u==null?void 0:u.coinaAmount)).toNumber(),_=new c(y).mul(new c(u==null?void 0:u.coinbAmount)).toNumber(),k=p>0&&p<.01?"<0.01":q(p,2),f=_>0&&_<.01?"<0.01":q(_,2);let g=new c(0);Number(d)>0&&(g=new c(d).div(Math.pow(10,b.decimals)));const l=new c(g).mul(Math.pow(10,e.lpInfo.decimals)).div(new c(r)).mul(100).toNumber();let m=0;const A=new c(1).div(Math.pow(10,e.decimals)).toNumber();l>1?m=q(l,2):l>0&&l<A?m=`<${A}`:m=K(l,1),this.positionInfoObj[o]={...e,tick_lower_index:h,tick_upper_index:j,current_sqrt_price:e.object.current_sqrt_price,myLiquidity:D(d,b.decimals),amountA:v,amountB:w,myShare:m,myAmountAUSD:k,myAmountBUSD:f},console.log(this.positionInfoObj[o],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){const{data:o}=await fetch(`${n.Sui.api}/v2/sui/auto_pools`).then(i=>i.json());o&&o.pools&&o.pools.length>0&&(this.apyObj=Object.fromEntries(o.pools.map((i,S)=>[i.object_id,{...i,apr:i.apr.replace("%","")>0&&i.apr.replace("%","")<.01?"<0.01%":q(i.apr.replace("%",""),2)+"%"}])),console.log(this.apyObj,"data##"))}}});export{I as a,nt as u};
