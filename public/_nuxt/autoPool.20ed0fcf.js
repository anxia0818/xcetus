import{a6 as V,l as $,T as K,a7 as H}from"./entry.7f941cc3.js";import{c as r,a as W}from"./sha256.39785b16.js";import{H as Y,C as E,I as D,l as F,u as z,b as T,s as A,f as O,p as C}from"./pool.c0c25608.js";import{C as G}from"./index.002371e3.js";import{D as i}from"./decimal.0e8aa3f1.js";function M(t){const u={launchpad:r[t||"Sui"].launchpad,ido:r[t||"Sui"].ido,xcetus:r[t||"Sui"].xcetus,xcetus_dividends:r[t||"Sui"].xcetus_dividends,cetus_faucet:r[t||"Sui"].cetus_faucet,xtoken:r[t||"Sui"].xtoken,xtoken_dividends:r[t||"Sui"].xtoken_dividends,token_faucet:r[t||"Sui"].token_faucet,booster:r[t||"Sui"].booster,maker_bonus:r[t||"Sui"].maker_bonus,liquidity_stratefy:r[t||"Sui"].liquidity_stratefy,vaults:r[t||"Sui"].vaults},e={fullRpcUrl:localStorage.getItem(`${t}-currentRpclocal2`)||r[t||"Sui"].fullRpcUrl,simulationAccount:r[t||"Sui"].simulationAccount,cetus_config:r[t||"Sui"].cetus_config,clmm_pool:r[t||"Sui"].clmm_pool,integrate:r[t||"Sui"].integrate,deepbook:r[t||"Sui"].deepbook,deepbook_endpoint_v2:r[t||"Sui"].deepbook_endpoint_v2,aggregatorUrl:r[t||"Sui"].aggregatorUrl},a=new Y(e),n=V(new G(u,a)),_=W(),f=$(()=>_);K(()=>{f.value.address&&(a.senderAddress=f.value.address)});const P=async()=>{console.log(n,"sdk###");const o=await n.Vaults.getVaultList();return o&&o.data||[]},h=async o=>await n.Vaults.getVault(o),L=async o=>{console.log(o,"###coinType");const c=await n.ClmmSDK.fullClient.getBalance({owner:a.senderAddress,coinType:o});return c&&c.totalBalance},p=o=>({transactionBlock:o,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}});return{getAutoPools:P,getLpBalance:L,deposit:async o=>{const{lowerTick:c,upperTick:b,coinAmount:d,fix_amount_a:m,slippage:l,curSqrtPrice:j,rewarder_coin_types:k}=o;console.log(o,"params###");const y=E.estLiquidityAndcoinAmountFromOneAmounts(c,b,d,m,!0,l,j),w=m?d.toString():y.tokenMaxA.toString(),g=m?y.tokenMaxB.toString():d.toString(),S=await n.Vaults.deposit({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,amount_a:w,amount_b:g,fix_amount_a:m,slippage:l,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,rewarder_coin_types:[]});return p(S)},remove:async o=>{const{lowerSqrtPrice:c,upperSqrtPrice:b,lpTokenAmount:d,curSqrtPrice:m,slippage:l,rewarder_coin_types:j}=o;console.log(o,"params##");const k=E.getCoinAmountFromLiquidity(d,m,c,b,!0),y=D(k.coinA.toString()).mul(D(1-l)),w=D(k.coinB.toString()).mul(D(1-l));console.log(o.lpTokenAmount.toString(),y.toString(),w.toString(),"params##");const g=await n.Vaults.remove({vault_id:o.id,clmm_pool:o.clmm_pool,lp_token_type:o.lp_token_type,coinTypeA:o.coinTypeA,coinTypeB:o.coinTypeB,lp_token_amount:d.toString(),min_amount_a:F(y.toString(),0)||"",min_amount_b:F(w.toString(),0)||"",rewarder_coin_types:[]});return p(g)},getAutoPool:h}}const oo=H("autoPool",{state:()=>({autoPoolList:[],autoPoolObj:{},positionInfoObj:{},positionInfoList:[],positionUSDObj:{},apyObj:{}}),getters:{getPoolStore(){return z()}},actions:{async getAutoPoolList(){const u=await M("Sui").getAutoPools();console.log(u,"list###");const e=this.getPoolStore,a=u.map(n=>({...e.poolConfigObj[n.pool_id],id:n.id,lp_token_type:n.lp_token_type,autoPoolPositionInfo:n.positins[0],is_pause:n.is_pause,total_supply:n.total_supply}));this.autoPoolList=a,this.autoPoolObj=Object.fromEntries(a.map((n,_)=>[n.address,n])),console.log(a,"##autoPoolList")},async getMyAutoPoolPosition(){var _,f,P,h,L,p;const t=M("Sui"),u=this.autoPoolList,e=T("Sui"),a=[],{RATES:n}=this.getPoolStore;for(let q=0;q<u.length;q++){const s=u[q],o=await t.getLpBalance(u[q].lp_token_type),c=(await e.getTokenListByCoinType([u[q].lp_token_type]))[0];console.log(c,"lpInfo##");const b=((_=n[s.coinA.address])==null?void 0:_.price)||"",d=((f=n[s.coinB.address])==null?void 0:f.price)||"",m=s.autoPoolPositionInfo.tick_lower_index,l=s.autoPoolPositionInfo.tick_upper_index,j={tick_lower_index:m,tick_upper_index:l,current_sqrt_price:(P=s==null?void 0:s.object)==null?void 0:P.current_sqrt_price,liquidity:o},k=e.getCoinAmountFromLiquidity({pool:{current_sqrt_price:(h=s==null?void 0:s.object)==null?void 0:h.current_sqrt_price,...s},position:j,roundUp:!1}),y=k.coinaAmount,w=k.coinbAmount,g=A(new i(b).mul(new i(y)).toString(),2),S=A(new i(d).mul(new i(w)).toString(),2);let I=0;Number(o)>0&&(I=new i(o).div(Math.pow(10,c.decimals)));const x=b&&d?A(new i(g).add(new i(S)).toString(),2):"",U=s.total_supply;let B=0;I>0&&U>0&&(B=new i(I).mul(Math.pow(10,c.decimals)).div(new i(U)).mul(100).toNumber()),console.log(B,"##myShare");const R=new i(1).div(Math.pow(10,s.decimals)).toNumber();let v=0;B>1?v=A(B,2):B>0&&B<R?v=`<${R}`:v=O(B,1),console.log(o,I.toString(),"###balance"),this.positionInfoObj[s.id]={tick_lower_index:m,tick_upper_index:l,current_sqrt_price:(L=s==null?void 0:s.object)==null?void 0:L.current_sqrt_price,myLiquidity:C(o,c.decimals),amountA:y,amountB:w,...s,lpInfo:c,myAmountAUSD:g,myAmountBUSD:S,myLiquidityUSD:x,myShare:v},a.push({tick_lower_index:m,tick_upper_index:l,current_sqrt_price:(p=s==null?void 0:s.object)==null?void 0:p.current_sqrt_price,myLiquidity:C(o,c.decimals),amountA:y,amountB:w,...s,lpInfo:c,myAmountAUSD:g,myAmountBUSD:S,myLiquidityUSD:x,myShare:v})}this.positionInfoList=a,console.log(this.positionInfoObj,"this.positionInfoObj###"),console.log(this.positionInfoList,"###this.positionInfoList")},async getUserPositionUSD(){const{RATES:t}=this.getPoolStore,u=T("Sui");console.log(this.positionInfoList,"###this.positionInfoList"),this.positionInfoList.forEach(e=>{var g,S;const a=((g=t[e.coinA.address])==null?void 0:g.price)||"",n=((S=t[e.coinB.address])==null?void 0:S.price)||"",_=new i(a).mul(new i(e==null?void 0:e.amountA)).toString(),f=new i(n).mul(new i(e==null?void 0:e.amountB)).toString(),P=2,h=2,L=A(_,P),p=A(f,h),q=a&&n?new i(L).add(new i(p)).toString():"",s=e.myLiquidity,o=e.total_supply;console.log(s,o,"####totalLiquidity");let c=0;s>0&&o>0&&(c=new i(s).mul(Math.pow(10,e.lpInfo.decimals)).div(new i(o)).mul(100).toNumber()),console.log(c,"##myShare");const b=new i(1).div(Math.pow(10,e.decimals)).toNumber();let d=0;c>1?d=A(c,2):c>0&&c<b?d=`<${b}`:d=O(c,1);const m={tick_lower_index:e.tick_lower_index,tick_upper_index:e.tick_upper_index,current_sqrt_price:e.object.current_sqrt_price,liquidity:o},l=u.getCoinAmountFromLiquidity({pool:{current_sqrt_price:e.object.current_sqrt_price,...e},position:m,roundUp:!1});console.log(l,"poolAmountInfo##");const j=new i(a).mul(new i(l==null?void 0:l.coinaAmount)).toString(),k=new i(n).mul(new i(l==null?void 0:l.coinbAmount)).toString(),y=A(j,P),w=A(k,h);console.log(l,"###poolAmountInfo"),console.log(c,"###myShare"),console.log(_,f,"##myPosition"),this.positionInfoObj[e.id]={...this.positionInfoObj[e.id],myAmountAUSD:L,myAmountBUSD:p,myLiquidityUSD:q,myShare:d,poolAmoutnA:y,poolAmoutnB:w},console.log(this.positionInfoObj,"###this.positionInfoObj")})},async updatePositionItem(t){var U,B;const u=M("Sui"),e=T("Sui"),a=await u.getAutoPool(t);console.log("newPoolInfo:",a),console.log("this.positionInfoObj[id]:",this.positionInfoObj[t]);const n={...this.positionInfoObj[t],autoPoolPositionInfo:a.positins[0]},_=await u.getLpBalance(n.lp_token_type),f=(await e.getTokenListByCoinType([n.lp_token_type]))[0];console.log(_,"###balance updatePositionItem");const P=n.autoPoolPositionInfo.tick_lower_index,h=n.autoPoolPositionInfo.tick_upper_index,L={tick_lower_index:P,tick_upper_index:h,current_sqrt_price:n.object.current_sqrt_price,liquidity:_},p=e.getCoinAmountFromLiquidity({pool:{current_sqrt_price:n.object.current_sqrt_price,...n},position:L,roundUp:!1});console.log(p,"amountInfo###");const q=p.coinaAmount,s=p.coinbAmount,{RATES:o}=this.getPoolStore,c=a.total_supply,b=2,d=2,m=((U=o[n.coinA.address])==null?void 0:U.price)||0,l=((B=o[n.coinB.address])==null?void 0:B.price)||0,j=new i(m).mul(new i(p==null?void 0:p.coinaAmount)).toString(),k=new i(l).mul(new i(p==null?void 0:p.coinbAmount)).toString();console.log(j,k,"poolAmountAUSD##");const y=A(j,b),w=A(k,d);let g=new i(0);Number(_)>0&&(g=new i(_).div(Math.pow(10,f.decimals)));const S=new i(g).mul(Math.pow(10,n.lpInfo.decimals)).div(new i(c)).mul(100).toNumber();let I=0;const x=new i(1).div(Math.pow(10,n.decimals)).toNumber();S>1?I=A(S,2):S>0&&S<x?I=`<${x}`:I=O(S,1),this.positionInfoObj[t]={...n,tick_lower_index:P,tick_upper_index:h,current_sqrt_price:n.object.current_sqrt_price,myLiquidity:A(C(_,f.decimals),2),amountA:q,amountB:s,myShare:I,myAmountAUSD:y,myAmountBUSD:w},console.log(this.positionInfoObj[t],"###this.positionInfoObj[id]")},async getAutoPoolAPY(){const{data:t}=await fetch(`${r.Sui.api}/v2/sui/auto_pools`).then(u=>u.json());t&&t.pools&&t.pools.length>0&&(this.apyObj=Object.fromEntries(t.pools.map((u,e)=>[u.object_id,{...u,apr:O(u.apr.replace("%",""),2)+"%"}])),console.log(this.apyObj,"data##"))}}});export{M as a,oo as u};
